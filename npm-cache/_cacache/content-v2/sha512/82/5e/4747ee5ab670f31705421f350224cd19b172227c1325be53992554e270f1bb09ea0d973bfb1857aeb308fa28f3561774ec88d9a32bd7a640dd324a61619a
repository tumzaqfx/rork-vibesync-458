{"_id":"@expo/sudo-prompt","_rev":"11-07a562c311b5da572d8b1d3874f07328","name":"@expo/sudo-prompt","dist-tags":{"latest":"9.3.2"},"versions":{"9.3.2":{"name":"@expo/sudo-prompt","version":"9.3.2","keywords":["sudo","os","dialog","prompt","command","exec","user access control","UAC","privileges","administrative","elevate","run as administrator"],"author":{"name":"Joran Dirk Greef"},"license":"MIT","_id":"@expo/sudo-prompt@9.3.2","maintainers":[{"name":"fiber-god","email":"datwheat@gmail.com"},{"name":"betoatexpo","email":"beto@expo.io"},{"name":"ide","email":"ide+npm@jameside.com"},{"name":"brentvatne","email":"brentvatne@gmail.com"},{"name":"evanbacon","email":"baconbrix@gmail.com"},{"name":"quinlanj","email":"quinlanjung@gmail.com"},{"name":"expoadmin","email":"support@expo.io"},{"name":"tsapeta","email":"npm@tsapeta.com"},{"name":"exponent","email":"exponent.team@gmail.com"},{"name":"wschurman","email":"wschurman@gmail.com"},{"name":"bycedric","email":"me@bycedric.com"},{"name":"lukmccall","email":"kosmatylukasz@gmail.com"},{"name":"jonsamp","email":"sampjon@gmail.com"},{"name":"princefleaswallow","email":"mhampton@hey.com"},{"name":"kudochien","email":"ckchien@gmail.com"},{"name":"keith-kurak","email":"keith@expo.io"},{"name":"alanhughes","email":"hughesno1@gmail.com"},{"name":"simek","email":"gosimek@gmail.com"},{"name":"gabrieldonadel","email":"donadeldev@gmail.com"},{"name":"szdziedzic","email":"szymon.dziedzic@swmansion.com"},{"name":"douglowder","email":"douglowder@mac.com"},{"name":"kadikraman","email":"hellokadi@gmail.com"},{"name":"aleqsio","email":"mikucki@gmail.com"},{"name":"radoslawkrzemien","email":"radoslaw.krzemien@swmansion.com"},{"name":"expo-bot","email":"brent+expobotnpm@expo.io"},{"name":"philpl","email":"phil@kitten.sh"},{"name":"marklawlor","email":"mwlawlor@gmail.com"}],"homepage":"https://github.com/expo/sudo-prompt","bugs":{"url":"https://github.com/expo/sudo-prompt/issues"},"dist":{"shasum":"0fd2813402a42988e49145cab220e25bea74b308","tarball":"https://registry.npmjs.org/@expo/sudo-prompt/-/sudo-prompt-9.3.2.tgz","fileCount":7,"integrity":"sha512-HHQigo3rQWKMDzYDLkubN5WQOYXJJE2eNqIQC2axC2iO3mHdwnIR7FgZVvHWtBwAdzBgAP0ECp8KqS8TiMKvgw==","signatures":[{"sig":"MEQCIE6Xd8DpF6D45VRt+DOsNe6OH+EmpeTsofDasikY2cPtAiAwotgJUzWHPr3ao7Rl5DaoEg2XCCm6xpoehE6IBQ5X+A==","keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"}],"unpackedSize":45232},"main":"index.js","types":"index.d.ts","public":true,"gitHead":"b43b811c2657172847dfbc9ba4d56185c6c76bf8","scripts":{},"_npmUser":{"name":"philpl","email":"phil@kitten.sh"},"repository":{"url":"git+https://github.com/expo/sudo-prompt.git","type":"git"},"_npmVersion":"10.9.0","description":"Run a command using sudo, prompting the user with an OS dialog if necessary","directories":{},"_nodeVersion":"22.11.0","publishConfig":{"access":"public"},"_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/sudo-prompt_9.3.2_1737625511893_0.7645354651697307","host":"s3://npm-registry-packages-npm-production"}}},"time":{"created":"2025-01-23T09:45:11.768Z","modified":"2025-09-19T22:51:58.175Z","9.3.2":"2025-01-23T09:45:12.071Z"},"bugs":{"url":"https://github.com/expo/sudo-prompt/issues"},"author":{"name":"Joran Dirk Greef"},"license":"MIT","homepage":"https://github.com/expo/sudo-prompt","keywords":["sudo","os","dialog","prompt","command","exec","user access control","UAC","privileges","administrative","elevate","run as administrator"],"repository":{"url":"git+https://github.com/expo/sudo-prompt.git","type":"git"},"description":"Run a command using sudo, prompting the user with an OS dialog if necessary","maintainers":[{"email":"ide+npm@jameside.com","name":"ide"},{"email":"brentvatne@gmail.com","name":"brentvatne"},{"email":"baconbrix@gmail.com","name":"evanbacon"},{"email":"support@expo.io","name":"expoadmin"},{"email":"exponent.team@gmail.com","name":"exponent"},{"email":"me@bycedric.com","name":"bycedric"},{"email":"ckchien@gmail.com","name":"kudochien"},{"email":"hughesno1@gmail.com","name":"alanhughes"},{"email":"brent+expobotnpm@expo.io","name":"expo-bot"},{"email":"wschurman@gmail.com","name":"wschurman"}],"readme":"# sudo-prompt\n\n> [!NOTE]\n> This is a fork at [`expo/sude-prompt`](https://github.com/expo/sudo-prompt) to resolve deprecated Node APIs.\n> Upstreams:\n> - [`@vscode/sudo-prompt`](https://github.com/bpasero/sudo-prompt)\n> - [`sudo-prompt`](https://github.com/jorangreef/sudo-prompt) (deprecated)\n\nRun a non-graphical terminal command using `sudo`, prompting the user with a graphical OS dialog if necessary. Useful for background Node.js applications or native Electron apps that need `sudo`.\n\n## Cross-Platform\n`sudo-prompt` provides a native OS dialog prompt on **macOS**, **Linux** and **Windows**.\n\n![macOS](https://raw.githubusercontent.com/jorangreef/sudo-prompt/master/macos.png)\n\n![Linux](https://raw.githubusercontent.com/jorangreef/sudo-prompt/master/linux.png)\n\n![Windows](https://raw.githubusercontent.com/jorangreef/sudo-prompt/master/windows.png)\n\n## Installation\n`sudo-prompt` has no external dependencies and does not require any native bindings.\n```\nnpm install sudo-prompt\n```\n\n## Usage\nNote: Your command should not start with the `sudo` prefix.\n```javascript\nvar sudo = require('sudo-prompt');\nvar options = {\n  name: 'Electron',\n  icns: '/Applications/Electron.app/Contents/Resources/Electron.icns', // (optional)\n};\nsudo.exec('echo hello', options,\n  function(error, stdout, stderr) {\n    if (error) throw error;\n    console.log('stdout: ' + stdout);\n  }\n);\n```\n\n`sudo-prompt` will use `process.title` as `options.name` if `options.name` is not provided. `options.name` must be alphanumeric only (spaces are supported) and at most 70 characters.\n\n`sudo-prompt` will preserve the current working directory on all platforms. Environment variables can be set explicitly using `options.env`.\n\n**`sudo-prompt.exec()` is different to `child-process.exec()` in that no child process is returned (due to platform and permissions constraints).**\n\n## Behavior\nOn macOS, `sudo-prompt` should behave just like the `sudo` command in the shell. If your command does not work with the `sudo` command in the shell (perhaps because it uses `>` redirection to a restricted file), then it may not work with `sudo-prompt`. However, it is still possible to use sudo-prompt to get a privileged shell, [see this closed issue for more information](https://github.com/jorangreef/sudo-prompt/issues/1).\n\nOn Linux, `sudo-prompt` will use either `pkexec` or `kdesudo` to show the password prompt and run your command. Where possible, `sudo-prompt` will try and get these to mimic `sudo`. Depending on which binary is used, and due to the limitations of some binaries, the name of your program or the command itself may be displayed to your user. `sudo-prompt` will not use `gksudo` since `gksudo` does not support concurrent prompts. Passing `options.icns` is currently not supported by `sudo-prompt` on Linux. Patches are welcome to add support for icons based on `polkit`.\n\nOn Windows, `sudo-prompt` will elevate your command using User Account Control (UAC). Passing `options.name` or `options.icns` is currently not supported by `sudo-prompt` on Windows.\n\n## Non-graphical terminal commands only\nJust as you should never use `sudo` to launch any graphical applications, you should never use `sudo-prompt` to launch any graphical applications. Doing so could cause files in your home directory to become owned by root. `sudo-prompt` is explicitly designed to launch non-graphical terminal commands. For more information, [read this post](http://www.psychocats.net/ubuntu/graphicalsudo).\n\n## Concurrency\nOn systems where the user has opted to have `tty-tickets` enabled (most systems), each call to `exec()` will result in a separate password prompt. Where `tty-tickets` are disabled, subsequent calls to `exec()` will still require a password prompt, even where the user's `sudo` timestamp file remains valid, due to edge cases with `sudo` itself, [see this discussion for more information](https://github.com/jorangreef/sudo-prompt/pull/76).\n\nYou should never rely on `sudo-prompt` to execute your calls in order. If you need to enforce ordering of calls, then you should explicitly order your calls in your application. Where your commands are short-lived, you should always queue your calls to `exec()` to make sure your user is not overloaded with password prompts.\n\n## Invalidating the timestamp\nOn macOS and Linux, you can invalidate the user's `sudo` timestamp file to force the prompt to appear by running the following command in your terminal:\n\n```sh\n$ sudo -k\n```\n","readmeFilename":"README.md"}