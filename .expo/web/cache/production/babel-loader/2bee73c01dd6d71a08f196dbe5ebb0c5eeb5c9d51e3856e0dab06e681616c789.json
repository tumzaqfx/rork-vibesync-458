{"ast":null,"code":"\"use strict\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"screen\",\"params\",\"action\",\"href\"],_excluded2=[\"variant\",\"color\",\"android_ripple\",\"style\",\"children\"];import{useLinkProps,useTheme}from'@react-navigation/native';import Color from'color';import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{PlatformPressable}from\"./PlatformPressable.js\";import{Text}from\"./Text.js\";import{jsx as _jsx}from\"react/jsx-runtime\";const BUTTON_RADIUS=40;export function Button(props){if('screen'in props||'action'in props){return _jsx(ButtonLink,Object.assign({},props));}else{return _jsx(ButtonBase,Object.assign({},props));}}function ButtonLink(_ref){let{screen,params,action,href}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const props=useLinkProps({screen,params,action,href});return _jsx(ButtonBase,Object.assign({},rest,props));}function ButtonBase(_ref2){let{variant='tinted',color:customColor,android_ripple,style,children}=_ref2,rest=_objectWithoutPropertiesLoose(_ref2,_excluded2);const{colors,fonts}=useTheme();const color=customColor??colors.primary;let backgroundColor;let textColor;switch(variant){case'plain':backgroundColor='transparent';textColor=color;break;case'tinted':backgroundColor=Color(color).fade(0.85).string();textColor=color;break;case'filled':backgroundColor=color;textColor=Color(color).isDark()?'white':Color(color).darken(0.71).string();break;}return _jsx(PlatformPressable,Object.assign({},rest,{android_ripple:Object.assign({radius:BUTTON_RADIUS,color:Color(textColor).fade(0.85).string()},android_ripple),pressOpacity:false?undefined:1,hoverEffect:{color:textColor},style:[{backgroundColor},styles.button,style],children:_jsx(Text,{style:[{color:textColor},fonts.regular,styles.text],children:children})}));}const styles=StyleSheet.create({button:{paddingHorizontal:24,paddingVertical:10,borderRadius:BUTTON_RADIUS},text:{fontSize:14,lineHeight:20,letterSpacing:0.1,textAlign:'center'}});","map":{"version":3,"names":["useLinkProps","useTheme","Color","React","Platform","StyleSheet","PlatformPressable","Text","jsx","_jsx","BUTTON_RADIUS","Button","props","ButtonLink","Object","assign","ButtonBase","_ref","screen","params","action","href","rest","_objectWithoutPropertiesLoose","_excluded","_ref2","variant","color","customColor","android_ripple","style","children","_excluded2","colors","fonts","primary","backgroundColor","textColor","fade","string","isDark","darken","radius","pressOpacity","undefined","hoverEffect","styles","button","regular","text","create","paddingHorizontal","paddingVertical","borderRadius","fontSize","lineHeight","letterSpacing","textAlign"],"sources":["/home/user/rork-vibesync-458/node_modules/@react-navigation/elements/src/Button.tsx"],"sourcesContent":["import {\n  type LinkProps,\n  useLinkProps,\n  useTheme,\n} from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\n\nimport {\n  PlatformPressable,\n  type Props as PlatformPressableProps,\n} from './PlatformPressable';\nimport { Text } from './Text';\n\ntype ButtonBaseProps = Omit<PlatformPressableProps, 'children'> & {\n  variant?: 'plain' | 'tinted' | 'filled';\n  color?: string;\n  children: string | string[];\n};\n\ntype ButtonLinkProps<ParamList extends ReactNavigation.RootParamList> =\n  LinkProps<ParamList> & Omit<ButtonBaseProps, 'onPress'>;\n\nconst BUTTON_RADIUS = 40;\n\nexport function Button<ParamList extends ReactNavigation.RootParamList>(\n  props: ButtonLinkProps<ParamList>\n): React.JSX.Element;\n\nexport function Button(props: ButtonBaseProps): React.JSX.Element;\n\nexport function Button<ParamList extends ReactNavigation.RootParamList>(\n  props: ButtonBaseProps | ButtonLinkProps<ParamList>\n) {\n  if ('screen' in props || 'action' in props) {\n    // @ts-expect-error: This is already type-checked by the prop types\n    return <ButtonLink {...props} />;\n  } else {\n    return <ButtonBase {...props} />;\n  }\n}\n\nfunction ButtonLink<ParamList extends ReactNavigation.RootParamList>({\n  screen,\n  params,\n  action,\n  href,\n  ...rest\n}: ButtonLinkProps<ParamList>) {\n  // @ts-expect-error: This is already type-checked by the prop types\n  const props = useLinkProps({ screen, params, action, href });\n\n  return <ButtonBase {...rest} {...props} />;\n}\n\nfunction ButtonBase({\n  variant = 'tinted',\n  color: customColor,\n  android_ripple,\n  style,\n  children,\n  ...rest\n}: ButtonBaseProps) {\n  const { colors, fonts } = useTheme();\n\n  const color = customColor ?? colors.primary;\n\n  let backgroundColor;\n  let textColor;\n\n  switch (variant) {\n    case 'plain':\n      backgroundColor = 'transparent';\n      textColor = color;\n      break;\n    case 'tinted':\n      backgroundColor = Color(color).fade(0.85).string();\n      textColor = color;\n      break;\n    case 'filled':\n      backgroundColor = color;\n      textColor = Color(color).isDark()\n        ? 'white'\n        : Color(color).darken(0.71).string();\n      break;\n  }\n\n  return (\n    <PlatformPressable\n      {...rest}\n      android_ripple={{\n        radius: BUTTON_RADIUS,\n        color: Color(textColor).fade(0.85).string(),\n        ...android_ripple,\n      }}\n      pressOpacity={Platform.OS === 'ios' ? undefined : 1}\n      hoverEffect={{ color: textColor }}\n      style={[{ backgroundColor }, styles.button, style]}\n    >\n      <Text style={[{ color: textColor }, fonts.regular, styles.text]}>\n        {children}\n      </Text>\n    </PlatformPressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    paddingHorizontal: 24,\n    paddingVertical: 10,\n    borderRadius: BUTTON_RADIUS,\n  },\n  text: {\n    fontSize: 14,\n    lineHeight: 20,\n    letterSpacing: 0.1,\n    textAlign: 'center',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}