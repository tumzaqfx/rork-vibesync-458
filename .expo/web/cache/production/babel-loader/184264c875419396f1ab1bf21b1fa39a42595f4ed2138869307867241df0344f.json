{"ast":null,"code":"export function requireNativeModule(moduleName){const nativeModule=requireOptionalNativeModule(moduleName);if(nativeModule!=null){return nativeModule;}if(false){return{};}throw new Error(`Cannot find native module '${moduleName}'`);}export function requireOptionalNativeModule(moduleName){if(typeof globalThis.ExpoDomWebView==='object'&&globalThis?.expo?.modules!=null){return globalThis.expo?.modules?.[moduleName]??null;}return null;}","map":{"version":3,"names":["requireNativeModule","moduleName","nativeModule","requireOptionalNativeModule","Error","globalThis","ExpoDomWebView","expo","modules"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-modules-core/src/requireNativeModule.web.ts"],"sourcesContent":["export function requireNativeModule<ModuleType = any>(moduleName: string): ModuleType {\n  const nativeModule = requireOptionalNativeModule<ModuleType>(moduleName);\n  if (nativeModule != null) {\n    return nativeModule;\n  }\n  if (typeof window === 'undefined') {\n    // For SSR, we expect not to have native modules available, but to avoid crashing from SSR resolutions, we return an empty object.\n    return {} as ModuleType;\n  }\n  throw new Error(`Cannot find native module '${moduleName}'`);\n}\n\nexport function requireOptionalNativeModule<ModuleType = any>(\n  moduleName: string\n): ModuleType | null {\n  if (typeof globalThis.ExpoDomWebView === 'object' && globalThis?.expo?.modules != null) {\n    return globalThis.expo?.modules?.[moduleName] ?? null;\n  }\n  return null;\n}\n"],"mappings":"AAAA,MAAO,SAAS,CAAAA,mBAAmBA,CAAmBC,UAAkB,CAAc,CACpF,KAAM,CAAAC,YAAY,CAAGC,2BAA2B,CAAaF,UAAU,CAAC,CACxE,GAAIC,YAAY,EAAI,IAAI,CAAE,CACxB,MAAO,CAAAA,YAAY,CACrB,CACA,SAAmC,CAEjC,MAAO,CAAC,CAAC,CACX,CACA,KAAM,IAAI,CAAAE,KAAK,CAAC,8BAA8BH,UAAU,GAAG,CAAC,CAC9D,CAEA,MAAO,SAAS,CAAAE,2BAA2BA,CACzCF,UAAkB,CACC,CACnB,GAAI,MAAO,CAAAI,UAAU,CAACC,cAAc,GAAK,QAAQ,EAAID,UAAU,EAAEE,IAAI,EAAEC,OAAO,EAAI,IAAI,CAAE,CACtF,MAAO,CAAAH,UAAU,CAACE,IAAI,EAAEC,OAAO,GAAGP,UAAU,CAAC,EAAI,IAAI,CACvD,CACA,MAAO,KAAI,CACb","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}