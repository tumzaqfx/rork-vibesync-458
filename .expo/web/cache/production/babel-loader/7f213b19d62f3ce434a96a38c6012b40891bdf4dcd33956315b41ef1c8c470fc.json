{"ast":null,"code":"\"use strict\";'use client';var _reactJsxRuntime=require(\"react/jsx-runtime\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.sortRoutes=exports.sortRoutesWithInitial=exports.LocalRouteParamsContext=void 0;exports.useRouteNode=useRouteNode;exports.useContextKey=useContextKey;exports.Route=Route;const react_1=require(\"react\");const matchers_1=require(\"./matchers\");const sortRoutes_1=require(\"./sortRoutes\");Object.defineProperty(exports,\"sortRoutesWithInitial\",{enumerable:true,get:function(){return sortRoutes_1.sortRoutesWithInitial;}});Object.defineProperty(exports,\"sortRoutes\",{enumerable:true,get:function(){return sortRoutes_1.sortRoutes;}});const CurrentRouteContext=(0,react_1.createContext)(null);exports.LocalRouteParamsContext=(0,react_1.createContext)({});if(false){CurrentRouteContext.displayName='RouteNode';}function useRouteNode(){return(0,react_1.useContext)(CurrentRouteContext);}function useContextKey(){const node=useRouteNode();if(node==null){throw new Error('No filename found. This is likely a bug in expo-router.');}return(0,matchers_1.getContextKey)(node.contextKey);}function Route({children,node,route}){return _reactJsxRuntime.jsx(exports.LocalRouteParamsContext.Provider,{value:route?.params,children:_reactJsxRuntime.jsx(CurrentRouteContext.Provider,{value:node,children:children})});}","map":{"version":3,"names":["_reactJsxRuntime","require","exports","useRouteNode","useContextKey","Route","react_1","matchers_1","sortRoutes_1","Object","defineProperty","enumerable","get","sortRoutesWithInitial","sortRoutes","CurrentRouteContext","createContext","LocalRouteParamsContext","displayName","useContext","node","Error","getContextKey","contextKey","children","route","jsx","Provider","value","params"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-router/src/Route.tsx"],"sourcesContent":["'use client';\n\nimport { createContext, useContext, type ComponentType, type PropsWithChildren } from 'react';\n\nimport { getContextKey } from './matchers';\nimport { sortRoutesWithInitial, sortRoutes } from './sortRoutes';\nimport { type ErrorBoundaryProps } from './views/Try';\n\nexport type DynamicConvention = { name: string; deep: boolean; notFound?: boolean };\n\nexport type LoadedRoute = {\n  ErrorBoundary?: ComponentType<ErrorBoundaryProps>;\n  default?: ComponentType<any>;\n  unstable_settings?: Record<string, any>;\n  getNavOptions?: (args: any) => any;\n  generateStaticParams?: (props: {\n    params?: Record<string, string | string[]>;\n  }) => Record<string, string | string[]>[];\n};\n\nexport type RouteNode = {\n  /** The type of RouteNode */\n  type: 'route' | 'api' | 'layout' | 'redirect' | 'rewrite';\n  /** Load a route into memory. Returns the exports from a route. */\n  loadRoute: () => Partial<LoadedRoute>;\n  /** Loaded initial route name. */\n  initialRouteName?: string;\n  /** Nested routes */\n  children: RouteNode[];\n  /** Is the route a dynamic path */\n  dynamic: null | DynamicConvention[];\n  /** `index`, `error-boundary`, etc. */\n  route: string;\n  /** Context Module ID, used for matching children. */\n  contextKey: string;\n  /** Redirect Context Module ID, used for matching children. */\n  destinationContextKey?: string;\n  /** Is the redirect permanent. */\n  permanent?: boolean;\n  /** Added in-memory */\n  generated?: boolean;\n  /** Internal screens like the directory or the auto 404 should be marked as internal. */\n  internal?: boolean;\n  /** File paths for async entry modules that should be included in the initial chunk request to ensure the runtime JavaScript matches the statically rendered HTML representation. */\n  entryPoints?: string[];\n  /** HTTP methods for this route. If undefined, assumed to be ['GET'] */\n  methods?: string[];\n};\n\nconst CurrentRouteContext = createContext<RouteNode | null>(null);\nexport const LocalRouteParamsContext = createContext<\n  Record<string, string | undefined> | undefined\n>({});\n\nif (process.env.NODE_ENV !== 'production') {\n  CurrentRouteContext.displayName = 'RouteNode';\n}\n\n/** Return the RouteNode at the current contextual boundary. */\nexport function useRouteNode(): RouteNode | null {\n  return useContext(CurrentRouteContext);\n}\n\nexport function useContextKey(): string {\n  const node = useRouteNode();\n  if (node == null) {\n    throw new Error('No filename found. This is likely a bug in expo-router.');\n  }\n  return getContextKey(node.contextKey);\n}\n\nexport type RouteProps = PropsWithChildren<{\n  node: RouteNode;\n  route?: { params: Record<string, string | undefined> };\n}>;\n\n/** Provides the matching routes and filename to the children. */\nexport function Route({ children, node, route }: RouteProps) {\n  return (\n    <LocalRouteParamsContext.Provider value={route?.params}>\n      <CurrentRouteContext.Provider value={node}>{children}</CurrentRouteContext.Provider>\n    </LocalRouteParamsContext.Provider>\n  );\n}\n\nexport { sortRoutesWithInitial, sortRoutes };\n"],"mappings":"aAAA,YAAY,CAAC,IAAAA,gBAAA,CAAAC,OAAA,sB,iJA2DbC,OAAA,CAAAC,YAAA,CAAAA,YAAA,CAIAD,OAAA,CAAAE,aAAA,CAAAA,aAAA,CAcAF,OAAA,CAAAG,KAAA,CAAAA,KAAA,CA3EA,MAAAC,OAAA,CAAAL,OAAA,UAEA,MAAAM,UAAA,CAAAN,OAAA,eACA,MAAAO,YAAA,CAAAP,OAAA,iBAgFSQ,MAAA,CAAAC,cAAA,CAAAR,OAAA,0BAAAS,UAAA,MAAAC,GAAA,SAAAA,CAAA,QAhFA,CAAAJ,YAAA,CAAAK,qBAAqB,KAgFEJ,MAAA,CAAAC,cAAA,CAAAR,OAAA,eAAAS,UAAA,MAAAC,GAAA,SAAAA,CAAA,QAhFA,CAAAJ,YAAA,CAAAM,UAAU,KA4C1C,KAAM,CAAAC,mBAAmB,CAAG,GAAAT,OAAA,CAAAU,aAAa,EAAmB,IAAI,CAAC,CACpDd,OAAA,CAAAe,uBAAuB,CAAG,GAAAX,OAAA,CAAAU,aAAa,EAElD,EAAE,CAAC,CAEL,SAA2C,CACzCD,mBAAmB,CAACG,WAAW,CAAG,WAAW,CAC/C,CAGA,QAAgB,CAAAf,YAAYA,CAAA,EAC1B,MAAO,GAAAG,OAAA,CAAAa,UAAU,EAACJ,mBAAmB,CAAC,CACxC,CAEA,QAAgB,CAAAX,aAAaA,CAAA,EAC3B,KAAM,CAAAgB,IAAI,CAAGjB,YAAY,EAAE,CAC3B,GAAIiB,IAAI,EAAI,IAAI,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,yDAAyD,CAAC,CAC5E,CACA,MAAO,GAAAd,UAAA,CAAAe,aAAa,EAACF,IAAI,CAACG,UAAU,CAAC,CACvC,CAQA,QAAgB,CAAAlB,KAAKA,CAAC,CAAEmB,QAAQ,CAAEJ,IAAI,CAAEK,KAAK,CAAc,EACzD,MACE,CAAAzB,gBAAA,CAAA0B,GAAA,CAACxB,OAAA,CAAAe,uBAAuB,CAACU,QAAQ,EAACC,KAAK,CAAEH,KAAK,EAAEI,MAAO,CAAAL,QAAA,CACrDxB,gBAAA,CAAA0B,GAAA,CAACX,mBAAmB,CAACY,QAAQ,EAACC,KAAK,CAAER,IAAK,CAAAI,QAAA,CAAEA,QAAQ,CAA+B,CACrF,CAAkC,CAAC,CAEvC","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}