{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"shouldCancelWhenOutside\",\"maxDeltaX\",\"maxDeltaY\",\"numberOfTaps\",\"minDurationMs\",\"maxDelayMs\",\"maxDurationMs\",\"maxDist\",\"minPointers\",\"maxPointers\"];function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import Hammer from'@egjs/hammerjs';import DiscreteGestureHandler from'./DiscreteGestureHandler';import{isnan}from'./utils';class TapGestureHandler extends DiscreteGestureHandler{constructor(...args){super(...args);_defineProperty(this,\"_shouldFireEndEvent\",null);_defineProperty(this,\"_timer\",void 0);_defineProperty(this,\"_multiTapTimer\",void 0);_defineProperty(this,\"onSuccessfulTap\",ev=>{if(this._getPendingGestures().length){this._shouldFireEndEvent=ev;return;}if(ev.eventType===Hammer.INPUT_END){this.sendEvent(Object.assign({},ev,{eventType:Hammer.INPUT_MOVE}));}this.sendEvent(Object.assign({},ev,{isFinal:true}));this.onGestureEnded(ev);});}get name(){return'tap';}get NativeGestureClass(){return Hammer.Tap;}get maxDelayMs(){return isnan(this.config.maxDelayMs)?300:this.config.maxDelayMs;}simulateCancelEvent(inputData){if(this.isGestureRunning){this.cancelEvent(inputData);}}onGestureActivated(ev){if(this.isGestureRunning){this.onSuccessfulTap(ev);}}onRawEvent(ev){super.onRawEvent(ev);if(!this.hasGestureFailed&&!this.isGestureRunning&&!ev.isFinal){const gesture=this.hammer.get(this.name);if(gesture.options.enable(gesture,ev)){clearTimeout(this._multiTapTimer);this.onStart(ev);this.sendEvent(ev);}}if(ev.isFinal&&ev.maxPointers>1){setTimeout(()=>{if(this.isGestureRunning){this.cancelEvent(ev);}});}if(this.hasGestureFailed){return;}if(ev.isFinal){if(ev.maxPointers>1){setTimeout(()=>{if(this.isGestureRunning){this.cancelEvent(ev);}});}clearTimeout(this._timer);this._timer=setTimeout(()=>{this.hasGestureFailed=true;this.cancelEvent(ev);},this.maxDelayMs);}else if(!this.hasGestureFailed&&!this.isGestureRunning){const gesture=this.hammer.get(this.name);if(gesture.options.enable(gesture,ev)){clearTimeout(this._multiTapTimer);this.onStart(ev);this.sendEvent(ev);}}}getHammerConfig(){return Object.assign({},super.getHammerConfig(),{event:this.name,taps:isnan(this.config.numberOfTaps)?1:this.config.numberOfTaps,interval:this.maxDelayMs,time:isnan(this.config.maxDurationMs)||this.config.maxDurationMs==null?250:this.config.maxDurationMs});}updateGestureConfig(_ref){let{shouldCancelWhenOutside=true,maxDeltaX=Number.NaN,maxDeltaY=Number.NaN,numberOfTaps=1,minDurationMs=525,maxDelayMs=Number.NaN,maxDurationMs=Number.NaN,maxDist=2,minPointers=1,maxPointers=1}=_ref,props=_objectWithoutPropertiesLoose(_ref,_excluded);return super.updateGestureConfig(Object.assign({shouldCancelWhenOutside,numberOfTaps,maxDeltaX,maxDeltaY,minDurationMs,maxDelayMs,maxDist,minPointers,maxPointers},props));}onGestureEnded(...props){clearTimeout(this._timer);super.onGestureEnded(...props);}onWaitingEnded(_gesture){if(this._shouldFireEndEvent){this.onSuccessfulTap(this._shouldFireEndEvent);this._shouldFireEndEvent=null;}}}export default TapGestureHandler;","map":{"version":3,"names":["Hammer","DiscreteGestureHandler","isnan","TapGestureHandler","constructor","args","_defineProperty","ev","_getPendingGestures","length","_shouldFireEndEvent","eventType","INPUT_END","sendEvent","Object","assign","INPUT_MOVE","isFinal","onGestureEnded","name","NativeGestureClass","Tap","maxDelayMs","config","simulateCancelEvent","inputData","isGestureRunning","cancelEvent","onGestureActivated","onSuccessfulTap","onRawEvent","hasGestureFailed","gesture","hammer","get","options","enable","clearTimeout","_multiTapTimer","onStart","maxPointers","setTimeout","_timer","getHammerConfig","event","taps","numberOfTaps","interval","time","maxDurationMs","updateGestureConfig","_ref","shouldCancelWhenOutside","maxDeltaX","Number","NaN","maxDeltaY","minDurationMs","maxDist","minPointers","props","_objectWithoutPropertiesLoose","_excluded","onWaitingEnded","_gesture"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-gesture-handler/lib/module/web_hammer/TapGestureHandler.ts"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { HammerInputExt } from './GestureHandler';\nimport { isnan } from './utils';\n\nclass TapGestureHandler extends DiscreteGestureHandler {\n  private _shouldFireEndEvent: HammerInputExt | null = null;\n  private _timer: any;\n  private _multiTapTimer: any; // TODO unused?\n  get name() {\n    return 'tap';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Tap;\n  }\n\n  get maxDelayMs() {\n    // @ts-ignore TODO(TS) trace down config\n    return isnan(this.config.maxDelayMs) ? 300 : this.config.maxDelayMs;\n  }\n\n  simulateCancelEvent(inputData: HammerInputExt) {\n    if (this.isGestureRunning) {\n      this.cancelEvent(inputData);\n    }\n  }\n\n  onGestureActivated(ev: HammerInputExt) {\n    if (this.isGestureRunning) {\n      this.onSuccessfulTap(ev);\n    }\n  }\n\n  onSuccessfulTap = (ev: HammerInputExt) => {\n    if (this._getPendingGestures().length) {\n      this._shouldFireEndEvent = ev;\n      return;\n    }\n    if (ev.eventType === Hammer.INPUT_END) {\n      this.sendEvent({ ...ev, eventType: Hammer.INPUT_MOVE });\n    }\n    // When handler gets activated it will turn into State.END immediately.\n    this.sendEvent({ ...ev, isFinal: true });\n    this.onGestureEnded(ev);\n  };\n\n  onRawEvent(ev: HammerInput) {\n    super.onRawEvent(ev);\n\n    // Attempt to create a touch-down event by checking if a valid tap hasn't started yet, then validating the input.\n    if (\n      !this.hasGestureFailed &&\n      !this.isGestureRunning &&\n      // Prevent multi-pointer events from misfiring.\n      !ev.isFinal\n    ) {\n      // Tap Gesture start event\n      const gesture = this.hammer!.get(this.name);\n      // @ts-ignore TODO(TS) trace down config\n      if (gesture.options.enable(gesture, ev)) {\n        clearTimeout(this._multiTapTimer);\n\n        this.onStart(ev);\n        this.sendEvent(ev);\n      }\n    }\n    if (ev.isFinal && ev.maxPointers > 1) {\n      setTimeout(() => {\n        // Handle case where one finger presses slightly\n        // after the first finger on a multi-tap event\n        if (this.isGestureRunning) {\n          this.cancelEvent(ev);\n        }\n      });\n    }\n\n    if (this.hasGestureFailed) {\n      return;\n    }\n    // Hammer doesn't send a `cancel` event for taps.\n    // Manually fail the event.\n    if (ev.isFinal) {\n      // Handle case where one finger presses slightly\n      // after the first finger on a multi-tap event\n      if (ev.maxPointers > 1) {\n        setTimeout(() => {\n          if (this.isGestureRunning) {\n            this.cancelEvent(ev);\n          }\n        });\n      }\n\n      // Clear last timer\n      clearTimeout(this._timer);\n      // Create time out for multi-taps.\n      this._timer = setTimeout(() => {\n        this.hasGestureFailed = true;\n        this.cancelEvent(ev);\n      }, this.maxDelayMs);\n    } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n      // Tap Gesture start event\n      const gesture = this.hammer!.get(this.name);\n      // @ts-ignore TODO(TS) trace down config\n      if (gesture.options.enable(gesture, ev)) {\n        clearTimeout(this._multiTapTimer);\n\n        this.onStart(ev);\n        this.sendEvent(ev);\n      }\n    }\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      event: this.name,\n      // @ts-ignore TODO(TS) trace down config\n      taps: isnan(this.config.numberOfTaps) ? 1 : this.config.numberOfTaps,\n      interval: this.maxDelayMs,\n      time:\n        // @ts-ignore TODO(TS) trace down config\n        isnan(this.config.maxDurationMs) || this.config.maxDurationMs == null\n          ? 250\n          : // @ts-ignore TODO(TS) trace down config\n            this.config.maxDurationMs,\n    };\n  }\n\n  updateGestureConfig({\n    shouldCancelWhenOutside = true,\n    maxDeltaX = Number.NaN,\n    maxDeltaY = Number.NaN,\n    numberOfTaps = 1,\n    minDurationMs = 525,\n    maxDelayMs = Number.NaN,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars -- TODO possibly forgotten to use in updateGestureConfig?\n    maxDurationMs = Number.NaN,\n    maxDist = 2,\n    minPointers = 1,\n    maxPointers = 1,\n    ...props\n  }) {\n    return super.updateGestureConfig({\n      shouldCancelWhenOutside,\n      numberOfTaps,\n      maxDeltaX,\n      maxDeltaY,\n      minDurationMs,\n      maxDelayMs,\n      maxDist,\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n\n  onGestureEnded(...props: any) {\n    clearTimeout(this._timer);\n    // @ts-ignore TODO(TS) check how onGestureEnded works\n    super.onGestureEnded(...props);\n  }\n\n  onWaitingEnded(_gesture: any) {\n    if (this._shouldFireEndEvent) {\n      this.onSuccessfulTap(this._shouldFireEndEvent);\n      this._shouldFireEndEvent = null;\n    }\n  }\n}\nexport default TapGestureHandler;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}