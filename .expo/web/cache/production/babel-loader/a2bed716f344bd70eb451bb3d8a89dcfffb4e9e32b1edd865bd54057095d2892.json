{"ast":null,"code":"import{useState}from'react';import AsyncStorage from'@react-native-async-storage/async-storage';import createContextHook from'@nkzw/create-context-hook';import{useMutation,useQueryClient}from'@tanstack/react-query';const API_BASE_URL='https://api.vibesync.app';export const[BackendProvider,useBackend]=createContextHook(()=>{const[state,setState]=useState({isConnected:false,isLoading:false});const queryClient=useQueryClient();const apiCall=async(endpoint,options={})=>{const token=await AsyncStorage.getItem('auth_token');const response=await fetch(`${API_BASE_URL}${endpoint}`,Object.assign({},options,{headers:Object.assign({'Content-Type':'application/json'},token&&{Authorization:`Bearer ${token}`},options.headers)}));if(!response.ok){throw new Error(`API Error: ${response.status}`);}return response.json();};const createPost=useMutation({mutationFn:async postData=>{return apiCall('/posts',{method:'POST',body:JSON.stringify(postData)});},onSuccess:()=>{queryClient.invalidateQueries({queryKey:['posts']});}});const likePost=useMutation({mutationFn:async postId=>{return apiCall(`/posts/${postId}/like`,{method:'POST'});},onSuccess:()=>{queryClient.invalidateQueries({queryKey:['posts']});}});const sendMessage=useMutation({mutationFn:async messageData=>{return apiCall('/messages',{method:'POST',body:JSON.stringify(messageData)});},onSuccess:()=>{queryClient.invalidateQueries({queryKey:['messages']});}});const startLiveStream=useMutation({mutationFn:async streamData=>{return apiCall('/live/start',{method:'POST',body:JSON.stringify(streamData)});}});const endLiveStream=useMutation({mutationFn:async streamId=>{return apiCall(`/live/${streamId}/end`,{method:'POST'});}});const markNotificationRead=useMutation({mutationFn:async notificationId=>{return apiCall(`/notifications/${notificationId}/read`,{method:'POST'});},onSuccess:()=>{queryClient.invalidateQueries({queryKey:['notifications']});}});const searchMusic=async query=>{const YOUTUBE_API_KEY='AIzaSyAdAxbKXCnYMY_mtTeclJYMIP-JM20wEYw';const response=await fetch(`https://www.googleapis.com/youtube/v3/search?part=snippet&type=video&videoCategoryId=10&q=${encodeURIComponent(query)}&key=${YOUTUBE_API_KEY}&maxResults=20`);if(!response.ok){throw new Error('Failed to search music');}const data=await response.json();return data.items.map(item=>({id:item.id.videoId,title:item.snippet.title,artist:item.snippet.channelTitle,albumArt:item.snippet.thumbnails.medium.url,youtubeId:item.id.videoId,duration:0}));};const getVideoDetails=async videoId=>{const YOUTUBE_API_KEY='AIzaSyAdAxbKXCnYMY_mtTeclJYMIP-JM20wEYw';const response=await fetch(`https://www.googleapis.com/youtube/v3/videos?part=contentDetails,snippet&id=${videoId}&key=${YOUTUBE_API_KEY}`);if(!response.ok){throw new Error('Failed to get video details');}return response.json();};return Object.assign({},state,{createPost,likePost,sendMessage,startLiveStream,endLiveStream,markNotificationRead,searchMusic,getVideoDetails,apiCall});});","map":{"version":3,"names":["useState","AsyncStorage","createContextHook","useMutation","useQueryClient","API_BASE_URL","BackendProvider","useBackend","state","setState","isConnected","isLoading","queryClient","apiCall","endpoint","options","token","getItem","response","fetch","Object","assign","headers","Authorization","ok","Error","status","json","createPost","mutationFn","postData","method","body","JSON","stringify","onSuccess","invalidateQueries","queryKey","likePost","postId","sendMessage","messageData","startLiveStream","streamData","endLiveStream","streamId","markNotificationRead","notificationId","searchMusic","query","YOUTUBE_API_KEY","encodeURIComponent","data","items","map","item","id","videoId","title","snippet","artist","channelTitle","albumArt","thumbnails","medium","url","youtubeId","duration","getVideoDetails"],"sources":["/home/user/rork-vibesync-458/hooks/backend-store.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport createContextHook from '@nkzw/create-context-hook';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { Post, User, Message, Notification } from '@/types';\n\ninterface BackendState {\n  isConnected: boolean;\n  isLoading: boolean;\n}\n\nconst API_BASE_URL = 'https://api.vibesync.app'; // Replace with your actual backend URL\n\nexport const [BackendProvider, useBackend] = createContextHook(() => {\n  const [state, setState] = useState<BackendState>({\n    isConnected: false,\n    isLoading: false,\n  });\n  \n  const queryClient = useQueryClient();\n\n  // API Functions\n  const apiCall = async (endpoint: string, options: RequestInit = {}) => {\n    const token = await AsyncStorage.getItem('auth_token');\n    \n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n      ...options,\n      headers: {\n        'Content-Type': 'application/json',\n        ...(token && { Authorization: `Bearer ${token}` }),\n        ...options.headers,\n      },\n    });\n    \n    if (!response.ok) {\n      throw new Error(`API Error: ${response.status}`);\n    }\n    \n    return response.json();\n  };\n\n  // Posts\n  const createPost = useMutation({\n    mutationFn: async (postData: { content: string; mediaType?: string; mediaUrl?: string }) => {\n      return apiCall('/posts', {\n        method: 'POST',\n        body: JSON.stringify(postData),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['posts'] });\n    },\n  });\n\n  const likePost = useMutation({\n    mutationFn: async (postId: string) => {\n      return apiCall(`/posts/${postId}/like`, { method: 'POST' });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['posts'] });\n    },\n  });\n\n  // Messages\n  const sendMessage = useMutation({\n    mutationFn: async (messageData: { recipientId: string; content: string; type: 'text' | 'image' | 'audio' }) => {\n      return apiCall('/messages', {\n        method: 'POST',\n        body: JSON.stringify(messageData),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['messages'] });\n    },\n  });\n\n  // Live Streaming\n  const startLiveStream = useMutation({\n    mutationFn: async (streamData: { title: string; description?: string; category: string }) => {\n      return apiCall('/live/start', {\n        method: 'POST',\n        body: JSON.stringify(streamData),\n      });\n    },\n  });\n\n  const endLiveStream = useMutation({\n    mutationFn: async (streamId: string) => {\n      return apiCall(`/live/${streamId}/end`, { method: 'POST' });\n    },\n  });\n\n  // Notifications\n  const markNotificationRead = useMutation({\n    mutationFn: async (notificationId: string) => {\n      return apiCall(`/notifications/${notificationId}/read`, { method: 'POST' });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['notifications'] });\n    },\n  });\n\n  // Music Integration with YouTube API\n  const searchMusic = async (query: string) => {\n    const YOUTUBE_API_KEY = 'AIzaSyAdAxbKXCnYMY_mtTeclJYMIP-JM20wEYw';\n    const response = await fetch(\n      `https://www.googleapis.com/youtube/v3/search?part=snippet&type=video&videoCategoryId=10&q=${encodeURIComponent(query)}&key=${YOUTUBE_API_KEY}&maxResults=20`\n    );\n    \n    if (!response.ok) {\n      throw new Error('Failed to search music');\n    }\n    \n    const data = await response.json();\n    return data.items.map((item: any) => ({\n      id: item.id.videoId,\n      title: item.snippet.title,\n      artist: item.snippet.channelTitle,\n      albumArt: item.snippet.thumbnails.medium.url,\n      youtubeId: item.id.videoId,\n      duration: 0, // Would need additional API call to get duration\n    }));\n  };\n\n  const getVideoDetails = async (videoId: string) => {\n    const YOUTUBE_API_KEY = 'AIzaSyAdAxbKXCnYMY_mtTeclJYMIP-JM20wEYw';\n    const response = await fetch(\n      `https://www.googleapis.com/youtube/v3/videos?part=contentDetails,snippet&id=${videoId}&key=${YOUTUBE_API_KEY}`\n    );\n    \n    if (!response.ok) {\n      throw new Error('Failed to get video details');\n    }\n    \n    return response.json();\n  };\n\n  return {\n    ...state,\n    // Mutations\n    createPost,\n    likePost,\n    sendMessage,\n    startLiveStream,\n    endLiveStream,\n    markNotificationRead,\n    // Music functions\n    searchMusic,\n    getVideoDetails,\n    // Utility\n    apiCall,\n  };\n});"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}