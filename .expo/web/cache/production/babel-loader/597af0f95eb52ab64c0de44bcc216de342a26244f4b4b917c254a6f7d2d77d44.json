{"ast":null,"code":"\"use strict\";import*as React from'react';import useLatestCallback from'use-latest-callback';import{deepFreeze}from\"./deepFreeze.js\";const createStore=getInitialState=>{const listeners=[];let initialized=false;let state;const getState=()=>{if(initialized){return state;}initialized=true;state=deepFreeze(getInitialState());return state;};let isBatching=false;let didUpdate=false;const setState=newState=>{state=deepFreeze(newState);didUpdate=true;if(!isBatching){listeners.forEach(listener=>listener());}};const subscribe=callback=>{listeners.push(callback);return()=>{const index=listeners.indexOf(callback);if(index>-1){listeners.splice(index,1);}};};const batchUpdates=callback=>{isBatching=true;callback();isBatching=false;if(didUpdate){didUpdate=false;listeners.forEach(listener=>listener());}};return{getState,setState,batchUpdates,subscribe};};export function useSyncState(getInitialState){const store=React.useRef(createStore(getInitialState)).current;const state=React.useSyncExternalStore(store.subscribe,store.getState,store.getState);React.useDebugValue(state);const pendingUpdatesRef=React.useRef([]);const scheduleUpdate=useLatestCallback(callback=>{pendingUpdatesRef.current.push(callback);});const flushUpdates=useLatestCallback(()=>{const pendingUpdates=pendingUpdatesRef.current;pendingUpdatesRef.current=[];if(pendingUpdates.length!==0){store.batchUpdates(()=>{for(const update of pendingUpdates){update();}});}});return{state,getState:store.getState,setState:store.setState,scheduleUpdate,flushUpdates};}","map":{"version":3,"names":["React","useLatestCallback","deepFreeze","createStore","getInitialState","listeners","initialized","state","getState","isBatching","didUpdate","setState","newState","forEach","listener","subscribe","callback","push","index","indexOf","splice","batchUpdates","useSyncState","store","useRef","current","useSyncExternalStore","useDebugValue","pendingUpdatesRef","scheduleUpdate","flushUpdates","pendingUpdates","length","update"],"sources":["/home/user/rork-vibesync-458/node_modules/@react-navigation/core/src/useSyncState.tsx"],"sourcesContent":["import * as React from 'react';\nimport useLatestCallback from 'use-latest-callback';\n\nimport { deepFreeze } from './deepFreeze';\n\nconst createStore = <T,>(getInitialState: () => T) => {\n  const listeners: (() => void)[] = [];\n\n  let initialized = false;\n  let state: T;\n\n  const getState = () => {\n    if (initialized) {\n      return state;\n    }\n\n    initialized = true;\n    state = deepFreeze(getInitialState());\n\n    return state;\n  };\n\n  let isBatching = false;\n  let didUpdate = false;\n\n  const setState = (newState: T) => {\n    state = deepFreeze(newState);\n    didUpdate = true;\n\n    if (!isBatching) {\n      listeners.forEach((listener) => listener());\n    }\n  };\n\n  const subscribe = (callback: () => void) => {\n    listeners.push(callback);\n\n    return () => {\n      const index = listeners.indexOf(callback);\n\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  };\n\n  const batchUpdates = (callback: () => void) => {\n    isBatching = true;\n    callback();\n    isBatching = false;\n\n    if (didUpdate) {\n      didUpdate = false;\n      listeners.forEach((listener) => listener());\n    }\n  };\n\n  return {\n    getState,\n    setState,\n    batchUpdates,\n    subscribe,\n  };\n};\n\nexport function useSyncState<T>(getInitialState: () => T) {\n  const store = React.useRef(createStore(getInitialState)).current;\n\n  const state = React.useSyncExternalStore(\n    store.subscribe,\n    store.getState,\n    store.getState\n  );\n\n  React.useDebugValue(state);\n\n  const pendingUpdatesRef = React.useRef<(() => void)[]>([]);\n\n  const scheduleUpdate = useLatestCallback((callback: () => void) => {\n    pendingUpdatesRef.current.push(callback);\n  });\n\n  const flushUpdates = useLatestCallback(() => {\n    const pendingUpdates = pendingUpdatesRef.current;\n\n    pendingUpdatesRef.current = [];\n\n    if (pendingUpdates.length !== 0) {\n      store.batchUpdates(() => {\n        // Flush all the pending updates\n        for (const update of pendingUpdates) {\n          update();\n        }\n      });\n    }\n  });\n\n  return {\n    state,\n    getState: store.getState,\n    setState: store.setState,\n    scheduleUpdate,\n    flushUpdates,\n  } as const;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}