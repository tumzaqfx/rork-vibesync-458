{"ast":null,"code":"\"use strict\";var _reactJsxRuntime=require(\"react/jsx-runtime\");var _objectWithoutPropertiesLoose=require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");const _excluded=[\"style\"];Object.defineProperty(exports,\"__esModule\",{value:true});exports.Slot=void 0;const react_slot_1=require(\"@radix-ui/react-slot\");const react_1=require(\"react\");const react_native_1=require(\"react-native-web/dist/index\");function ShimSlotForReactNative(Component){return(0,react_1.forwardRef)(function RNSlotHOC(_ref,ref){let{style}=_ref,props=_objectWithoutPropertiesLoose(_ref,_excluded);style=(0,react_1.useMemo)(()=>react_native_1.StyleSheet.flatten(style),[style]);return _reactJsxRuntime.jsx(Component,Object.assign({ref:ref},props,{style:style}));});}exports.Slot=ShimSlotForReactNative(react_slot_1.Slot);","map":{"version":3,"names":["react_slot_1","require","react_1","react_native_1","ShimSlotForReactNative","Component","forwardRef","RNSlotHOC","_ref","ref","style","props","_objectWithoutPropertiesLoose","_excluded","useMemo","StyleSheet","flatten","_reactJsxRuntime","jsx","Object","assign","exports","Slot"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-router/src/ui/Slot.tsx"],"sourcesContent":["import { Slot as RUISlot } from '@radix-ui/react-slot';\nimport { forwardRef, useMemo } from 'react';\nimport { StyleSheet } from 'react-native';\n\n/**\n * RadixUI has special logic to handle the merging of `style` and `className` props.\n * On the web styles are not allowed so Radix does not handle this scenario.\n * This could be fixed upstream (PR open), but it may not as RN is not their target\n * platform.\n *\n * This shim calls `StyleSheet.flatten` on the styles before we render the <Slot />\n *\n * @see https://github.com/expo/expo/issues/31352\n * @see https://github.com/radix-ui/primitives/issues/3107\n * @param Component\n * @returns\n */\nfunction ShimSlotForReactNative(Component: typeof RUISlot): typeof RUISlot {\n  return forwardRef(function RNSlotHOC({ style, ...props }, ref) {\n    style = useMemo(() => StyleSheet.flatten(style), [style]);\n    return <Component ref={ref} {...props} style={style} />;\n  });\n}\n\nexport const Slot = ShimSlotForReactNative(RUISlot);\n"],"mappings":"uQAAA,MAAAA,YAAA,CAAAC,OAAA,yBACA,MAAAC,OAAA,CAAAD,OAAA,UAA4C,MAAAE,cAAA,CAAAF,OAAA,gCAgB5C,QAAS,CAAAG,sBAAsBA,CAACC,SAAyB,EACvD,MAAO,GAAAH,OAAA,CAAAI,UAAU,EAAC,QAAS,CAAAC,SAASA,CAAAC,IAAA,CAAsBC,GAAG,KAAxB,CAAEC,KAAe,CAAE,CAAAF,IAAA,CAAPG,KAAK,CAAAC,6BAAA,CAAAJ,IAAA,CAAAK,SAAA,EACpDH,KAAK,CAAG,GAAAR,OAAA,CAAAY,OAAO,EAAC,IAAMX,cAAA,CAAAY,UAAU,CAACC,OAAO,CAACN,KAAK,CAAC,CAAE,CAACA,KAAK,CAAC,CAAC,CACzD,MAAO,CAAAO,gBAAA,CAAAC,GAAA,CAACb,SAAS,CAAAc,MAAA,CAAAC,MAAA,EAACX,GAAG,CAAEA,GAAI,EAAKE,KAAK,EAAED,KAAK,CAAEA,KAAM,GAAG,CACzD,CAAC,CAAC,CACJ,CAEaW,OAAA,CAAAC,IAAI,CAAGlB,sBAAsB,CAACJ,YAAA,CAAAsB,IAAO,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}