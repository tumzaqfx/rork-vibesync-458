{"ast":null,"code":"\"use strict\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"direction\",\"theme\",\"linking\",\"fallback\",\"documentTitle\",\"onReady\",\"onStateChange\"];import{BaseNavigationContainer,getActionFromState,getPathFromState,getStateFromPath,ThemeProvider,validatePathConfig}from'@react-navigation/core';import*as React from'react';import I18nManager from\"react-native-web/dist/exports/I18nManager\";import useLatestCallback from'use-latest-callback';import{LinkingContext}from\"./LinkingContext.js\";import{LocaleDirContext}from\"./LocaleDirContext.js\";import{DefaultTheme}from\"./theming/DefaultTheme.js\";import{UnhandledLinkingContext}from\"./UnhandledLinkingContext.js\";import{useBackButton}from'./useBackButton';import{useDocumentTitle}from'./useDocumentTitle';import{useLinking}from'./useLinking';import{useThenable}from\"./useThenable.js\";import{jsx as _jsx}from\"react/jsx-runtime\";globalThis.REACT_NAVIGATION_DEVTOOLS=new WeakMap();function NavigationContainerInner(_ref,ref){let{direction=I18nManager.getConstants().isRTL?'rtl':'ltr',theme=DefaultTheme,linking,fallback=null,documentTitle,onReady,onStateChange}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const isLinkingEnabled=linking?linking.enabled!==false:false;if(linking?.config){validatePathConfig(linking.config);}const refContainer=React.useRef(null);useBackButton(refContainer);useDocumentTitle(refContainer,documentTitle);const[lastUnhandledLink,setLastUnhandledLink]=React.useState();const{getInitialState}=useLinking(refContainer,Object.assign({enabled:isLinkingEnabled,prefixes:[]},linking),setLastUnhandledLink);const linkingContext=React.useMemo(()=>({options:linking}),[linking]);const unhandledLinkingContext=React.useMemo(()=>({lastUnhandledLink,setLastUnhandledLink}),[lastUnhandledLink,setLastUnhandledLink]);const onReadyForLinkingHandling=useLatestCallback(()=>{const path=refContainer.current?.getCurrentRoute()?.path;setLastUnhandledLink(previousLastUnhandledLink=>{if(previousLastUnhandledLink===path){return undefined;}return previousLastUnhandledLink;});onReady?.();});const onStateChangeForLinkingHandling=useLatestCallback(state=>{const path=refContainer.current?.getCurrentRoute()?.path;setLastUnhandledLink(previousLastUnhandledLink=>{if(previousLastUnhandledLink===path){return undefined;}return previousLastUnhandledLink;});onStateChange?.(state);});React.useEffect(()=>{if(refContainer.current){REACT_NAVIGATION_DEVTOOLS.set(refContainer.current,{get linking(){return Object.assign({},linking,{enabled:isLinkingEnabled,prefixes:linking?.prefixes??[],getStateFromPath:linking?.getStateFromPath??getStateFromPath,getPathFromState:linking?.getPathFromState??getPathFromState,getActionFromState:linking?.getActionFromState??getActionFromState});}});}});const[isResolved,initialState]=useThenable(getInitialState);React.useImperativeHandle(ref,()=>refContainer.current);const isLinkingReady=rest.initialState!=null||!isLinkingEnabled||isResolved;if(!isLinkingReady){return _jsx(LocaleDirContext.Provider,{value:direction,children:_jsx(ThemeProvider,{value:theme,children:fallback})});}return _jsx(LocaleDirContext.Provider,{value:direction,children:_jsx(UnhandledLinkingContext.Provider,{value:unhandledLinkingContext,children:_jsx(LinkingContext.Provider,{value:linkingContext,children:_jsx(BaseNavigationContainer,Object.assign({},rest,{theme:theme,onReady:onReadyForLinkingHandling,onStateChange:onStateChangeForLinkingHandling,initialState:rest.initialState==null?initialState:rest.initialState,ref:refContainer}))})})});}export const NavigationContainer=React.forwardRef(NavigationContainerInner);","map":{"version":3,"names":["BaseNavigationContainer","getActionFromState","getPathFromState","getStateFromPath","ThemeProvider","validatePathConfig","React","I18nManager","useLatestCallback","LinkingContext","LocaleDirContext","DefaultTheme","UnhandledLinkingContext","useBackButton","useDocumentTitle","useLinking","useThenable","jsx","_jsx","globalThis","REACT_NAVIGATION_DEVTOOLS","WeakMap","NavigationContainerInner","_ref","ref","direction","getConstants","isRTL","theme","linking","fallback","documentTitle","onReady","onStateChange","rest","_objectWithoutPropertiesLoose","_excluded","isLinkingEnabled","enabled","config","refContainer","useRef","lastUnhandledLink","setLastUnhandledLink","useState","getInitialState","Object","assign","prefixes","linkingContext","useMemo","options","unhandledLinkingContext","onReadyForLinkingHandling","path","current","getCurrentRoute","previousLastUnhandledLink","undefined","onStateChangeForLinkingHandling","state","useEffect","set","isResolved","initialState","useImperativeHandle","isLinkingReady","Provider","value","children","NavigationContainer","forwardRef"],"sources":["/home/user/rork-vibesync-458/node_modules/@react-navigation/native/src/NavigationContainer.tsx"],"sourcesContent":["import {\n  BaseNavigationContainer,\n  getActionFromState,\n  getPathFromState,\n  getStateFromPath,\n  type NavigationContainerProps,\n  type NavigationContainerRef,\n  type NavigationState,\n  type ParamListBase,\n  ThemeProvider,\n  validatePathConfig,\n} from '@react-navigation/core';\nimport * as React from 'react';\nimport { I18nManager } from 'react-native';\nimport useLatestCallback from 'use-latest-callback';\n\nimport { LinkingContext } from './LinkingContext';\nimport { LocaleDirContext } from './LocaleDirContext';\nimport { DefaultTheme } from './theming/DefaultTheme';\nimport type {\n  DocumentTitleOptions,\n  LinkingOptions,\n  LocaleDirection,\n} from './types';\nimport { UnhandledLinkingContext } from './UnhandledLinkingContext';\nimport { useBackButton } from './useBackButton';\nimport { useDocumentTitle } from './useDocumentTitle';\nimport { useLinking } from './useLinking';\nimport { useThenable } from './useThenable';\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var REACT_NAVIGATION_DEVTOOLS: WeakMap<\n    NavigationContainerRef<any>,\n    { readonly linking: LinkingOptions<any> }\n  >;\n}\n\nglobalThis.REACT_NAVIGATION_DEVTOOLS = new WeakMap();\n\ntype Props<ParamList extends {}> = NavigationContainerProps & {\n  direction?: LocaleDirection;\n  linking?: LinkingOptions<ParamList>;\n  fallback?: React.ReactNode;\n  documentTitle?: DocumentTitleOptions;\n};\n\n/**\n * Container component which holds the navigation state designed for React Native apps.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree. When deep link handling is enabled, this will override deep links when specified. Make sure that you don't specify an `initialState` when there's a deep link (`Linking.getInitialURL()`).\n * @param props.onReady Callback which is called after the navigation tree mounts.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.onUnhandledAction Callback which is called when an action is not handled.\n * @param props.direction Text direction of the components. Defaults to `'ltr'`.\n * @param props.theme Theme object for the UI elements.\n * @param props.linking Options for deep linking. Deep link handling is enabled when this prop is provided, unless `linking.enabled` is `false`.\n * @param props.fallback Fallback component to render until we have finished getting initial state when linking is enabled. Defaults to `null`.\n * @param props.documentTitle Options to configure the document title on Web. Updating document title is handled by default unless `documentTitle.enabled` is `false`.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nfunction NavigationContainerInner(\n  {\n    direction = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr',\n    theme = DefaultTheme,\n    linking,\n    fallback = null,\n    documentTitle,\n    onReady,\n    onStateChange,\n    ...rest\n  }: Props<ParamListBase>,\n  ref?: React.Ref<NavigationContainerRef<ParamListBase> | null>\n) {\n  const isLinkingEnabled = linking ? linking.enabled !== false : false;\n\n  if (linking?.config) {\n    validatePathConfig(linking.config);\n  }\n\n  const refContainer =\n    React.useRef<NavigationContainerRef<ParamListBase>>(null);\n\n  useBackButton(refContainer);\n  useDocumentTitle(refContainer, documentTitle);\n\n  const [lastUnhandledLink, setLastUnhandledLink] = React.useState<\n    string | undefined\n  >();\n\n  const { getInitialState } = useLinking(\n    refContainer,\n    {\n      enabled: isLinkingEnabled,\n      prefixes: [],\n      ...linking,\n    },\n    setLastUnhandledLink\n  );\n\n  const linkingContext = React.useMemo(() => ({ options: linking }), [linking]);\n\n  const unhandledLinkingContext = React.useMemo(\n    () => ({ lastUnhandledLink, setLastUnhandledLink }),\n    [lastUnhandledLink, setLastUnhandledLink]\n  );\n\n  const onReadyForLinkingHandling = useLatestCallback(() => {\n    // If the screen path matches lastUnhandledLink, we do not track it\n    const path = refContainer.current?.getCurrentRoute()?.path;\n    setLastUnhandledLink((previousLastUnhandledLink) => {\n      if (previousLastUnhandledLink === path) {\n        return undefined;\n      }\n      return previousLastUnhandledLink;\n    });\n    onReady?.();\n  });\n\n  const onStateChangeForLinkingHandling = useLatestCallback(\n    (state: Readonly<NavigationState> | undefined) => {\n      // If the screen path matches lastUnhandledLink, we do not track it\n      const path = refContainer.current?.getCurrentRoute()?.path;\n      setLastUnhandledLink((previousLastUnhandledLink) => {\n        if (previousLastUnhandledLink === path) {\n          return undefined;\n        }\n        return previousLastUnhandledLink;\n      });\n      onStateChange?.(state);\n    }\n  );\n  // Add additional linking related info to the ref\n  // This will be used by the devtools\n  React.useEffect(() => {\n    if (refContainer.current) {\n      REACT_NAVIGATION_DEVTOOLS.set(refContainer.current, {\n        get linking() {\n          return {\n            ...linking,\n            enabled: isLinkingEnabled,\n            prefixes: linking?.prefixes ?? [],\n            getStateFromPath: linking?.getStateFromPath ?? getStateFromPath,\n            getPathFromState: linking?.getPathFromState ?? getPathFromState,\n            getActionFromState:\n              linking?.getActionFromState ?? getActionFromState,\n          };\n        },\n      });\n    }\n  });\n\n  const [isResolved, initialState] = useThenable(getInitialState);\n\n  React.useImperativeHandle(ref, () => refContainer.current);\n\n  const isLinkingReady =\n    rest.initialState != null || !isLinkingEnabled || isResolved;\n\n  if (!isLinkingReady) {\n    return (\n      <LocaleDirContext.Provider value={direction}>\n        <ThemeProvider value={theme}>{fallback}</ThemeProvider>\n      </LocaleDirContext.Provider>\n    );\n  }\n\n  return (\n    <LocaleDirContext.Provider value={direction}>\n      <UnhandledLinkingContext.Provider value={unhandledLinkingContext}>\n        <LinkingContext.Provider value={linkingContext}>\n          <BaseNavigationContainer\n            {...rest}\n            theme={theme}\n            onReady={onReadyForLinkingHandling}\n            onStateChange={onStateChangeForLinkingHandling}\n            initialState={\n              rest.initialState == null ? initialState : rest.initialState\n            }\n            ref={refContainer}\n          />\n        </LinkingContext.Provider>\n      </UnhandledLinkingContext.Provider>\n    </LocaleDirContext.Provider>\n  );\n}\n\nexport const NavigationContainer = React.forwardRef(\n  NavigationContainerInner\n) as <RootParamList extends {} = ReactNavigation.RootParamList>(\n  props: Props<RootParamList> & {\n    ref?: React.Ref<NavigationContainerRef<RootParamList>>;\n  }\n) => React.ReactElement;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}