{"ast":null,"code":"\"use strict\";var _objectWithoutPropertiesLoose=require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");const _excluded=[\"href\"];Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=useLinkToPathProps;exports.shouldHandleMouseEvent=shouldHandleMouseEvent;const react_native_1=require(\"react-native-web/dist/index\");const emitDomEvent_1=require(\"../domComponents/emitDomEvent\");const getPathFromState_forks_1=require(\"../fork/getPathFromState-forks\");const routing_1=require(\"../global-state/routing\");const matchers_1=require(\"../matchers\");const url_1=require(\"../utils/url\");function eventShouldPreventDefault(e){if(e?.defaultPrevented){return false;}if('button'in e&&!e.metaKey&&!e.altKey&&!e.ctrlKey&&!e.shiftKey&&(e.button==null||e.button===0)&&[undefined,null,'','self'].includes(e.currentTarget.target)){return true;}return false;}function useLinkToPathProps(_ref){let{href}=_ref,options=_objectWithoutPropertiesLoose(_ref,_excluded);const onPress=event=>{if(shouldHandleMouseEvent(event)){if((0,emitDomEvent_1.emitDomLinkEvent)(href,options)){return;}(0,routing_1.linkTo)(href,options);}};let strippedHref=(0,matchers_1.stripGroupSegmentsFromPath)(href)||'/';if(!(0,url_1.shouldLinkExternally)(strippedHref)){strippedHref=(0,getPathFromState_forks_1.appendBaseUrl)(strippedHref);}return{href:strippedHref,role:'link',onPress};}function shouldHandleMouseEvent(event){if(react_native_1.Platform.OS!=='web'){return!event?.defaultPrevented;}if(event&&eventShouldPreventDefault(event)){event.preventDefault();return true;}return false;}","map":{"version":3,"names":["exports","default","useLinkToPathProps","shouldHandleMouseEvent","react_native_1","require","emitDomEvent_1","getPathFromState_forks_1","routing_1","matchers_1","url_1","eventShouldPreventDefault","e","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","button","undefined","includes","currentTarget","target","_ref","href","options","_objectWithoutPropertiesLoose","_excluded","onPress","event","emitDomLinkEvent","linkTo","strippedHref","stripGroupSegmentsFromPath","shouldLinkExternally","appendBaseUrl","role","Platform","OS","preventDefault"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-router/src/link/useLinkToPathProps.tsx"],"sourcesContent":["import { MouseEvent } from 'react';\nimport { GestureResponderEvent, Platform } from 'react-native';\n\nimport { emitDomLinkEvent } from '../domComponents/emitDomEvent';\nimport { appendBaseUrl } from '../fork/getPathFromState-forks';\nimport { linkTo, LinkToOptions } from '../global-state/routing';\nimport { stripGroupSegmentsFromPath } from '../matchers';\nimport { shouldLinkExternally } from '../utils/url';\n\nfunction eventShouldPreventDefault(\n  e: MouseEvent<HTMLAnchorElement> | GestureResponderEvent\n): boolean {\n  if (e?.defaultPrevented) {\n    return false;\n  }\n\n  if (\n    // Only check MouseEvents\n    'button' in e &&\n    // ignore clicks with modifier keys\n    !e.metaKey &&\n    !e.altKey &&\n    !e.ctrlKey &&\n    !e.shiftKey &&\n    (e.button == null || e.button === 0) && // Only accept left clicks\n    [undefined, null, '', 'self'].includes(e.currentTarget.target) // let browser handle \"target=_blank\" etc.\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\ntype UseLinkToPathPropsOptions = LinkToOptions & {\n  href: string;\n};\n\nexport default function useLinkToPathProps({ href, ...options }: UseLinkToPathPropsOptions) {\n  const onPress = (event?: MouseEvent<HTMLAnchorElement> | GestureResponderEvent) => {\n    if (shouldHandleMouseEvent(event)) {\n      if (emitDomLinkEvent(href, options)) {\n        return;\n      }\n      linkTo(href, options);\n    }\n  };\n\n  let strippedHref = stripGroupSegmentsFromPath(href) || '/';\n\n  // Append base url only if needed.\n  if (!shouldLinkExternally(strippedHref)) {\n    strippedHref = appendBaseUrl(strippedHref);\n  }\n\n  return {\n    href: strippedHref,\n    role: 'link' as const,\n    onPress,\n  };\n}\n\nexport function shouldHandleMouseEvent(\n  event?: MouseEvent<HTMLAnchorElement> | GestureResponderEvent\n) {\n  if (Platform.OS !== 'web') {\n    return !event?.defaultPrevented;\n  }\n\n  if (event && eventShouldPreventDefault(event)) {\n    event.preventDefault();\n    return true;\n  }\n\n  return false;\n}\n"],"mappings":"gMAqCAA,OAAA,CAAAC,OAAA,CAAAC,kBAAA,CAwBAF,OAAA,CAAAG,sBAAA,CAAAA,sBAAA,CAaC,MAAAC,cAAA,CAAAC,OAAA,gCAvED,MAAAC,cAAA,CAAAD,OAAA,kCACA,MAAAE,wBAAA,CAAAF,OAAA,mCACA,MAAAG,SAAA,CAAAH,OAAA,4BACA,MAAAI,UAAA,CAAAJ,OAAA,gBACA,MAAAK,KAAA,CAAAL,OAAA,iBAEA,QAAS,CAAAM,yBAAyBA,CAChCC,CAAwD,EAExD,GAAIA,CAAC,EAAEC,gBAAgB,CAAE,CACvB,MAAO,MAAK,CACd,CAEA,GAEE,QAAQ,EAAI,CAAAD,CAAC,EAEb,CAACA,CAAC,CAACE,OAAO,EACV,CAACF,CAAC,CAACG,MAAM,EACT,CAACH,CAAC,CAACI,OAAO,EACV,CAACJ,CAAC,CAACK,QAAQ,GACVL,CAAC,CAACM,MAAM,EAAI,IAAI,EAAIN,CAAC,CAACM,MAAM,GAAK,CAAC,CAAC,EACpC,CAACC,SAAS,CAAE,IAAI,CAAE,EAAE,CAAE,MAAM,CAAC,CAACC,QAAQ,CAACR,CAAC,CAACS,aAAa,CAACC,MAAM,CAAC,CAC9D,CACA,MAAO,KAAI,CACb,CAEA,MAAO,MAAK,CACd,CAMA,QAAwB,CAAApB,kBAAkBA,CAAAqB,IAAA,CAAgD,IAA/C,CAAEC,IAAgB,CAA6B,CAAAD,IAAA,CAApCE,OAAO,CAAAC,6BAAA,CAAAH,IAAA,CAAAI,SAAA,EAC3D,KAAM,CAAAC,OAAO,CAAIC,KAA6D,EAAI,CAChF,GAAI1B,sBAAsB,CAAC0B,KAAK,CAAC,CAAE,CACjC,GAAI,GAAAvB,cAAA,CAAAwB,gBAAgB,EAACN,IAAI,CAAEC,OAAO,CAAC,CAAE,CACnC,OACF,CACA,GAAAjB,SAAA,CAAAuB,MAAM,EAACP,IAAI,CAAEC,OAAO,CAAC,CACvB,CACF,CAAC,CAED,GAAI,CAAAO,YAAY,CAAG,GAAAvB,UAAA,CAAAwB,0BAA0B,EAACT,IAAI,CAAC,EAAI,GAAG,CAG1D,GAAI,CAAC,GAAAd,KAAA,CAAAwB,oBAAoB,EAACF,YAAY,CAAC,CAAE,CACvCA,YAAY,CAAG,GAAAzB,wBAAA,CAAA4B,aAAa,EAACH,YAAY,CAAC,CAC5C,CAEA,MAAO,CACLR,IAAI,CAAEQ,YAAY,CAClBI,IAAI,CAAE,MAAe,CACrBR,O,CACD,CACH,CAEA,QAAgB,CAAAzB,sBAAsBA,CACpC0B,KAA6D,EAE7D,GAAIzB,cAAA,CAAAiC,QAAQ,CAACC,EAAE,GAAK,KAAK,CAAE,CACzB,MAAO,CAACT,KAAK,EAAEhB,gBAAgB,CACjC,CAEA,GAAIgB,KAAK,EAAIlB,yBAAyB,CAACkB,KAAK,CAAC,CAAE,CAC7CA,KAAK,CAACU,cAAc,EAAE,CACtB,MAAO,KAAI,CACb,CAEA,MAAO,MAAK,CACd","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}