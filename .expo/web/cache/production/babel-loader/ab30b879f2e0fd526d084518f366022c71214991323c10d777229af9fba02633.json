{"ast":null,"code":"'use strict';import{useEffect,useMemo,useRef}from'react';import{initializeSensor,registerSensor,unregisterSensor}from\"../core.js\";import{SensorType,IOSReferenceFrame,InterfaceOrientation}from\"../commonTypes.js\";import{callMicrotasks}from\"../threads.js\";const _worklet_15057325791340_init_data={code:\"function eulerToQuaternion_reactNativeReanimated_useAnimatedSensorJs1(pitch,roll,yaw){const c1=Math.cos(pitch/2);const s1=Math.sin(pitch/2);const c2=Math.cos(roll/2);const s2=Math.sin(roll/2);const c3=Math.cos(yaw/2);const s3=Math.sin(yaw/2);return[s1*c2*c3-c1*s2*s3,c1*s2*c3+s1*c2*s3,c1*c2*s3+s1*s2*c3,c1*c2*c3-s1*s2*s3];}\"};const eulerToQuaternion=function(){const eulerToQuaternion=function(pitch,roll,yaw){const c1=Math.cos(pitch/2);const s1=Math.sin(pitch/2);const c2=Math.cos(roll/2);const s2=Math.sin(roll/2);const c3=Math.cos(yaw/2);const s3=Math.sin(yaw/2);return[s1*c2*c3-c1*s2*s3,c1*s2*c3+s1*c2*s3,c1*c2*s3+s1*s2*c3,c1*c2*c3-s1*s2*s3];};eulerToQuaternion.__closure={};eulerToQuaternion.__workletHash=15057325791340;eulerToQuaternion.__initData=_worklet_15057325791340_init_data;return eulerToQuaternion;}();const _worklet_10534183806973_init_data={code:\"function adjustRotationToInterfaceOrientation_reactNativeReanimated_useAnimatedSensorJs2(data){const{InterfaceOrientation,eulerToQuaternion}=this.__closure;const{interfaceOrientation:interfaceOrientation,pitch:pitch,roll:roll,yaw:yaw}=data;if(interfaceOrientation===InterfaceOrientation.ROTATION_90){data.pitch=roll;data.roll=-pitch;data.yaw=yaw-Math.PI/2;}else if(interfaceOrientation===InterfaceOrientation.ROTATION_270){data.pitch=-roll;data.roll=pitch;data.yaw=yaw+Math.PI/2;}else if(interfaceOrientation===InterfaceOrientation.ROTATION_180){data.pitch*=-1;data.roll*=-1;data.yaw*=-1;}const q=eulerToQuaternion(data.pitch,data.roll,data.yaw);data.qx=q[0];data.qy=q[1];data.qz=q[2];data.qw=q[3];return data;}\"};const adjustRotationToInterfaceOrientation=function(){const adjustRotationToInterfaceOrientation=function(data){const{interfaceOrientation,pitch,roll,yaw}=data;if(interfaceOrientation===InterfaceOrientation.ROTATION_90){data.pitch=roll;data.roll=-pitch;data.yaw=yaw-Math.PI/2;}else if(interfaceOrientation===InterfaceOrientation.ROTATION_270){data.pitch=-roll;data.roll=pitch;data.yaw=yaw+Math.PI/2;}else if(interfaceOrientation===InterfaceOrientation.ROTATION_180){data.pitch*=-1;data.roll*=-1;data.yaw*=-1;}const q=eulerToQuaternion(data.pitch,data.roll,data.yaw);data.qx=q[0];data.qy=q[1];data.qz=q[2];data.qw=q[3];return data;};adjustRotationToInterfaceOrientation.__closure={InterfaceOrientation,eulerToQuaternion};adjustRotationToInterfaceOrientation.__workletHash=10534183806973;adjustRotationToInterfaceOrientation.__initData=_worklet_10534183806973_init_data;return adjustRotationToInterfaceOrientation;}();const _worklet_4028360763619_init_data={code:\"function adjustVectorToInterfaceOrientation_reactNativeReanimated_useAnimatedSensorJs3(data){const{InterfaceOrientation}=this.__closure;const{interfaceOrientation:interfaceOrientation,x:x,y:y}=data;if(interfaceOrientation===InterfaceOrientation.ROTATION_90){data.x=-y;data.y=x;}else if(interfaceOrientation===InterfaceOrientation.ROTATION_270){data.x=y;data.y=-x;}else if(interfaceOrientation===InterfaceOrientation.ROTATION_180){data.x*=-1;data.y*=-1;}return data;}\"};const adjustVectorToInterfaceOrientation=function(){const adjustVectorToInterfaceOrientation=function(data){const{interfaceOrientation,x,y}=data;if(interfaceOrientation===InterfaceOrientation.ROTATION_90){data.x=-y;data.y=x;}else if(interfaceOrientation===InterfaceOrientation.ROTATION_270){data.x=y;data.y=-x;}else if(interfaceOrientation===InterfaceOrientation.ROTATION_180){data.x*=-1;data.y*=-1;}return data;};adjustVectorToInterfaceOrientation.__closure={InterfaceOrientation};adjustVectorToInterfaceOrientation.__workletHash=4028360763619;adjustVectorToInterfaceOrientation.__initData=_worklet_4028360763619_init_data;return adjustVectorToInterfaceOrientation;}();const _worklet_12687904397161_init_data={code:\"function reactNativeReanimated_useAnimatedSensorJs4(data){const{adjustToInterfaceOrientation,sensorType,SensorType,adjustRotationToInterfaceOrientation,adjustVectorToInterfaceOrientation,sensorData,callMicrotasks}=this.__closure;if(adjustToInterfaceOrientation){if(sensorType===SensorType.ROTATION){data=adjustRotationToInterfaceOrientation(data);}else{data=adjustVectorToInterfaceOrientation(data);}}sensorData.value=data;callMicrotasks();}\"};export function useAnimatedSensor(sensorType,userConfig){const userConfigRef=useRef(userConfig);const hasConfigChanged=userConfigRef.current?.adjustToInterfaceOrientation!==userConfig?.adjustToInterfaceOrientation||userConfigRef.current?.interval!==userConfig?.interval||userConfigRef.current?.iosReferenceFrame!==userConfig?.iosReferenceFrame;if(hasConfigChanged){userConfigRef.current=Object.assign({},userConfig);}const config=useMemo(()=>Object.assign({interval:'auto',adjustToInterfaceOrientation:true,iosReferenceFrame:IOSReferenceFrame.Auto},userConfigRef.current),[userConfigRef.current]);const ref=useRef({sensor:initializeSensor(sensorType,config),unregister:()=>{},isAvailable:false,config});useEffect(()=>{ref.current={sensor:initializeSensor(sensorType,config),unregister:()=>{},isAvailable:false,config};const sensorData=ref.current.sensor;const adjustToInterfaceOrientation=ref.current.config.adjustToInterfaceOrientation;const id=registerSensor(sensorType,config,function(){const reactNativeReanimated_useAnimatedSensorJs4=function(data){if(adjustToInterfaceOrientation){if(sensorType===SensorType.ROTATION){data=adjustRotationToInterfaceOrientation(data);}else{data=adjustVectorToInterfaceOrientation(data);}}sensorData.value=data;callMicrotasks();};reactNativeReanimated_useAnimatedSensorJs4.__closure={adjustToInterfaceOrientation,sensorType,SensorType,adjustRotationToInterfaceOrientation,adjustVectorToInterfaceOrientation,sensorData,callMicrotasks};reactNativeReanimated_useAnimatedSensorJs4.__workletHash=12687904397161;reactNativeReanimated_useAnimatedSensorJs4.__initData=_worklet_12687904397161_init_data;return reactNativeReanimated_useAnimatedSensorJs4;}());if(id!==-1){ref.current.unregister=()=>unregisterSensor(id);ref.current.isAvailable=true;}else{ref.current.unregister=()=>{};ref.current.isAvailable=false;}return()=>{ref.current.unregister();};},[sensorType,config]);return ref.current;}","map":{"version":3,"names":["useEffect","useMemo","useRef","initializeSensor","registerSensor","unregisterSensor","SensorType","IOSReferenceFrame","InterfaceOrientation","callMicrotasks","_worklet_15057325791340_init_data","code","eulerToQuaternion","pitch","roll","yaw","c1","Math","cos","s1","sin","c2","s2","c3","s3","__closure","__workletHash","__initData","_worklet_10534183806973_init_data","adjustRotationToInterfaceOrientation","data","interfaceOrientation","ROTATION_90","PI","ROTATION_270","ROTATION_180","q","qx","qy","qz","qw","_worklet_4028360763619_init_data","adjustVectorToInterfaceOrientation","x","y","_worklet_12687904397161_init_data","useAnimatedSensor","sensorType","userConfig","userConfigRef","hasConfigChanged","current","adjustToInterfaceOrientation","interval","iosReferenceFrame","Object","assign","config","Auto","ref","sensor","unregister","isAvailable","sensorData","id","reactNativeReanimated_useAnimatedSensorJs4","ROTATION","value"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/hook/useAnimatedSensor.ts"],"sourcesContent":["'use strict';\nimport { useEffect, useMemo, useRef } from 'react';\nimport { initializeSensor, registerSensor, unregisterSensor } from '../core';\nimport type {\n  SensorConfig,\n  AnimatedSensor,\n  Value3D,\n  ValueRotation,\n} from '../commonTypes';\nimport {\n  SensorType,\n  IOSReferenceFrame,\n  InterfaceOrientation,\n} from '../commonTypes';\nimport { callMicrotasks } from '../threads';\n\n// euler angles are in order ZXY, z = yaw, x = pitch, y = roll\n// https://github.com/mrdoob/three.js/blob/dev/src/math/Quaternion.js#L237\nfunction eulerToQuaternion(pitch: number, roll: number, yaw: number) {\n  'worklet';\n  const c1 = Math.cos(pitch / 2);\n  const s1 = Math.sin(pitch / 2);\n  const c2 = Math.cos(roll / 2);\n  const s2 = Math.sin(roll / 2);\n  const c3 = Math.cos(yaw / 2);\n  const s3 = Math.sin(yaw / 2);\n\n  return [\n    s1 * c2 * c3 - c1 * s2 * s3,\n    c1 * s2 * c3 + s1 * c2 * s3,\n    c1 * c2 * s3 + s1 * s2 * c3,\n    c1 * c2 * c3 - s1 * s2 * s3,\n  ];\n}\n\nfunction adjustRotationToInterfaceOrientation(data: ValueRotation) {\n  'worklet';\n  const { interfaceOrientation, pitch, roll, yaw } = data;\n  if (interfaceOrientation === InterfaceOrientation.ROTATION_90) {\n    data.pitch = roll;\n    data.roll = -pitch;\n    data.yaw = yaw - Math.PI / 2;\n  } else if (interfaceOrientation === InterfaceOrientation.ROTATION_270) {\n    data.pitch = -roll;\n    data.roll = pitch;\n    data.yaw = yaw + Math.PI / 2;\n  } else if (interfaceOrientation === InterfaceOrientation.ROTATION_180) {\n    data.pitch *= -1;\n    data.roll *= -1;\n    data.yaw *= -1;\n  }\n\n  const q = eulerToQuaternion(data.pitch, data.roll, data.yaw);\n  data.qx = q[0];\n  data.qy = q[1];\n  data.qz = q[2];\n  data.qw = q[3];\n  return data;\n}\n\nfunction adjustVectorToInterfaceOrientation(data: Value3D) {\n  'worklet';\n  const { interfaceOrientation, x, y } = data;\n  if (interfaceOrientation === InterfaceOrientation.ROTATION_90) {\n    data.x = -y;\n    data.y = x;\n  } else if (interfaceOrientation === InterfaceOrientation.ROTATION_270) {\n    data.x = y;\n    data.y = -x;\n  } else if (interfaceOrientation === InterfaceOrientation.ROTATION_180) {\n    data.x *= -1;\n    data.y *= -1;\n  }\n  return data;\n}\n\n/**\n * Lets you create animations based on data from the device's sensors.\n *\n * @param sensorType - Type of the sensor to use. Configured with\n *   {@link SensorType} enum.\n * @param config - The sensor configuration - {@link SensorConfig}.\n * @returns An object containing the sensor measurements [shared\n *   value](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#shared-value)\n *   and a function to unregister the sensor\n * @see https://docs.swmansion.com/react-native-reanimated/docs/device/useAnimatedSensor\n */\nexport function useAnimatedSensor(\n  sensorType: SensorType.ROTATION,\n  userConfig?: Partial<SensorConfig>\n): AnimatedSensor<ValueRotation>;\nexport function useAnimatedSensor(\n  sensorType: Exclude<SensorType, SensorType.ROTATION>,\n  userConfig?: Partial<SensorConfig>\n): AnimatedSensor<Value3D>;\nexport function useAnimatedSensor(\n  sensorType: SensorType,\n  userConfig?: Partial<SensorConfig>\n): AnimatedSensor<ValueRotation> | AnimatedSensor<Value3D> {\n  const userConfigRef = useRef(userConfig);\n\n  const hasConfigChanged =\n    userConfigRef.current?.adjustToInterfaceOrientation !==\n      userConfig?.adjustToInterfaceOrientation ||\n    userConfigRef.current?.interval !== userConfig?.interval ||\n    userConfigRef.current?.iosReferenceFrame !== userConfig?.iosReferenceFrame;\n\n  if (hasConfigChanged) {\n    userConfigRef.current = { ...userConfig };\n  }\n\n  const config: SensorConfig = useMemo(\n    () => ({\n      interval: 'auto',\n      adjustToInterfaceOrientation: true,\n      iosReferenceFrame: IOSReferenceFrame.Auto,\n      ...userConfigRef.current,\n    }),\n    [userConfigRef.current]\n  );\n\n  const ref = useRef<AnimatedSensor<Value3D | ValueRotation>>({\n    sensor: initializeSensor(sensorType, config),\n    unregister: () => {\n      // NOOP\n    },\n    isAvailable: false,\n    config,\n  });\n\n  useEffect(() => {\n    ref.current = {\n      sensor: initializeSensor(sensorType, config),\n      unregister: () => {\n        // NOOP\n      },\n      isAvailable: false,\n      config,\n    };\n\n    const sensorData = ref.current.sensor;\n    const adjustToInterfaceOrientation =\n      ref.current.config.adjustToInterfaceOrientation;\n\n    const id = registerSensor(sensorType, config, (data) => {\n      'worklet';\n      if (adjustToInterfaceOrientation) {\n        if (sensorType === SensorType.ROTATION) {\n          data = adjustRotationToInterfaceOrientation(data as ValueRotation);\n        } else {\n          data = adjustVectorToInterfaceOrientation(data as Value3D);\n        }\n      }\n      sensorData.value = data;\n      callMicrotasks();\n    });\n\n    if (id !== -1) {\n      // if sensor is available\n      ref.current.unregister = () => unregisterSensor(id);\n      ref.current.isAvailable = true;\n    } else {\n      // if sensor is unavailable\n      ref.current.unregister = () => {\n        // NOOP\n      };\n      ref.current.isAvailable = false;\n    }\n\n    return () => {\n      ref.current.unregister();\n    };\n  }, [sensorType, config]);\n\n  return ref.current as AnimatedSensor<ValueRotation> | AnimatedSensor<Value3D>;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}