{"ast":null,"code":"\"use strict\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"disabled\",\"onPress\",\"onPressIn\",\"onPressOut\",\"android_ripple\",\"pressColor\",\"pressOpacity\",\"hoverEffect\",\"style\",\"children\"];import{useTheme}from'@react-navigation/native';import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Easing from\"react-native-web/dist/exports/Easing\";import Platform from\"react-native-web/dist/exports/Platform\";import Pressable from\"react-native-web/dist/exports/Pressable\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AnimatedPressable=Animated.createAnimatedComponent(Pressable);const ANDROID_VERSION_LOLLIPOP=21;const ANDROID_SUPPORTS_RIPPLE=false&&Platform.Version>=ANDROID_VERSION_LOLLIPOP;const useNativeDriver=false;function PlatformPressableInternal(_ref,ref){let{disabled,onPress,onPressIn,onPressOut,android_ripple,pressColor,pressOpacity=0.3,hoverEffect,style,children}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const{dark}=useTheme();const[opacity]=React.useState(()=>new Animated.Value(1));const animateTo=(toValue,duration)=>{if(ANDROID_SUPPORTS_RIPPLE){return;}Animated.timing(opacity,{toValue,duration,easing:Easing.inOut(Easing.quad),useNativeDriver}).start();};const handlePress=e=>{if(true&&rest.href!==null){const hasModifierKey='metaKey'in e&&e.metaKey||'altKey'in e&&e.altKey||'ctrlKey'in e&&e.ctrlKey||'shiftKey'in e&&e.shiftKey;const isLeftClick='button'in e?e.button==null||e.button===0:true;const isSelfTarget=e.currentTarget&&'target'in e.currentTarget?[undefined,null,'','self'].includes(e.currentTarget.target):true;if(!hasModifierKey&&isLeftClick&&isSelfTarget){e.preventDefault();onPress?.(e);}}else{onPress?.(e);}};const handlePressIn=e=>{animateTo(pressOpacity,0);onPressIn?.(e);};const handlePressOut=e=>{animateTo(1,200);onPressOut?.(e);};return _jsxs(AnimatedPressable,Object.assign({ref:ref,accessible:true,role:true&&rest.href!=null?'link':'button',onPress:disabled?undefined:handlePress,onPressIn:handlePressIn,onPressOut:handlePressOut,android_ripple:ANDROID_SUPPORTS_RIPPLE?Object.assign({color:pressColor!==undefined?pressColor:dark?'rgba(255, 255, 255, .32)':'rgba(0, 0, 0, .32)'},android_ripple):undefined,style:[{cursor:true||false?'pointer':'auto',opacity:!ANDROID_SUPPORTS_RIPPLE?opacity:1},style]},rest,{children:[_jsx(HoverEffect,Object.assign({},hoverEffect)),children]}));}export const PlatformPressable=React.forwardRef(PlatformPressableInternal);PlatformPressable.displayName='PlatformPressable';const css=String.raw;const CLASS_NAME=`__react-navigation_elements_Pressable_hover`;const CSS_TEXT=css`\n  .${CLASS_NAME} {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    border-radius: inherit;\n    background-color: var(--overlay-color);\n    opacity: 0;\n    transition: opacity 0.15s;\n    pointer-events: none;\n  }\n\n  a:hover > .${CLASS_NAME}, button:hover > .${CLASS_NAME} {\n    opacity: var(--overlay-hover-opacity);\n  }\n\n  a:active > .${CLASS_NAME}, button:active > .${CLASS_NAME} {\n    opacity: var(--overlay-active-opacity);\n  }\n`;const HoverEffect=({color,hoverOpacity=0.08,activeOpacity=0.16})=>{if(false||color==null){return null;}return _jsxs(_Fragment,{children:[_jsx(\"style\",{href:CLASS_NAME,precedence:\"elements\",children:CSS_TEXT}),_jsx(\"div\",{className:CLASS_NAME,style:{'--overlay-color':color,'--overlay-hover-opacity':hoverOpacity,'--overlay-active-opacity':activeOpacity}})]});};","map":{"version":3,"names":["useTheme","React","Animated","Easing","Platform","Pressable","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AnimatedPressable","createAnimatedComponent","ANDROID_VERSION_LOLLIPOP","ANDROID_SUPPORTS_RIPPLE","Version","useNativeDriver","PlatformPressableInternal","_ref","ref","disabled","onPress","onPressIn","onPressOut","android_ripple","pressColor","pressOpacity","hoverEffect","style","children","rest","_objectWithoutPropertiesLoose","_excluded","dark","opacity","useState","Value","animateTo","toValue","duration","timing","easing","inOut","quad","start","handlePress","e","href","hasModifierKey","metaKey","altKey","ctrlKey","shiftKey","isLeftClick","button","isSelfTarget","currentTarget","undefined","includes","target","preventDefault","handlePressIn","handlePressOut","Object","assign","accessible","role","color","cursor","HoverEffect","PlatformPressable","forwardRef","displayName","css","String","raw","CLASS_NAME","CSS_TEXT","hoverOpacity","activeOpacity","precedence","className"],"sources":["/home/user/rork-vibesync-458/node_modules/@react-navigation/elements/src/PlatformPressable.tsx"],"sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  type GestureResponderEvent,\n  Platform,\n  Pressable,\n  type PressableProps,\n  type StyleProp,\n  type ViewStyle,\n} from 'react-native';\n\ntype HoverEffectProps = {\n  color?: string;\n  hoverOpacity?: number;\n  activeOpacity?: number;\n};\n\nexport type Props = Omit<PressableProps, 'style' | 'onPress'> & {\n  href?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  hoverEffect?: HoverEffectProps;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  onPress?: (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => void;\n  children: React.ReactNode;\n};\n\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\nconst ANDROID_SUPPORTS_RIPPLE =\n  Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\n/**\n * PlatformPressable provides an abstraction on top of Pressable to handle platform differences.\n */\nfunction PlatformPressableInternal(\n  {\n    disabled,\n    onPress,\n    onPressIn,\n    onPressOut,\n    android_ripple,\n    pressColor,\n    pressOpacity = 0.3,\n    hoverEffect,\n    style,\n    children,\n    ...rest\n  }: Props,\n  ref: React.Ref<React.ComponentRef<typeof AnimatedPressable>>\n) {\n  const { dark } = useTheme();\n  const [opacity] = React.useState(() => new Animated.Value(1));\n\n  const animateTo = (toValue: number, duration: number) => {\n    if (ANDROID_SUPPORTS_RIPPLE) {\n      return;\n    }\n\n    Animated.timing(opacity, {\n      toValue,\n      duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver,\n    }).start();\n  };\n\n  const handlePress = (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => {\n    if (Platform.OS === 'web' && rest.href !== null) {\n      // ignore clicks with modifier keys\n      const hasModifierKey =\n        ('metaKey' in e && e.metaKey) ||\n        ('altKey' in e && e.altKey) ||\n        ('ctrlKey' in e && e.ctrlKey) ||\n        ('shiftKey' in e && e.shiftKey);\n\n      // only handle left clicks\n      const isLeftClick =\n        'button' in e ? e.button == null || e.button === 0 : true;\n\n      // let browser handle \"target=_blank\" etc.\n      const isSelfTarget =\n        e.currentTarget && 'target' in e.currentTarget\n          ? [undefined, null, '', 'self'].includes(e.currentTarget.target)\n          : true;\n\n      if (!hasModifierKey && isLeftClick && isSelfTarget) {\n        e.preventDefault();\n        // call `onPress` only when browser default is prevented\n        // this prevents app from handling the click when a link is being opened\n        onPress?.(e);\n      }\n    } else {\n      onPress?.(e);\n    }\n  };\n\n  const handlePressIn = (e: GestureResponderEvent) => {\n    animateTo(pressOpacity, 0);\n    onPressIn?.(e);\n  };\n\n  const handlePressOut = (e: GestureResponderEvent) => {\n    animateTo(1, 200);\n    onPressOut?.(e);\n  };\n\n  return (\n    <AnimatedPressable\n      ref={ref}\n      accessible\n      role={Platform.OS === 'web' && rest.href != null ? 'link' : 'button'}\n      onPress={disabled ? undefined : handlePress}\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n      android_ripple={\n        ANDROID_SUPPORTS_RIPPLE\n          ? {\n              color:\n                pressColor !== undefined\n                  ? pressColor\n                  : dark\n                    ? 'rgba(255, 255, 255, .32)'\n                    : 'rgba(0, 0, 0, .32)',\n              ...android_ripple,\n            }\n          : undefined\n      }\n      style={[\n        {\n          cursor:\n            Platform.OS === 'web' || Platform.OS === 'ios'\n              ? // Pointer cursor on web\n                // Hover effect on iPad and visionOS\n                'pointer'\n              : 'auto',\n          opacity: !ANDROID_SUPPORTS_RIPPLE ? opacity : 1,\n        },\n        style,\n      ]}\n      {...rest}\n    >\n      <HoverEffect {...hoverEffect} />\n      {children}\n    </AnimatedPressable>\n  );\n}\n\nexport const PlatformPressable = React.forwardRef(PlatformPressableInternal);\n\nPlatformPressable.displayName = 'PlatformPressable';\n\nconst css = String.raw;\n\nconst CLASS_NAME = `__react-navigation_elements_Pressable_hover`;\n\nconst CSS_TEXT = css`\n  .${CLASS_NAME} {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    border-radius: inherit;\n    background-color: var(--overlay-color);\n    opacity: 0;\n    transition: opacity 0.15s;\n    pointer-events: none;\n  }\n\n  a:hover > .${CLASS_NAME}, button:hover > .${CLASS_NAME} {\n    opacity: var(--overlay-hover-opacity);\n  }\n\n  a:active > .${CLASS_NAME}, button:active > .${CLASS_NAME} {\n    opacity: var(--overlay-active-opacity);\n  }\n`;\n\nconst HoverEffect = ({\n  color,\n  hoverOpacity = 0.08,\n  activeOpacity = 0.16,\n}: HoverEffectProps) => {\n  if (Platform.OS !== 'web' || color == null) {\n    return null;\n  }\n\n  return (\n    <>\n      <style href={CLASS_NAME} precedence=\"elements\">\n        {CSS_TEXT}\n      </style>\n      <div\n        className={CLASS_NAME}\n        style={{\n          // @ts-expect-error: CSS variables are not typed\n          '--overlay-color': color,\n          '--overlay-hover-opacity': hoverOpacity,\n          '--overlay-active-opacity': activeOpacity,\n        }}\n      />\n    </>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}