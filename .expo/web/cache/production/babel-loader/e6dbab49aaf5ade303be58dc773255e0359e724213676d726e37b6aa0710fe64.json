{"ast":null,"code":"export function getBundleUrl(){let scriptURL=null;if(false){scriptURL='file://'+__filename;}else{scriptURL=document.currentScript?.src;}if(scriptURL==null){return null;}const url=new URL(scriptURL);return`${url.protocol}//${url.host}${url.pathname}`;}","map":{"version":3,"names":["getBundleUrl","scriptURL","__filename","document","currentScript","src","url","URL","protocol","host","pathname"],"sources":["/home/user/rork-vibesync-458/node_modules/expo/src/utils/getBundleUrl.web.ts"],"sourcesContent":["// Copyright 2015-present 650 Industries. All rights reserved.\n\nexport function getBundleUrl(): string | null {\n  let scriptURL: string | null | undefined = null;\n\n  if (typeof window === 'undefined') {\n    // For server runtime, we use the filename of the current script\n    // @ts-ignore The react-native tsconfig doesn't support CJS\n    scriptURL = 'file://' + __filename;\n  } else {\n    // TODO: Try to support `import.meta.url` when the ecosystem supports ESM,\n    // and jest doesn't throw SyntaxError when accessing `import.meta`.\n    scriptURL = (document.currentScript as HTMLScriptElement)?.src;\n  }\n\n  if (scriptURL == null) {\n    return null;\n  }\n  const url = new URL(scriptURL);\n  return `${url.protocol}//${url.host}${url.pathname}`;\n}\n"],"mappings":"AAEA,MAAO,SAAS,CAAAA,YAAYA,CAAA,CAAkB,CAC5C,GAAI,CAAAC,SAAoC,CAAG,IAAI,CAE/C,SAAmC,CAGjCA,SAAS,CAAG,SAAS,CAAGC,UAAU,CACpC,CAAC,IAAM,CAGLD,SAAS,CAAIE,QAAQ,CAACC,aAAa,EAAwBC,GAAG,CAChE,CAEA,GAAIJ,SAAS,EAAI,IAAI,CAAE,CACrB,MAAO,KAAI,CACb,CACA,KAAM,CAAAK,GAAG,CAAG,GAAI,CAAAC,GAAG,CAACN,SAAS,CAAC,CAC9B,MAAO,GAAGK,GAAG,CAACE,QAAQ,KAAKF,GAAG,CAACG,IAAI,GAAGH,GAAG,CAACI,QAAQ,EAAE,CACtD","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}