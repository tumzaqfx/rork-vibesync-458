{"ast":null,"code":"'use strict';import{isFabric}from\"../PlatformChecker.js\";import updateProps from\"../UpdateProps.js\";const IS_FABRIC=isFabric();const _worklet_14626504491388_init_data={code:\"function createViewDescriptorPaper_reactNativeReanimated_styleUpdaterJs1(screenId){return{tag:screenId,name:'RCTView'};}\"};const createViewDescriptorPaper=function(){const createViewDescriptorPaper=function(screenId){return{tag:screenId,name:'RCTView'};};createViewDescriptorPaper.__closure={};createViewDescriptorPaper.__workletHash=14626504491388;createViewDescriptorPaper.__initData=_worklet_14626504491388_init_data;return createViewDescriptorPaper;}();const _worklet_13488996496906_init_data={code:\"function createViewDescriptorFabric_reactNativeReanimated_styleUpdaterJs2(screenId){return{shadowNodeWrapper:screenId};}\"};const createViewDescriptorFabric=function(){const createViewDescriptorFabric=function(screenId){return{shadowNodeWrapper:screenId};};createViewDescriptorFabric.__closure={};createViewDescriptorFabric.__workletHash=13488996496906;createViewDescriptorFabric.__initData=_worklet_13488996496906_init_data;return createViewDescriptorFabric;}();const createViewDescriptor=IS_FABRIC?createViewDescriptorFabric:createViewDescriptorPaper;const _worklet_15431420270588_init_data={code:\"function applyStyleForTopScreen_reactNativeReanimated_styleUpdaterJs3(screenTransitionConfig,event){const{createViewDescriptor,updateProps}=this.__closure;const{screenDimensions:screenDimensions,topScreenId:topScreenId,screenTransition:screenTransition}=screenTransitionConfig;const{topScreenStyle:computeTopScreenStyle}=screenTransition;const topScreenStyle=computeTopScreenStyle(event,screenDimensions);const topScreenDescriptor={value:[createViewDescriptor(topScreenId)]};updateProps(topScreenDescriptor,topScreenStyle,undefined);}\"};const applyStyleForTopScreen=function(){const applyStyleForTopScreen=function(screenTransitionConfig,event){const{screenDimensions,topScreenId,screenTransition}=screenTransitionConfig;const{topScreenStyle:computeTopScreenStyle}=screenTransition;const topScreenStyle=computeTopScreenStyle(event,screenDimensions);const topScreenDescriptor={value:[createViewDescriptor(topScreenId)]};updateProps(topScreenDescriptor,topScreenStyle,undefined);};applyStyleForTopScreen.__closure={createViewDescriptor,updateProps};applyStyleForTopScreen.__workletHash=15431420270588;applyStyleForTopScreen.__initData=_worklet_15431420270588_init_data;return applyStyleForTopScreen;}();const _worklet_2747176653608_init_data={code:\"function applyStyleForBelowTopScreen_reactNativeReanimated_styleUpdaterJs4(screenTransitionConfig,event){const{createViewDescriptor,updateProps}=this.__closure;const{screenDimensions:screenDimensions,belowTopScreenId:belowTopScreenId,screenTransition:screenTransition}=screenTransitionConfig;const{belowTopScreenStyle:computeBelowTopScreenStyle}=screenTransition;const belowTopScreenStyle=computeBelowTopScreenStyle(event,screenDimensions);const belowTopScreenDescriptor={value:[createViewDescriptor(belowTopScreenId)]};updateProps(belowTopScreenDescriptor,belowTopScreenStyle,undefined);}\"};export const applyStyleForBelowTopScreen=function(){const applyStyleForBelowTopScreen=function(screenTransitionConfig,event){const{screenDimensions,belowTopScreenId,screenTransition}=screenTransitionConfig;const{belowTopScreenStyle:computeBelowTopScreenStyle}=screenTransition;const belowTopScreenStyle=computeBelowTopScreenStyle(event,screenDimensions);const belowTopScreenDescriptor={value:[createViewDescriptor(belowTopScreenId)]};updateProps(belowTopScreenDescriptor,belowTopScreenStyle,undefined);};applyStyleForBelowTopScreen.__closure={createViewDescriptor,updateProps};applyStyleForBelowTopScreen.__workletHash=2747176653608;applyStyleForBelowTopScreen.__initData=_worklet_2747176653608_init_data;return applyStyleForBelowTopScreen;}();const _worklet_7793038430696_init_data={code:\"function applyStyle_reactNativeReanimated_styleUpdaterJs5(screenTransitionConfig,event){const{applyStyleForTopScreen,applyStyleForBelowTopScreen}=this.__closure;applyStyleForTopScreen(screenTransitionConfig,event);applyStyleForBelowTopScreen(screenTransitionConfig,event);}\"};export const applyStyle=function(){const applyStyle=function(screenTransitionConfig,event){applyStyleForTopScreen(screenTransitionConfig,event);applyStyleForBelowTopScreen(screenTransitionConfig,event);};applyStyle.__closure={applyStyleForTopScreen,applyStyleForBelowTopScreen};applyStyle.__workletHash=7793038430696;applyStyle.__initData=_worklet_7793038430696_init_data;return applyStyle;}();","map":{"version":3,"names":["isFabric","updateProps","IS_FABRIC","_worklet_14626504491388_init_data","code","createViewDescriptorPaper","screenId","tag","name","__closure","__workletHash","__initData","_worklet_13488996496906_init_data","createViewDescriptorFabric","shadowNodeWrapper","createViewDescriptor","_worklet_15431420270588_init_data","applyStyleForTopScreen","screenTransitionConfig","event","screenDimensions","topScreenId","screenTransition","topScreenStyle","computeTopScreenStyle","topScreenDescriptor","value","undefined","_worklet_2747176653608_init_data","applyStyleForBelowTopScreen","belowTopScreenId","belowTopScreenStyle","computeBelowTopScreenStyle","belowTopScreenDescriptor","_worklet_7793038430696_init_data","applyStyle"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/screenTransition/styleUpdater.ts"],"sourcesContent":["'use strict';\nimport { isFabric } from '../PlatformChecker';\nimport updateProps from '../UpdateProps';\nimport type { ShadowNodeWrapper } from '../commonTypes';\nimport type { Descriptor } from '../hook/commonTypes';\nimport type {\n  PanGestureHandlerEventPayload,\n  ScreenTransitionConfig,\n} from './commonTypes';\n\nconst IS_FABRIC = isFabric();\n\nfunction createViewDescriptorPaper(screenId: number | ShadowNodeWrapper) {\n  'worklet';\n  return { tag: screenId, name: 'RCTView' };\n}\nfunction createViewDescriptorFabric(screenId: number | ShadowNodeWrapper) {\n  'worklet';\n  return { shadowNodeWrapper: screenId };\n}\nconst createViewDescriptor = IS_FABRIC\n  ? createViewDescriptorFabric\n  : createViewDescriptorPaper;\n\nfunction applyStyleForTopScreen(\n  screenTransitionConfig: ScreenTransitionConfig,\n  event: PanGestureHandlerEventPayload\n) {\n  'worklet';\n  const { screenDimensions, topScreenId, screenTransition } =\n    screenTransitionConfig;\n  const { topScreenStyle: computeTopScreenStyle } = screenTransition;\n  const topScreenStyle = computeTopScreenStyle(event, screenDimensions);\n  const topScreenDescriptor = {\n    value: [createViewDescriptor(topScreenId)] as Descriptor[],\n  };\n  updateProps(topScreenDescriptor, topScreenStyle, undefined);\n}\n\nexport function applyStyleForBelowTopScreen(\n  screenTransitionConfig: ScreenTransitionConfig,\n  event: PanGestureHandlerEventPayload\n) {\n  'worklet';\n  const { screenDimensions, belowTopScreenId, screenTransition } =\n    screenTransitionConfig;\n  const { belowTopScreenStyle: computeBelowTopScreenStyle } = screenTransition;\n  const belowTopScreenStyle = computeBelowTopScreenStyle(\n    event,\n    screenDimensions\n  );\n  const belowTopScreenDescriptor = {\n    value: [createViewDescriptor(belowTopScreenId)] as Descriptor[],\n  };\n  updateProps(belowTopScreenDescriptor, belowTopScreenStyle, undefined);\n}\n\nexport function applyStyle(\n  screenTransitionConfig: ScreenTransitionConfig,\n  event: PanGestureHandlerEventPayload\n) {\n  'worklet';\n  applyStyleForTopScreen(screenTransitionConfig, event);\n  applyStyleForBelowTopScreen(screenTransitionConfig, event);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}