{"ast":null,"code":"'use strict';import{useRef}from'react';import{useSharedValue}from\"./useSharedValue.js\";import{getShadowNodeWrapperFromRef}from'../fabricUtils';import{makeShareableCloneRecursive}from\"../shareables.js\";import{shareableMappingCache}from\"../shareableMappingCache.js\";import Platform from\"react-native-web/dist/exports/Platform\";import{findNodeHandle}from'../platformFunctions/findNodeHandle';import{isFabric,isWeb}from\"../PlatformChecker.js\";const IS_WEB=isWeb();function getComponentOrScrollable(component){if(isFabric()&&component.getNativeScrollRef){return component.getNativeScrollRef();}else if(!isFabric()&&component.getScrollableNode){return component.getScrollableNode();}return component;}const _worklet_9724470751943_init_data={code:\"function reactNativeReanimated_useAnimatedRefJs1(){const{tag,viewName}=this.__closure;const f=function(){return tag.value;};f.viewName=viewName;return f;}\"};export function useAnimatedRef(){const tag=useSharedValue(-1);const viewName=useSharedValue(null);const ref=useRef();if(!ref.current){const fun=component=>{if(component){const getTagValueFunction=isFabric()?getShadowNodeWrapperFromRef:findNodeHandle;const getTagOrShadowNodeWrapper=()=>{return IS_WEB?getComponentOrScrollable(component):getTagValueFunction(getComponentOrScrollable(component));};tag.value=getTagOrShadowNodeWrapper();fun.getTag=isFabric()?()=>findNodeHandle(getComponentOrScrollable(component)):getTagOrShadowNodeWrapper;fun.current=component;if(false&&!isFabric()){viewName.value=component?.viewConfig?.uiViewClassName||'RCTView';}}return tag.value;};fun.current=null;const animatedRefShareableHandle=makeShareableCloneRecursive({__init:function(){const reactNativeReanimated_useAnimatedRefJs1=function(){const f=()=>tag.value;f.viewName=viewName;return f;};reactNativeReanimated_useAnimatedRefJs1.__closure={tag,viewName};reactNativeReanimated_useAnimatedRefJs1.__workletHash=9724470751943;reactNativeReanimated_useAnimatedRefJs1.__initData=_worklet_9724470751943_init_data;return reactNativeReanimated_useAnimatedRefJs1;}()});shareableMappingCache.set(fun,animatedRefShareableHandle);ref.current=fun;}return ref.current;}","map":{"version":3,"names":["useRef","useSharedValue","getShadowNodeWrapperFromRef","makeShareableCloneRecursive","shareableMappingCache","Platform","findNodeHandle","isFabric","isWeb","IS_WEB","getComponentOrScrollable","component","getNativeScrollRef","getScrollableNode","_worklet_9724470751943_init_data","code","useAnimatedRef","tag","viewName","ref","current","fun","getTagValueFunction","getTagOrShadowNodeWrapper","value","getTag","viewConfig","uiViewClassName","animatedRefShareableHandle","__init","reactNativeReanimated_useAnimatedRefJs1","f","__closure","__workletHash","__initData","set"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/hook/useAnimatedRef.ts"],"sourcesContent":["'use strict';\nimport type { Component } from 'react';\nimport { useRef } from 'react';\nimport { useSharedValue } from './useSharedValue';\nimport type { AnimatedRef, AnimatedRefOnUI } from './commonTypes';\nimport type { ShadowNodeWrapper } from '../commonTypes';\nimport { getShadowNodeWrapperFromRef } from '../fabricUtils';\nimport { makeShareableCloneRecursive } from '../shareables';\nimport { shareableMappingCache } from '../shareableMappingCache';\nimport { Platform } from 'react-native';\nimport { findNodeHandle } from '../platformFunctions/findNodeHandle';\nimport type { ScrollView, FlatList } from 'react-native';\nimport { isFabric, isWeb } from '../PlatformChecker';\n\nconst IS_WEB = isWeb();\n\ninterface MaybeScrollableComponent extends Component {\n  getNativeScrollRef?: FlatList['getNativeScrollRef'];\n  getScrollableNode?:\n    | ScrollView['getScrollableNode']\n    | FlatList['getScrollableNode'];\n  viewConfig?: {\n    uiViewClassName?: string;\n  };\n}\n\nfunction getComponentOrScrollable(component: MaybeScrollableComponent) {\n  if (isFabric() && component.getNativeScrollRef) {\n    return component.getNativeScrollRef();\n  } else if (!isFabric() && component.getScrollableNode) {\n    return component.getScrollableNode();\n  }\n  return component;\n}\n\n/**\n * Lets you get a reference of a view that you can use inside a worklet.\n *\n * @returns An object with a `.current` property which contains an instance of a\n *   component.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef\n */\nexport function useAnimatedRef<\n  TComponent extends Component,\n>(): AnimatedRef<TComponent> {\n  const tag = useSharedValue<number | ShadowNodeWrapper | null>(-1);\n  const viewName = useSharedValue<string | null>(null);\n\n  const ref = useRef<AnimatedRef<TComponent>>();\n\n  if (!ref.current) {\n    const fun: AnimatedRef<TComponent> = <AnimatedRef<TComponent>>((\n      component\n    ) => {\n      // enters when ref is set by attaching to a component\n      if (component) {\n        const getTagValueFunction = isFabric()\n          ? getShadowNodeWrapperFromRef\n          : findNodeHandle;\n\n        const getTagOrShadowNodeWrapper = () => {\n          return IS_WEB\n            ? getComponentOrScrollable(component)\n            : getTagValueFunction(getComponentOrScrollable(component));\n        };\n\n        tag.value = getTagOrShadowNodeWrapper();\n\n        // On Fabric we have to unwrap the tag from the shadow node wrapper\n        fun.getTag = isFabric()\n          ? () => findNodeHandle(getComponentOrScrollable(component))\n          : getTagOrShadowNodeWrapper;\n\n        fun.current = component;\n        // viewName is required only on iOS with Paper\n        if (Platform.OS === 'ios' && !isFabric()) {\n          viewName.value =\n            (component as MaybeScrollableComponent)?.viewConfig\n              ?.uiViewClassName || 'RCTView';\n        }\n      }\n      return tag.value;\n    });\n\n    fun.current = null;\n\n    const animatedRefShareableHandle = makeShareableCloneRecursive({\n      __init: () => {\n        'worklet';\n        const f: AnimatedRefOnUI = () => tag.value;\n        f.viewName = viewName;\n        return f;\n      },\n    });\n    shareableMappingCache.set(fun, animatedRefShareableHandle);\n    ref.current = fun;\n  }\n\n  return ref.current;\n}\n"],"mappings":"AAAA,YAAY,CAEZ,OAASA,MAAM,KAAQ,OAAO,CAC9B,OAASC,cAAc,KAAQ,qBAAkB,CAGjD,OAASC,2BAA2B,KAAQ,gBAAgB,CAC5D,OAASC,2BAA2B,KAAQ,kBAAe,CAC3D,OAASC,qBAAqB,KAAQ,6BAA0B,QAAAC,QAAA,8CAEhE,OAASC,cAAc,KAAQ,qCAAqC,CAEpE,OAASC,QAAQ,CAAEC,KAAK,KAAQ,uBAAoB,CAEpD,KAAM,CAAAC,MAAM,CAAGD,KAAK,CAAC,CAAC,CAYtB,QAAS,CAAAE,wBAAwBA,CAACC,SAAmC,CAAE,CACrE,GAAIJ,QAAQ,CAAC,CAAC,EAAII,SAAS,CAACC,kBAAkB,CAAE,CAC9C,MAAO,CAAAD,SAAS,CAACC,kBAAkB,CAAC,CAAC,CACvC,CAAC,IAAM,IAAI,CAACL,QAAQ,CAAC,CAAC,EAAII,SAAS,CAACE,iBAAiB,CAAE,CACrD,MAAO,CAAAF,SAAS,CAACE,iBAAiB,CAAC,CAAC,CACtC,CACA,MAAO,CAAAF,SAAS,CAClB,OAAAG,gCAAA,EAAAC,IAAA,+JASA,MAAO,SAAS,CAAAC,cAAcA,CAAA,CAED,CAC3B,KAAM,CAAAC,GAAG,CAAGhB,cAAc,CAAoC,CAAC,CAAC,CAAC,CACjE,KAAM,CAAAiB,QAAQ,CAAGjB,cAAc,CAAgB,IAAI,CAAC,CAEpD,KAAM,CAAAkB,GAAG,CAAGnB,MAAM,CAA0B,CAAC,CAE7C,GAAI,CAACmB,GAAG,CAACC,OAAO,CAAE,CAChB,KAAM,CAAAC,GAA4B,CAChCV,SAAS,EACN,CAEH,GAAIA,SAAS,CAAE,CACb,KAAM,CAAAW,mBAAmB,CAAGf,QAAQ,CAAC,CAAC,CAClCL,2BAA2B,CAC3BI,cAAc,CAElB,KAAM,CAAAiB,yBAAyB,CAAGA,CAAA,GAAM,CACtC,MAAO,CAAAd,MAAM,CACTC,wBAAwB,CAACC,SAAS,CAAC,CACnCW,mBAAmB,CAACZ,wBAAwB,CAACC,SAAS,CAAC,CAAC,CAC9D,CAAC,CAEDM,GAAG,CAACO,KAAK,CAAGD,yBAAyB,CAAC,CAAC,CAGvCF,GAAG,CAACI,MAAM,CAAGlB,QAAQ,CAAC,CAAC,CACnB,IAAMD,cAAc,CAACI,wBAAwB,CAACC,SAAS,CAAC,CAAC,CACzDY,yBAAyB,CAE7BF,GAAG,CAACD,OAAO,CAAGT,SAAS,CAEvB,GAAI,OAAyB,CAACJ,QAAQ,CAAC,CAAC,CAAE,CACxCW,QAAQ,CAACM,KAAK,CACXb,SAAS,EAA+Be,UAAU,EAC/CC,eAAe,EAAI,SAAS,CACpC,CACF,CACA,MAAO,CAAAV,GAAG,CAACO,KAAK,CAClB,CAAE,CAEFH,GAAG,CAACD,OAAO,CAAG,IAAI,CAElB,KAAM,CAAAQ,0BAA0B,CAAGzB,2BAA2B,CAAC,CAC7D0B,MAAM,CAAE,iBAAAC,uCAAA,SAAAA,CAAA,CAAM,CAEZ,KAAM,CAAAC,CAAkB,CAAGA,CAAA,GAAMd,GAAG,CAACO,KAAK,CAC1CO,CAAC,CAACb,QAAQ,CAAGA,QAAQ,CACrB,MAAO,CAAAa,CAAC,CACV,EAAAD,uCAAA,CAAAE,SAAA,EAAAf,GAAA,CAAAC,QAAA,EAAAY,uCAAA,CAAAG,aAAA,eAAAH,uCAAA,CAAAI,UAAA,CAAApB,gCAAA,QAAAgB,uCAAA,EALQ,EAMV,CAAC,CAAC,CACF1B,qBAAqB,CAAC+B,GAAG,CAACd,GAAG,CAAEO,0BAA0B,CAAC,CAC1DT,GAAG,CAACC,OAAO,CAAGC,GAAG,CACnB,CAEA,MAAO,CAAAF,GAAG,CAACC,OAAO,CACpB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}