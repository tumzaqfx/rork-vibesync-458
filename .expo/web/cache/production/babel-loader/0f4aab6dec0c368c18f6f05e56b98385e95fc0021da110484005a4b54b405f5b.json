{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import{Component}from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import{State}from'../../State';import{BaseButton}from'../GestureButtons';export const TOUCHABLE_STATE={UNDETERMINED:0,BEGAN:1,MOVED_OUTSIDE:2};export default class GenericTouchable extends Component{constructor(...args){super(...args);_defineProperty(this,\"pressInTimeout\",void 0);_defineProperty(this,\"pressOutTimeout\",void 0);_defineProperty(this,\"longPressTimeout\",void 0);_defineProperty(this,\"longPressDetected\",false);_defineProperty(this,\"pointerInside\",true);_defineProperty(this,\"STATE\",TOUCHABLE_STATE.UNDETERMINED);_defineProperty(this,\"onGestureEvent\",({nativeEvent:{pointerInside}})=>{if(this.pointerInside!==pointerInside){if(pointerInside){this.onMoveIn();}else{this.onMoveOut();}}this.pointerInside=pointerInside;});_defineProperty(this,\"onHandlerStateChange\",({nativeEvent})=>{const{state}=nativeEvent;if(state===State.CANCELLED||state===State.FAILED){this.moveToState(TOUCHABLE_STATE.UNDETERMINED);}else if(state===(true?State.ACTIVE:State.BEGAN)&&this.STATE===TOUCHABLE_STATE.UNDETERMINED){this.handlePressIn();}else if(state===State.END){const shouldCallOnPress=!this.longPressDetected&&this.STATE!==TOUCHABLE_STATE.MOVED_OUTSIDE&&this.pressOutTimeout===null;this.handleGoToUndetermined();if(shouldCallOnPress){var _this$props$onPress,_this$props;(_this$props$onPress=(_this$props=this.props).onPress)===null||_this$props$onPress===void 0?void 0:_this$props$onPress.call(_this$props);}}});_defineProperty(this,\"onLongPressDetected\",()=>{var _this$props$onLongPre,_this$props2;this.longPressDetected=true;(_this$props$onLongPre=(_this$props2=this.props).onLongPress)===null||_this$props$onLongPre===void 0?void 0:_this$props$onLongPre.call(_this$props2);});}handlePressIn(){if(this.props.delayPressIn){this.pressInTimeout=setTimeout(()=>{this.moveToState(TOUCHABLE_STATE.BEGAN);this.pressInTimeout=null;},this.props.delayPressIn);}else{this.moveToState(TOUCHABLE_STATE.BEGAN);}if(this.props.onLongPress){const time=(this.props.delayPressIn||0)+(this.props.delayLongPress||0);this.longPressTimeout=setTimeout(this.onLongPressDetected,time);}}handleMoveOutside(){if(this.props.delayPressOut){this.pressOutTimeout=this.pressOutTimeout||setTimeout(()=>{this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);this.pressOutTimeout=null;},this.props.delayPressOut);}else{this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);}}handleGoToUndetermined(){clearTimeout(this.pressOutTimeout);if(this.props.delayPressOut){this.pressOutTimeout=setTimeout(()=>{if(this.STATE===TOUCHABLE_STATE.UNDETERMINED){this.moveToState(TOUCHABLE_STATE.BEGAN);}this.moveToState(TOUCHABLE_STATE.UNDETERMINED);this.pressOutTimeout=null;},this.props.delayPressOut);}else{if(this.STATE===TOUCHABLE_STATE.UNDETERMINED){this.moveToState(TOUCHABLE_STATE.BEGAN);}this.moveToState(TOUCHABLE_STATE.UNDETERMINED);}}componentDidMount(){this.reset();}reset(){this.longPressDetected=false;this.pointerInside=true;clearTimeout(this.pressInTimeout);clearTimeout(this.pressOutTimeout);clearTimeout(this.longPressTimeout);this.pressOutTimeout=null;this.longPressTimeout=null;this.pressInTimeout=null;}moveToState(newState){var _this$props$onStateCh,_this$props6;if(newState===this.STATE){return;}if(newState===TOUCHABLE_STATE.BEGAN){var _this$props$onPressIn,_this$props3;(_this$props$onPressIn=(_this$props3=this.props).onPressIn)===null||_this$props$onPressIn===void 0?void 0:_this$props$onPressIn.call(_this$props3);}else if(newState===TOUCHABLE_STATE.MOVED_OUTSIDE){var _this$props$onPressOu,_this$props4;(_this$props$onPressOu=(_this$props4=this.props).onPressOut)===null||_this$props$onPressOu===void 0?void 0:_this$props$onPressOu.call(_this$props4);}else if(newState===TOUCHABLE_STATE.UNDETERMINED){this.reset();if(this.STATE===TOUCHABLE_STATE.BEGAN){var _this$props$onPressOu2,_this$props5;(_this$props$onPressOu2=(_this$props5=this.props).onPressOut)===null||_this$props$onPressOu2===void 0?void 0:_this$props$onPressOu2.call(_this$props5);}}(_this$props$onStateCh=(_this$props6=this.props).onStateChange)===null||_this$props$onStateCh===void 0?void 0:_this$props$onStateCh.call(_this$props6,this.STATE,newState);this.STATE=newState;}componentWillUnmount(){this.reset();}onMoveIn(){if(this.STATE===TOUCHABLE_STATE.MOVED_OUTSIDE){this.moveToState(TOUCHABLE_STATE.BEGAN);}}onMoveOut(){clearTimeout(this.longPressTimeout);this.longPressTimeout=null;if(this.STATE===TOUCHABLE_STATE.BEGAN){this.handleMoveOutside();}}render(){var _ref,_this$props$touchSoun;const hitSlop=(_ref=typeof this.props.hitSlop==='number'?{top:this.props.hitSlop,left:this.props.hitSlop,bottom:this.props.hitSlop,right:this.props.hitSlop}:this.props.hitSlop)!==null&&_ref!==void 0?_ref:undefined;const coreProps={accessible:this.props.accessible!==false,accessibilityLabel:this.props.accessibilityLabel,accessibilityHint:this.props.accessibilityHint,accessibilityRole:this.props.accessibilityRole,accessibilityState:this.props.accessibilityState,accessibilityActions:this.props.accessibilityActions,onAccessibilityAction:this.props.onAccessibilityAction,nativeID:this.props.nativeID,onLayout:this.props.onLayout};return React.createElement(BaseButton,_extends({style:this.props.containerStyle,onHandlerStateChange:this.props.disabled?undefined:this.onHandlerStateChange,onGestureEvent:this.onGestureEvent,hitSlop:hitSlop,userSelect:this.props.userSelect,shouldActivateOnStart:this.props.shouldActivateOnStart,disallowInterruption:this.props.disallowInterruption,testID:this.props.testID,touchSoundDisabled:(_this$props$touchSoun=this.props.touchSoundDisabled)!==null&&_this$props$touchSoun!==void 0?_this$props$touchSoun:false,enabled:!this.props.disabled},this.props.extraButtonProps),React.createElement(Animated.View,_extends({},coreProps,{style:this.props.style}),this.props.children));}}_defineProperty(GenericTouchable,\"defaultProps\",{delayLongPress:600,extraButtonProps:{rippleColor:'transparent',exclusive:true}});","map":{"version":3,"names":["React","Component","Animated","Platform","State","BaseButton","TOUCHABLE_STATE","UNDETERMINED","BEGAN","MOVED_OUTSIDE","GenericTouchable","constructor","args","_defineProperty","nativeEvent","pointerInside","onMoveIn","onMoveOut","state","CANCELLED","FAILED","moveToState","ACTIVE","STATE","handlePressIn","END","shouldCallOnPress","longPressDetected","pressOutTimeout","handleGoToUndetermined","_this$props$onPress","_this$props","props","onPress","call","_this$props$onLongPre","_this$props2","onLongPress","delayPressIn","pressInTimeout","setTimeout","time","delayLongPress","longPressTimeout","onLongPressDetected","handleMoveOutside","delayPressOut","clearTimeout","componentDidMount","reset","newState","_this$props$onStateCh","_this$props6","_this$props$onPressIn","_this$props3","onPressIn","_this$props$onPressOu","_this$props4","onPressOut","_this$props$onPressOu2","_this$props5","onStateChange","componentWillUnmount","render","_ref","_this$props$touchSoun","hitSlop","top","left","bottom","right","undefined","coreProps","accessible","accessibilityLabel","accessibilityHint","accessibilityRole","accessibilityState","accessibilityActions","onAccessibilityAction","nativeID","onLayout","createElement","_extends","style","containerStyle","onHandlerStateChange","disabled","onGestureEvent","userSelect","shouldActivateOnStart","disallowInterruption","testID","touchSoundDisabled","enabled","extraButtonProps","View","children","rippleColor","exclusive"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-gesture-handler/lib/module/components/touchables/GenericTouchable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Component } from 'react';\nimport { Animated, Platform } from 'react-native';\n\nimport { State } from '../../State';\nimport { BaseButton } from '../GestureButtons';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../../handlers/gestureHandlerCommon';\nimport type { NativeViewGestureHandlerPayload } from '../../handlers/GestureHandlerEventPayload';\nimport type { GenericTouchableProps } from './GenericTouchableProps';\n\n/**\n * Each touchable is a states' machine which preforms transitions.\n * On very beginning (and on the very end or recognition) touchable is\n * UNDETERMINED. Then it moves to BEGAN. If touchable recognizes that finger\n * travel outside it transits to special MOVED_OUTSIDE state. Gesture recognition\n * finishes in UNDETERMINED state.\n */\nexport const TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2,\n} as const;\n\ntype TouchableState = (typeof TOUCHABLE_STATE)[keyof typeof TOUCHABLE_STATE];\n\ninterface InternalProps {\n  onStateChange?: (oldState: TouchableState, newState: TouchableState) => void;\n}\n\n// TODO: maybe can be better\n// TODO: all clearTimeout have ! added, maybe they shouldn't ?\ntype Timeout = ReturnType<typeof setTimeout> | null | undefined;\n\n/**\n * GenericTouchable is not intented to be used as it is.\n * Should be treated as a source for the rest of touchables\n */\n\nexport default class GenericTouchable extends Component<\n  GenericTouchableProps & InternalProps\n> {\n  static defaultProps = {\n    delayLongPress: 600,\n    extraButtonProps: {\n      rippleColor: 'transparent',\n      exclusive: true,\n    },\n  };\n\n  // Timeout handlers\n  pressInTimeout: Timeout;\n  pressOutTimeout: Timeout;\n  longPressTimeout: Timeout;\n\n  // This flag is required since recognition of longPress implies not-invoking onPress\n  longPressDetected = false;\n\n  pointerInside = true;\n\n  // State of touchable\n  STATE: TouchableState = TOUCHABLE_STATE.UNDETERMINED;\n\n  // handlePressIn in called on first touch on traveling inside component.\n  // Handles state transition with delay.\n  handlePressIn() {\n    if (this.props.delayPressIn) {\n      this.pressInTimeout = setTimeout(() => {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n        this.pressInTimeout = null;\n      }, this.props.delayPressIn);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n    if (this.props.onLongPress) {\n      const time =\n        (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n      this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n    }\n  }\n  // handleMoveOutside in called on traveling outside component.\n  // Handles state transition with delay.\n  handleMoveOutside() {\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout =\n        this.pressOutTimeout ||\n        setTimeout(() => {\n          this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          this.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n    }\n  }\n\n  // handleGoToUndetermined transits to UNDETERMINED state with proper delay\n  handleGoToUndetermined() {\n    clearTimeout(this.pressOutTimeout!); // TODO: maybe it can be undefined\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout = setTimeout(() => {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n        this.pressOutTimeout = null;\n      }, this.props.delayPressOut);\n    } else {\n      if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    }\n  }\n\n  componentDidMount() {\n    this.reset();\n  }\n  // Reset timeout to prevent memory leaks.\n  reset() {\n    this.longPressDetected = false;\n    this.pointerInside = true;\n    clearTimeout(this.pressInTimeout!);\n    clearTimeout(this.pressOutTimeout!);\n    clearTimeout(this.longPressTimeout!);\n    this.pressOutTimeout = null;\n    this.longPressTimeout = null;\n    this.pressInTimeout = null;\n  }\n\n  // All states' transitions are defined here.\n  moveToState(newState: TouchableState) {\n    if (newState === this.STATE) {\n      // Ignore dummy transitions\n      return;\n    }\n    if (newState === TOUCHABLE_STATE.BEGAN) {\n      // First touch and moving inside\n      this.props.onPressIn?.();\n    } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // Moving outside\n      this.props.onPressOut?.();\n    } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n      // Need to reset each time on transition to UNDETERMINED\n      this.reset();\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        // ... and if it happens inside button.\n        this.props.onPressOut?.();\n      }\n    }\n    // Finally call lister (used by subclasses)\n    this.props.onStateChange?.(this.STATE, newState);\n    // ... and make transition.\n    this.STATE = newState;\n  }\n\n  onGestureEvent = ({\n    nativeEvent: { pointerInside },\n  }: GestureEvent<NativeViewGestureHandlerPayload>) => {\n    if (this.pointerInside !== pointerInside) {\n      if (pointerInside) {\n        this.onMoveIn();\n      } else {\n        this.onMoveOut();\n      }\n    }\n    this.pointerInside = pointerInside;\n  };\n\n  onHandlerStateChange = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>) => {\n    const { state } = nativeEvent;\n    if (state === State.CANCELLED || state === State.FAILED) {\n      // Need to handle case with external cancellation (e.g. by ScrollView)\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    } else if (\n      // This platform check is an implication of slightly different behavior of handlers on different platform.\n      // And Android \"Active\" state is achieving on first move of a finger, not on press in.\n      // On iOS event on \"Began\" is not delivered.\n      state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) &&\n      this.STATE === TOUCHABLE_STATE.UNDETERMINED\n    ) {\n      // Moving inside requires\n      this.handlePressIn();\n    } else if (state === State.END) {\n      const shouldCallOnPress =\n        !this.longPressDetected &&\n        this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE &&\n        this.pressOutTimeout === null;\n      this.handleGoToUndetermined();\n      if (shouldCallOnPress) {\n        // Calls only inside component whether no long press was called previously\n        this.props.onPress?.();\n      }\n    }\n  };\n\n  onLongPressDetected = () => {\n    this.longPressDetected = true;\n    // Checked for in the caller of `onLongPressDetected`, but better to check twice\n    this.props.onLongPress?.();\n  };\n\n  componentWillUnmount() {\n    // To prevent memory leaks\n    this.reset();\n  }\n\n  onMoveIn() {\n    if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // This call is not throttled with delays (like in RN's implementation).\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n  }\n\n  onMoveOut() {\n    // Long press should no longer be detected\n    clearTimeout(this.longPressTimeout!);\n    this.longPressTimeout = null;\n    if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n      this.handleMoveOutside();\n    }\n  }\n\n  render() {\n    const hitSlop =\n      (typeof this.props.hitSlop === 'number'\n        ? {\n            top: this.props.hitSlop,\n            left: this.props.hitSlop,\n            bottom: this.props.hitSlop,\n            right: this.props.hitSlop,\n          }\n        : this.props.hitSlop) ?? undefined;\n\n    const coreProps = {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityRole: this.props.accessibilityRole,\n      // TODO: check if changed to no 's' correctly, also removed 2 props that are no longer available: `accessibilityComponentType` and `accessibilityTraits`,\n      // would be good to check if it is ok for sure, see: https://github.com/facebook/react-native/issues/24016\n      accessibilityState: this.props.accessibilityState,\n      accessibilityActions: this.props.accessibilityActions,\n      onAccessibilityAction: this.props.onAccessibilityAction,\n      nativeID: this.props.nativeID,\n      onLayout: this.props.onLayout,\n    };\n\n    return (\n      <BaseButton\n        style={this.props.containerStyle}\n        onHandlerStateChange={\n          // TODO: not sure if it can be undefined instead of null\n          this.props.disabled ? undefined : this.onHandlerStateChange\n        }\n        onGestureEvent={this.onGestureEvent}\n        hitSlop={hitSlop}\n        userSelect={this.props.userSelect}\n        shouldActivateOnStart={this.props.shouldActivateOnStart}\n        disallowInterruption={this.props.disallowInterruption}\n        testID={this.props.testID}\n        touchSoundDisabled={this.props.touchSoundDisabled ?? false}\n        enabled={!this.props.disabled}\n        {...this.props.extraButtonProps}>\n        <Animated.View {...coreProps} style={this.props.style}>\n          {this.props.children}\n        </Animated.View>\n      </BaseButton>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}