{"ast":null,"code":"'use strict';import{useEffect,useRef}from'react';import{makeShareable,startMapper,stopMapper}from\"../core.js\";import updateProps,{updatePropsJestWrapper}from\"../UpdateProps.js\";import{initialUpdaterRun}from\"../animation/index.js\";import{useSharedValue}from\"./useSharedValue.js\";import{buildWorkletsHash,isAnimated,shallowEqual,validateAnimatedStyles}from\"./utils.js\";import{makeViewDescriptorsSet}from\"../ViewDescriptorsSet.js\";import{isJest,shouldBeUseWeb}from\"../PlatformChecker.js\";import{isWorkletFunction}from\"../commonTypes.js\";import{ReanimatedError}from\"../errors.js\";const SHOULD_BE_USE_WEB=shouldBeUseWeb();const _worklet_15514483176912_init_data={code:\"function prepareAnimation_reactNativeReanimated_useAnimatedStyleJs1(frameTimestamp,animatedProp,lastAnimation,lastValue){const prepareAnimation_reactNativeReanimated_useAnimatedStyleJs1=this._recur;if(Array.isArray(animatedProp)){animatedProp.forEach(function(prop,index){prepareAnimation_reactNativeReanimated_useAnimatedStyleJs1(frameTimestamp,prop,lastAnimation&&lastAnimation[index],lastValue&&lastValue[index]);});}if(typeof animatedProp==='object'&&animatedProp.onFrame){const animation=animatedProp;let value=animation.current;if(lastValue!==undefined&&lastValue!==null){if(typeof lastValue==='object'){if(lastValue.value!==undefined){value=lastValue.value;}else if(lastValue.onFrame!==undefined){if((lastAnimation===null||lastAnimation===void 0?void 0:lastAnimation.current)!==undefined){value=lastAnimation.current;}else if((lastValue===null||lastValue===void 0?void 0:lastValue.current)!==undefined){value=lastValue.current;}}}else{value=lastValue;}}animation.callStart=function(timestamp){animation.onStart(animation,value,timestamp,lastAnimation);};animation.callStart(frameTimestamp);animation.callStart=null;}else if(typeof animatedProp==='object'){Object.keys(animatedProp).forEach(function(key){return prepareAnimation_reactNativeReanimated_useAnimatedStyleJs1(frameTimestamp,animatedProp[key],lastAnimation&&lastAnimation[key],lastValue&&lastValue[key]);});}}\"};const prepareAnimation=function(){const prepareAnimation=function(frameTimestamp,animatedProp,lastAnimation,lastValue){if(Array.isArray(animatedProp)){animatedProp.forEach((prop,index)=>{prepareAnimation(frameTimestamp,prop,lastAnimation&&lastAnimation[index],lastValue&&lastValue[index]);});}if(typeof animatedProp==='object'&&animatedProp.onFrame){const animation=animatedProp;let value=animation.current;if(lastValue!==undefined&&lastValue!==null){if(typeof lastValue==='object'){if(lastValue.value!==undefined){value=lastValue.value;}else if(lastValue.onFrame!==undefined){if(lastAnimation?.current!==undefined){value=lastAnimation.current;}else if(lastValue?.current!==undefined){value=lastValue.current;}}}else{value=lastValue;}}animation.callStart=timestamp=>{animation.onStart(animation,value,timestamp,lastAnimation);};animation.callStart(frameTimestamp);animation.callStart=null;}else if(typeof animatedProp==='object'){Object.keys(animatedProp).forEach(key=>prepareAnimation(frameTimestamp,animatedProp[key],lastAnimation&&lastAnimation[key],lastValue&&lastValue[key]));}};prepareAnimation.__closure={};prepareAnimation.__workletHash=15514483176912;prepareAnimation.__initData=_worklet_15514483176912_init_data;return prepareAnimation;}();const _worklet_15489549769796_init_data={code:\"function runAnimations_reactNativeReanimated_useAnimatedStyleJs2(animation,timestamp,key,result,animationsActive){const runAnimations_reactNativeReanimated_useAnimatedStyleJs2=this._recur;if(!animationsActive.value){return true;}if(Array.isArray(animation)){result[key]=[];let allFinished=true;animation.forEach(function(entry,index){if(!runAnimations_reactNativeReanimated_useAnimatedStyleJs2(entry,timestamp,index,result[key],animationsActive)){allFinished=false;}});return allFinished;}else if(typeof animation==='object'&&animation.onFrame){let finished=true;if(!animation.finished){if(animation.callStart){animation.callStart(timestamp);animation.callStart=null;}finished=animation.onFrame(animation,timestamp);animation.timestamp=timestamp;if(finished){animation.finished=true;animation.callback&&animation.callback(true);}}result[key]=animation.current;return finished;}else if(typeof animation==='object'){result[key]={};let allFinished=true;Object.keys(animation).forEach(function(k){if(!runAnimations_reactNativeReanimated_useAnimatedStyleJs2(animation[k],timestamp,k,result[key],animationsActive)){allFinished=false;}});return allFinished;}else{result[key]=animation;return true;}}\"};const runAnimations=function(){const runAnimations=function(animation,timestamp,key,result,animationsActive){if(!animationsActive.value){return true;}if(Array.isArray(animation)){result[key]=[];let allFinished=true;animation.forEach((entry,index)=>{if(!runAnimations(entry,timestamp,index,result[key],animationsActive)){allFinished=false;}});return allFinished;}else if(typeof animation==='object'&&animation.onFrame){let finished=true;if(!animation.finished){if(animation.callStart){animation.callStart(timestamp);animation.callStart=null;}finished=animation.onFrame(animation,timestamp);animation.timestamp=timestamp;if(finished){animation.finished=true;animation.callback&&animation.callback(true);}}result[key]=animation.current;return finished;}else if(typeof animation==='object'){result[key]={};let allFinished=true;Object.keys(animation).forEach(k=>{if(!runAnimations(animation[k],timestamp,k,result[key],animationsActive)){allFinished=false;}});return allFinished;}else{result[key]=animation;return true;}};runAnimations.__closure={};runAnimations.__workletHash=15489549769796;runAnimations.__initData=_worklet_15489549769796_init_data;return runAnimations;}();const _worklet_8870432530982_init_data={code:\"function styleUpdater_reactNativeReanimated_useAnimatedStyleJs3(viewDescriptors,updater,state,animationsActive,isAnimatedProps=false){const{isAnimated,prepareAnimation,runAnimations,updateProps,shallowEqual}=this.__closure;var _state$animations,_updater;const animations=(_state$animations=state.animations)!==null&&_state$animations!==void 0?_state$animations:{};const newValues=(_updater=updater())!==null&&_updater!==void 0?_updater:{};const oldValues=state.last;const nonAnimatedNewValues={};let hasAnimations=false;let frameTimestamp;let hasNonAnimatedValues=false;for(const key in newValues){const value=newValues[key];if(isAnimated(value)){frameTimestamp=global.__frameTimestamp||global._getAnimationTimestamp();prepareAnimation(frameTimestamp,value,animations[key],oldValues[key]);animations[key]=value;hasAnimations=true;}else{hasNonAnimatedValues=true;nonAnimatedNewValues[key]=value;delete animations[key];}}if(hasAnimations){const frame=function(timestamp){const{animations:animations,last:last,isAnimationCancelled:isAnimationCancelled}=state;if(isAnimationCancelled){state.isAnimationRunning=false;return;}const updates={};let allFinished=true;for(const propName in animations){const finished=runAnimations(animations[propName],timestamp,propName,updates,animationsActive);if(finished){last[propName]=updates[propName];delete animations[propName];}else{allFinished=false;}}if(updates){updateProps(viewDescriptors,updates);}if(!allFinished){requestAnimationFrame(frame);}else{state.isAnimationRunning=false;}};state.animations=animations;if(!state.isAnimationRunning){state.isAnimationCancelled=false;state.isAnimationRunning=true;frame(frameTimestamp);}if(hasNonAnimatedValues){updateProps(viewDescriptors,nonAnimatedNewValues);}}else{state.isAnimationCancelled=true;state.animations=[];if(!shallowEqual(oldValues,newValues)){updateProps(viewDescriptors,newValues,isAnimatedProps);}}state.last=newValues;}\"};const styleUpdater=function(){const styleUpdater=function(viewDescriptors,updater,state,animationsActive,isAnimatedProps=false){const animations=state.animations??{};const newValues=updater()??{};const oldValues=state.last;const nonAnimatedNewValues={};let hasAnimations=false;let frameTimestamp;let hasNonAnimatedValues=false;for(const key in newValues){const value=newValues[key];if(isAnimated(value)){frameTimestamp=global.__frameTimestamp||global._getAnimationTimestamp();prepareAnimation(frameTimestamp,value,animations[key],oldValues[key]);animations[key]=value;hasAnimations=true;}else{hasNonAnimatedValues=true;nonAnimatedNewValues[key]=value;delete animations[key];}}if(hasAnimations){const frame=timestamp=>{const{animations,last,isAnimationCancelled}=state;if(isAnimationCancelled){state.isAnimationRunning=false;return;}const updates={};let allFinished=true;for(const propName in animations){const finished=runAnimations(animations[propName],timestamp,propName,updates,animationsActive);if(finished){last[propName]=updates[propName];delete animations[propName];}else{allFinished=false;}}if(updates){updateProps(viewDescriptors,updates);}if(!allFinished){requestAnimationFrame(frame);}else{state.isAnimationRunning=false;}};state.animations=animations;if(!state.isAnimationRunning){state.isAnimationCancelled=false;state.isAnimationRunning=true;frame(frameTimestamp);}if(hasNonAnimatedValues){updateProps(viewDescriptors,nonAnimatedNewValues);}}else{state.isAnimationCancelled=true;state.animations=[];if(!shallowEqual(oldValues,newValues)){updateProps(viewDescriptors,newValues,isAnimatedProps);}}state.last=newValues;};styleUpdater.__closure={isAnimated,prepareAnimation,runAnimations,updateProps,shallowEqual};styleUpdater.__workletHash=8870432530982;styleUpdater.__initData=_worklet_8870432530982_init_data;return styleUpdater;}();const _worklet_6175157843679_init_data={code:\"function jestStyleUpdater_reactNativeReanimated_useAnimatedStyleJs4(viewDescriptors,updater,state,animationsActive,animatedStyle,adapters){const{isAnimated,prepareAnimation,runAnimations,updatePropsJestWrapper,shallowEqual}=this.__closure;var _state$animations,_updater;const animations=(_state$animations=state.animations)!==null&&_state$animations!==void 0?_state$animations:{};const newValues=(_updater=updater())!==null&&_updater!==void 0?_updater:{};const oldValues=state.last;let hasAnimations=false;let frameTimestamp;Object.keys(animations).forEach(function(key){const value=newValues[key];if(!isAnimated(value)){delete animations[key];}});Object.keys(newValues).forEach(function(key){const value=newValues[key];if(isAnimated(value)){frameTimestamp=global.__frameTimestamp||global._getAnimationTimestamp();prepareAnimation(frameTimestamp,value,animations[key],oldValues[key]);animations[key]=value;hasAnimations=true;}});function frame(timestamp){const{animations:animations,last:last,isAnimationCancelled:isAnimationCancelled}=state;if(isAnimationCancelled){state.isAnimationRunning=false;return;}const updates={};let allFinished=true;Object.keys(animations).forEach(function(propName){const finished=runAnimations(animations[propName],timestamp,propName,updates,animationsActive);if(finished){last[propName]=updates[propName];delete animations[propName];}else{allFinished=false;}});if(Object.keys(updates).length){updatePropsJestWrapper(viewDescriptors,updates,animatedStyle,adapters);}if(!allFinished){requestAnimationFrame(frame);}else{state.isAnimationRunning=false;}}if(hasAnimations){state.animations=animations;if(!state.isAnimationRunning){state.isAnimationCancelled=false;state.isAnimationRunning=true;frame(frameTimestamp);}}else{state.isAnimationCancelled=true;state.animations=[];}state.last=newValues;if(!shallowEqual(oldValues,newValues)){updatePropsJestWrapper(viewDescriptors,newValues,animatedStyle,adapters);}}\"};const jestStyleUpdater=function(){const jestStyleUpdater=function(viewDescriptors,updater,state,animationsActive,animatedStyle,adapters){const animations=state.animations??{};const newValues=updater()??{};const oldValues=state.last;let hasAnimations=false;let frameTimestamp;Object.keys(animations).forEach(key=>{const value=newValues[key];if(!isAnimated(value)){delete animations[key];}});Object.keys(newValues).forEach(key=>{const value=newValues[key];if(isAnimated(value)){frameTimestamp=global.__frameTimestamp||global._getAnimationTimestamp();prepareAnimation(frameTimestamp,value,animations[key],oldValues[key]);animations[key]=value;hasAnimations=true;}});function frame(timestamp){const{animations,last,isAnimationCancelled}=state;if(isAnimationCancelled){state.isAnimationRunning=false;return;}const updates={};let allFinished=true;Object.keys(animations).forEach(propName=>{const finished=runAnimations(animations[propName],timestamp,propName,updates,animationsActive);if(finished){last[propName]=updates[propName];delete animations[propName];}else{allFinished=false;}});if(Object.keys(updates).length){updatePropsJestWrapper(viewDescriptors,updates,animatedStyle,adapters);}if(!allFinished){requestAnimationFrame(frame);}else{state.isAnimationRunning=false;}}if(hasAnimations){state.animations=animations;if(!state.isAnimationRunning){state.isAnimationCancelled=false;state.isAnimationRunning=true;frame(frameTimestamp);}}else{state.isAnimationCancelled=true;state.animations=[];}state.last=newValues;if(!shallowEqual(oldValues,newValues)){updatePropsJestWrapper(viewDescriptors,newValues,animatedStyle,adapters);}};jestStyleUpdater.__closure={isAnimated,prepareAnimation,runAnimations,updatePropsJestWrapper,shallowEqual};jestStyleUpdater.__workletHash=6175157843679;jestStyleUpdater.__initData=_worklet_6175157843679_init_data;return jestStyleUpdater;}();function checkSharedValueUsage(prop,currentKey){if(Array.isArray(prop)){for(const element of prop){checkSharedValueUsage(element,currentKey);}}else if(typeof prop==='object'&&prop!==null&&prop.value===undefined){for(const key of Object.keys(prop)){checkSharedValueUsage(prop[key],key);}}else if(currentKey!==undefined&&typeof prop==='object'&&prop!==null&&prop.value!==undefined){throw new ReanimatedError(`Invalid value passed to \\`${currentKey}\\`, maybe you forgot to use \\`.value\\`?`);}}const _worklet_15993059429066_init_data={code:\"function reactNativeReanimated_useAnimatedStyleJs5(){const{updater,adaptersArray}=this.__closure;const newValues=updater();adaptersArray.forEach(function(adapter){adapter(newValues);});return newValues;}\"};const _worklet_5985448918011_init_data={code:\"function reactNativeReanimated_useAnimatedStyleJs6(){const{jestStyleUpdater,shareableViewDescriptors,updater,remoteState,areAnimationsActive,jestAnimatedStyle,adaptersArray}=this.__closure;jestStyleUpdater(shareableViewDescriptors,updater,remoteState,areAnimationsActive,jestAnimatedStyle,adaptersArray);}\"};const _worklet_5297059117402_init_data={code:\"function reactNativeReanimated_useAnimatedStyleJs7(){const{styleUpdater,shareableViewDescriptors,updaterFn,remoteState,areAnimationsActive,isAnimatedProps}=this.__closure;styleUpdater(shareableViewDescriptors,updaterFn,remoteState,areAnimationsActive,isAnimatedProps);}\"};export function useAnimatedStyle(updater,dependencies,adapters,isAnimatedProps=false){const animatedUpdaterData=useRef();let inputs=Object.values(updater.__closure??{});if(SHOULD_BE_USE_WEB){if(!inputs.length&&dependencies?.length){inputs=dependencies;}if(false&&!inputs.length&&!dependencies&&!isWorkletFunction(updater)){throw new ReanimatedError(`\\`useAnimatedStyle\\` was used without a dependency array or Babel plugin. Please explicitly pass a dependency array, or enable the Babel plugin.\nFor more, see the docs: \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/web-support#web-without-the-babel-plugin\\`.`);}}const adaptersArray=adapters?Array.isArray(adapters)?adapters:[adapters]:[];const adaptersHash=adapters?buildWorkletsHash(adaptersArray):null;const areAnimationsActive=useSharedValue(true);const jestAnimatedStyle=useRef({});if(!dependencies){dependencies=[...inputs,updater.__workletHash];}else{dependencies.push(updater.__workletHash);}adaptersHash&&dependencies.push(adaptersHash);if(!animatedUpdaterData.current){const initialStyle=initialUpdaterRun(updater);if(false){validateAnimatedStyles(initialStyle);}animatedUpdaterData.current={initial:{value:initialStyle,updater},remoteState:makeShareable({last:initialStyle,animations:{},isAnimationCancelled:false,isAnimationRunning:false}),viewDescriptors:makeViewDescriptorsSet()};}const{initial,remoteState,viewDescriptors}=animatedUpdaterData.current;const shareableViewDescriptors=viewDescriptors.shareableViewDescriptors;dependencies.push(shareableViewDescriptors);useEffect(()=>{let fun;let updaterFn=updater;if(adapters){updaterFn=function(){const reactNativeReanimated_useAnimatedStyleJs5=function(){const newValues=updater();adaptersArray.forEach(adapter=>{adapter(newValues);});return newValues;};reactNativeReanimated_useAnimatedStyleJs5.__closure={updater,adaptersArray};reactNativeReanimated_useAnimatedStyleJs5.__workletHash=15993059429066;reactNativeReanimated_useAnimatedStyleJs5.__initData=_worklet_15993059429066_init_data;return reactNativeReanimated_useAnimatedStyleJs5;}();}if(isJest()){fun=function(){const reactNativeReanimated_useAnimatedStyleJs6=function(){jestStyleUpdater(shareableViewDescriptors,updater,remoteState,areAnimationsActive,jestAnimatedStyle,adaptersArray);};reactNativeReanimated_useAnimatedStyleJs6.__closure={jestStyleUpdater,shareableViewDescriptors,updater,remoteState,areAnimationsActive,jestAnimatedStyle,adaptersArray};reactNativeReanimated_useAnimatedStyleJs6.__workletHash=5985448918011;reactNativeReanimated_useAnimatedStyleJs6.__initData=_worklet_5985448918011_init_data;return reactNativeReanimated_useAnimatedStyleJs6;}();}else{fun=function(){const reactNativeReanimated_useAnimatedStyleJs7=function(){styleUpdater(shareableViewDescriptors,updaterFn,remoteState,areAnimationsActive,isAnimatedProps);};reactNativeReanimated_useAnimatedStyleJs7.__closure={styleUpdater,shareableViewDescriptors,updaterFn,remoteState,areAnimationsActive,isAnimatedProps};reactNativeReanimated_useAnimatedStyleJs7.__workletHash=5297059117402;reactNativeReanimated_useAnimatedStyleJs7.__initData=_worklet_5297059117402_init_data;return reactNativeReanimated_useAnimatedStyleJs7;}();}const mapperId=startMapper(fun,inputs);return()=>{stopMapper(mapperId);};},dependencies);useEffect(()=>{areAnimationsActive.value=true;return()=>{areAnimationsActive.value=false;};},[areAnimationsActive]);checkSharedValueUsage(initial.value);const animatedStyleHandle=useRef(null);if(!animatedStyleHandle.current){animatedStyleHandle.current=isJest()?{viewDescriptors,initial,jestAnimatedStyle}:{viewDescriptors,initial};}return animatedStyleHandle.current;}","map":{"version":3,"names":["useEffect","useRef","makeShareable","startMapper","stopMapper","updateProps","updatePropsJestWrapper","initialUpdaterRun","useSharedValue","buildWorkletsHash","isAnimated","shallowEqual","validateAnimatedStyles","makeViewDescriptorsSet","isJest","shouldBeUseWeb","isWorkletFunction","ReanimatedError","SHOULD_BE_USE_WEB","_worklet_15514483176912_init_data","code","prepareAnimation","frameTimestamp","animatedProp","lastAnimation","lastValue","Array","isArray","forEach","prop","index","onFrame","animation","value","current","undefined","callStart","timestamp","onStart","Object","keys","key","__closure","__workletHash","__initData","_worklet_15489549769796_init_data","runAnimations","result","animationsActive","allFinished","entry","finished","callback","k","_worklet_8870432530982_init_data","styleUpdater","viewDescriptors","updater","state","isAnimatedProps","animations","newValues","oldValues","last","nonAnimatedNewValues","hasAnimations","hasNonAnimatedValues","global","__frameTimestamp","_getAnimationTimestamp","frame","isAnimationCancelled","isAnimationRunning","updates","propName","requestAnimationFrame","_worklet_6175157843679_init_data","jestStyleUpdater","animatedStyle","adapters","length","checkSharedValueUsage","currentKey","element","_worklet_15993059429066_init_data","_worklet_5985448918011_init_data","_worklet_5297059117402_init_data","useAnimatedStyle","dependencies","animatedUpdaterData","inputs","values","adaptersArray","adaptersHash","areAnimationsActive","jestAnimatedStyle","push","initialStyle","initial","remoteState","shareableViewDescriptors","fun","updaterFn","reactNativeReanimated_useAnimatedStyleJs5","adapter","reactNativeReanimated_useAnimatedStyleJs6","reactNativeReanimated_useAnimatedStyleJs7","mapperId","animatedStyleHandle"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/hook/useAnimatedStyle.ts"],"sourcesContent":["'use strict';\nimport type { MutableRefObject } from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport { makeShareable, startMapper, stopMapper } from '../core';\nimport updateProps, { updatePropsJestWrapper } from '../UpdateProps';\nimport { initialUpdaterRun } from '../animation';\nimport { useSharedValue } from './useSharedValue';\nimport {\n  buildWorkletsHash,\n  isAnimated,\n  shallowEqual,\n  validateAnimatedStyles,\n} from './utils';\nimport type {\n  AnimatedStyleHandle,\n  DefaultStyle,\n  DependencyList,\n  Descriptor,\n  JestAnimatedStyleHandle,\n} from './commonTypes';\nimport type { ViewDescriptorsSet } from '../ViewDescriptorsSet';\nimport { makeViewDescriptorsSet } from '../ViewDescriptorsSet';\nimport { isJest, shouldBeUseWeb } from '../PlatformChecker';\nimport type {\n  AnimationObject,\n  Timestamp,\n  NestedObjectValues,\n  SharedValue,\n  StyleProps,\n  WorkletFunction,\n  AnimatedPropsAdapterFunction,\n  AnimatedPropsAdapterWorklet,\n  AnimatedStyle,\n} from '../commonTypes';\nimport { isWorkletFunction } from '../commonTypes';\nimport { ReanimatedError } from '../errors';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\ninterface AnimatedState {\n  last: AnimatedStyle<any>;\n  animations: AnimatedStyle<any>;\n  isAnimationRunning: boolean;\n  isAnimationCancelled: boolean;\n}\n\ninterface AnimatedUpdaterData {\n  initial: {\n    value: AnimatedStyle<any>;\n    updater: () => AnimatedStyle<any>;\n  };\n  remoteState: AnimatedState;\n  viewDescriptors: ViewDescriptorsSet;\n}\n\nfunction prepareAnimation(\n  frameTimestamp: number,\n  animatedProp: AnimatedStyle<any>,\n  lastAnimation: AnimatedStyle<any>,\n  lastValue: AnimatedStyle<any>\n): void {\n  'worklet';\n  if (Array.isArray(animatedProp)) {\n    animatedProp.forEach((prop, index) => {\n      prepareAnimation(\n        frameTimestamp,\n        prop,\n        lastAnimation && lastAnimation[index],\n        lastValue && lastValue[index]\n      );\n    });\n    // return animatedProp;\n  }\n  if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n    const animation = animatedProp;\n\n    let value = animation.current;\n    if (lastValue !== undefined && lastValue !== null) {\n      if (typeof lastValue === 'object') {\n        if (lastValue.value !== undefined) {\n          // previously it was a shared value\n          value = lastValue.value;\n        } else if (lastValue.onFrame !== undefined) {\n          if (lastAnimation?.current !== undefined) {\n            // it was an animation before, copy its state\n            value = lastAnimation.current;\n          } else if (lastValue?.current !== undefined) {\n            // it was initialized\n            value = lastValue.current;\n          }\n        }\n      } else {\n        // previously it was a plain value, just set it as starting point\n        value = lastValue;\n      }\n    }\n\n    animation.callStart = (timestamp: Timestamp) => {\n      animation.onStart(animation, value, timestamp, lastAnimation);\n    };\n    animation.callStart(frameTimestamp);\n    animation.callStart = null;\n  } else if (typeof animatedProp === 'object') {\n    // it is an object\n    Object.keys(animatedProp).forEach((key) =>\n      prepareAnimation(\n        frameTimestamp,\n        animatedProp[key],\n        lastAnimation && lastAnimation[key],\n        lastValue && lastValue[key]\n      )\n    );\n  }\n}\n\nfunction runAnimations(\n  animation: AnimatedStyle<any>,\n  timestamp: Timestamp,\n  key: number | string,\n  result: AnimatedStyle<any>,\n  animationsActive: SharedValue<boolean>\n): boolean {\n  'worklet';\n  if (!animationsActive.value) {\n    return true;\n  }\n  if (Array.isArray(animation)) {\n    result[key] = [];\n    let allFinished = true;\n    animation.forEach((entry, index) => {\n      if (\n        !runAnimations(entry, timestamp, index, result[key], animationsActive)\n      ) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else if (typeof animation === 'object' && animation.onFrame) {\n    let finished = true;\n    if (!animation.finished) {\n      if (animation.callStart) {\n        animation.callStart(timestamp);\n        animation.callStart = null;\n      }\n      finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      if (finished) {\n        animation.finished = true;\n        animation.callback && animation.callback(true /* finished */);\n      }\n    }\n    result[key] = animation.current;\n    return finished;\n  } else if (typeof animation === 'object') {\n    result[key] = {};\n    let allFinished = true;\n    Object.keys(animation).forEach((k) => {\n      if (\n        !runAnimations(\n          animation[k],\n          timestamp,\n          k,\n          result[key],\n          animationsActive\n        )\n      ) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else {\n    result[key] = animation;\n    return true;\n  }\n}\n\nfunction styleUpdater(\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updater: WorkletFunction<[], AnimatedStyle<any>> | (() => AnimatedStyle<any>),\n  state: AnimatedState,\n  animationsActive: SharedValue<boolean>,\n  isAnimatedProps = false\n): void {\n  'worklet';\n  const animations = state.animations ?? {};\n  const newValues = updater() ?? {};\n  const oldValues = state.last;\n  const nonAnimatedNewValues: StyleProps = {};\n\n  let hasAnimations = false;\n  let frameTimestamp: number | undefined;\n  let hasNonAnimatedValues = false;\n  for (const key in newValues) {\n    const value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp =\n        global.__frameTimestamp || global._getAnimationTimestamp();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    } else {\n      hasNonAnimatedValues = true;\n      nonAnimatedNewValues[key] = value;\n      delete animations[key];\n    }\n  }\n\n  if (hasAnimations) {\n    const frame = (timestamp: Timestamp) => {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const { animations, last, isAnimationCancelled } = state;\n      if (isAnimationCancelled) {\n        state.isAnimationRunning = false;\n        return;\n      }\n\n      const updates: AnimatedStyle<any> = {};\n      let allFinished = true;\n      for (const propName in animations) {\n        const finished = runAnimations(\n          animations[propName],\n          timestamp,\n          propName,\n          updates,\n          animationsActive\n        );\n        if (finished) {\n          last[propName] = updates[propName];\n          delete animations[propName];\n        } else {\n          allFinished = false;\n        }\n      }\n\n      if (updates) {\n        updateProps(viewDescriptors, updates);\n      }\n\n      if (!allFinished) {\n        requestAnimationFrame(frame);\n      } else {\n        state.isAnimationRunning = false;\n      }\n    };\n\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp!);\n    }\n\n    if (hasNonAnimatedValues) {\n      updateProps(viewDescriptors, nonAnimatedNewValues);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n\n    if (!shallowEqual(oldValues, newValues)) {\n      updateProps(viewDescriptors, newValues, isAnimatedProps);\n    }\n  }\n  state.last = newValues;\n}\n\nfunction jestStyleUpdater(\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updater: WorkletFunction<[], AnimatedStyle<any>> | (() => AnimatedStyle<any>),\n  state: AnimatedState,\n  animationsActive: SharedValue<boolean>,\n  animatedStyle: MutableRefObject<AnimatedStyle<any>>,\n  adapters: AnimatedPropsAdapterFunction[]\n): void {\n  'worklet';\n  const animations: AnimatedStyle<any> = state.animations ?? {};\n  const newValues = updater() ?? {};\n  const oldValues = state.last;\n\n  // extract animated props\n  let hasAnimations = false;\n  let frameTimestamp: number | undefined;\n  Object.keys(animations).forEach((key) => {\n    const value = newValues[key];\n    if (!isAnimated(value)) {\n      delete animations[key];\n    }\n  });\n  Object.keys(newValues).forEach((key) => {\n    const value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp =\n        global.__frameTimestamp || global._getAnimationTimestamp();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    }\n  });\n\n  function frame(timestamp: Timestamp) {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const { animations, last, isAnimationCancelled } = state;\n    if (isAnimationCancelled) {\n      state.isAnimationRunning = false;\n      return;\n    }\n\n    const updates: AnimatedStyle<any> = {};\n    let allFinished = true;\n    Object.keys(animations).forEach((propName) => {\n      const finished = runAnimations(\n        animations[propName],\n        timestamp,\n        propName,\n        updates,\n        animationsActive\n      );\n      if (finished) {\n        last[propName] = updates[propName];\n        delete animations[propName];\n      } else {\n        allFinished = false;\n      }\n    });\n\n    if (Object.keys(updates).length) {\n      updatePropsJestWrapper(viewDescriptors, updates, animatedStyle, adapters);\n    }\n\n    if (!allFinished) {\n      requestAnimationFrame(frame);\n    } else {\n      state.isAnimationRunning = false;\n    }\n  }\n\n  if (hasAnimations) {\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp!);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n  }\n\n  // calculate diff\n  state.last = newValues;\n\n  if (!shallowEqual(oldValues, newValues)) {\n    updatePropsJestWrapper(viewDescriptors, newValues, animatedStyle, adapters);\n  }\n}\n\n// check for invalid usage of shared values in returned object\nfunction checkSharedValueUsage(\n  prop: NestedObjectValues<AnimationObject>,\n  currentKey?: string\n): void {\n  if (Array.isArray(prop)) {\n    // if it's an array (i.ex. transform) validate all its elements\n    for (const element of prop) {\n      checkSharedValueUsage(element, currentKey);\n    }\n  } else if (\n    typeof prop === 'object' &&\n    prop !== null &&\n    prop.value === undefined\n  ) {\n    // if it's a nested object, run validation for all its props\n    for (const key of Object.keys(prop)) {\n      checkSharedValueUsage(prop[key], key);\n    }\n  } else if (\n    currentKey !== undefined &&\n    typeof prop === 'object' &&\n    prop !== null &&\n    prop.value !== undefined\n  ) {\n    // if shared value is passed instead of its value, throw an error\n    throw new ReanimatedError(\n      `Invalid value passed to \\`${currentKey}\\`, maybe you forgot to use \\`.value\\`?`\n    );\n  }\n}\n\n/**\n * Lets you create a styles object, similar to StyleSheet styles, which can be\n * animated using shared values.\n *\n * @param updater - A function returning an object with style properties you\n *   want to animate.\n * @param dependencies - An optional array of dependencies. Only relevant when\n *   using Reanimated without the Babel plugin on the Web.\n * @returns An animated style object which has to be passed to the `style`\n *   property of an Animated component you want to animate.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedStyle\n */\n// You cannot pass Shared Values to `useAnimatedStyle` directly.\n// @ts-expect-error This overload is required by our API.\nexport function useAnimatedStyle<Style extends DefaultStyle>(\n  updater: () => Style,\n  dependencies?: DependencyList | null\n): Style;\n\nexport function useAnimatedStyle<Style extends DefaultStyle>(\n  updater:\n    | WorkletFunction<[], Style>\n    | ((() => Style) & Record<string, unknown>),\n  dependencies?: DependencyList | null,\n  adapters?: AnimatedPropsAdapterWorklet | AnimatedPropsAdapterWorklet[] | null,\n  isAnimatedProps = false\n): AnimatedStyleHandle<Style> | JestAnimatedStyleHandle<Style> {\n  const animatedUpdaterData = useRef<AnimatedUpdaterData>();\n  let inputs = Object.values(updater.__closure ?? {});\n  if (SHOULD_BE_USE_WEB) {\n    if (!inputs.length && dependencies?.length) {\n      // let web work without a Babel plugin\n      inputs = dependencies;\n    }\n    if (\n      __DEV__ &&\n      !inputs.length &&\n      !dependencies &&\n      !isWorkletFunction(updater)\n    ) {\n      throw new ReanimatedError(\n        `\\`useAnimatedStyle\\` was used without a dependency array or Babel plugin. Please explicitly pass a dependency array, or enable the Babel plugin.\nFor more, see the docs: \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/web-support#web-without-the-babel-plugin\\`.`\n      );\n    }\n  }\n  const adaptersArray = adapters\n    ? Array.isArray(adapters)\n      ? adapters\n      : [adapters]\n    : [];\n  const adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\n  const areAnimationsActive = useSharedValue<boolean>(true);\n  const jestAnimatedStyle = useRef<Style>({} as Style);\n\n  // build dependencies\n  if (!dependencies) {\n    dependencies = [...inputs, updater.__workletHash];\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n  adaptersHash && dependencies.push(adaptersHash);\n\n  if (!animatedUpdaterData.current) {\n    const initialStyle = initialUpdaterRun(updater);\n    if (__DEV__) {\n      validateAnimatedStyles(initialStyle);\n    }\n    animatedUpdaterData.current = {\n      initial: {\n        value: initialStyle,\n        updater,\n      },\n      remoteState: makeShareable({\n        last: initialStyle,\n        animations: {},\n        isAnimationCancelled: false,\n        isAnimationRunning: false,\n      }),\n      viewDescriptors: makeViewDescriptorsSet(),\n    };\n  }\n\n  const { initial, remoteState, viewDescriptors } = animatedUpdaterData.current;\n  const shareableViewDescriptors = viewDescriptors.shareableViewDescriptors;\n\n  dependencies.push(shareableViewDescriptors);\n\n  useEffect(() => {\n    let fun;\n    let updaterFn = updater;\n    if (adapters) {\n      updaterFn = (() => {\n        'worklet';\n        const newValues = updater();\n        adaptersArray.forEach((adapter) => {\n          adapter(newValues as Record<string, unknown>);\n        });\n        return newValues;\n      }) as WorkletFunction<[], Style>;\n    }\n\n    if (isJest()) {\n      fun = () => {\n        'worklet';\n        jestStyleUpdater(\n          shareableViewDescriptors,\n          updater,\n          remoteState,\n          areAnimationsActive,\n          jestAnimatedStyle,\n          adaptersArray\n        );\n      };\n    } else {\n      fun = () => {\n        'worklet';\n        styleUpdater(\n          shareableViewDescriptors,\n          updaterFn,\n          remoteState,\n          areAnimationsActive,\n          isAnimatedProps\n        );\n      };\n    }\n    const mapperId = startMapper(fun, inputs);\n    return () => {\n      stopMapper(mapperId);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    areAnimationsActive.value = true;\n    return () => {\n      areAnimationsActive.value = false;\n    };\n  }, [areAnimationsActive]);\n\n  checkSharedValueUsage(initial.value);\n\n  const animatedStyleHandle = useRef<\n    AnimatedStyleHandle<Style> | JestAnimatedStyleHandle<Style> | null\n  >(null);\n\n  if (!animatedStyleHandle.current) {\n    animatedStyleHandle.current = isJest()\n      ? { viewDescriptors, initial, jestAnimatedStyle }\n      : { viewDescriptors, initial };\n  }\n\n  return animatedStyleHandle.current;\n}\n"],"mappings":"AAAA,YAAY,CAEZ,OAASA,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAEzC,OAASC,aAAa,CAAEC,WAAW,CAAEC,UAAU,KAAQ,YAAS,CAChE,MAAO,CAAAC,WAAW,EAAIC,sBAAsB,KAAQ,mBAAgB,CACpE,OAASC,iBAAiB,KAAQ,uBAAc,CAChD,OAASC,cAAc,KAAQ,qBAAkB,CACjD,OACEC,iBAAiB,CACjBC,UAAU,CACVC,YAAY,CACZC,sBAAsB,KACjB,YAAS,CAShB,OAASC,sBAAsB,KAAQ,0BAAuB,CAC9D,OAASC,MAAM,CAAEC,cAAc,KAAQ,uBAAoB,CAY3D,OAASC,iBAAiB,KAAQ,mBAAgB,CAClD,OAASC,eAAe,KAAQ,cAAW,CAE3C,KAAM,CAAAC,iBAAiB,CAAGH,cAAc,CAAC,CAAC,OAAAI,iCAAA,EAAAC,IAAA,22CAAAC,gBAAA,CAkB1C,iBAAAA,gBAAA,SAAAA,CACEC,cAAsB,CACtBC,YAAgC,CAChCC,aAAiC,CACjCC,SAA6B,CACvB,CAEN,GAAIC,KAAK,CAACC,OAAO,CAACJ,YAAY,CAAC,CAAE,CAC/BA,YAAY,CAACK,OAAO,CAAC,CAACC,IAAI,CAAEC,KAAK,GAAK,CACpCT,gBAAgB,CACdC,cAAc,CACdO,IAAI,CACJL,aAAa,EAAIA,aAAa,CAACM,KAAK,CAAC,CACrCL,SAAS,EAAIA,SAAS,CAACK,KAAK,CAC9B,CAAC,CACH,CAAC,CAAC,CAEJ,CACA,GAAI,MAAO,CAAAP,YAAY,GAAK,QAAQ,EAAIA,YAAY,CAACQ,OAAO,CAAE,CAC5D,KAAM,CAAAC,SAAS,CAAGT,YAAY,CAE9B,GAAI,CAAAU,KAAK,CAAGD,SAAS,CAACE,OAAO,CAC7B,GAAIT,SAAS,GAAKU,SAAS,EAAIV,SAAS,GAAK,IAAI,CAAE,CACjD,GAAI,MAAO,CAAAA,SAAS,GAAK,QAAQ,CAAE,CACjC,GAAIA,SAAS,CAACQ,KAAK,GAAKE,SAAS,CAAE,CAEjCF,KAAK,CAAGR,SAAS,CAACQ,KAAK,CACzB,CAAC,IAAM,IAAIR,SAAS,CAACM,OAAO,GAAKI,SAAS,CAAE,CAC1C,GAAIX,aAAa,EAAEU,OAAO,GAAKC,SAAS,CAAE,CAExCF,KAAK,CAAGT,aAAa,CAACU,OAAO,CAC/B,CAAC,IAAM,IAAIT,SAAS,EAAES,OAAO,GAAKC,SAAS,CAAE,CAE3CF,KAAK,CAAGR,SAAS,CAACS,OAAO,CAC3B,CACF,CACF,CAAC,IAAM,CAELD,KAAK,CAAGR,SAAS,CACnB,CACF,CAEAO,SAAS,CAACI,SAAS,CAAIC,SAAoB,EAAK,CAC9CL,SAAS,CAACM,OAAO,CAACN,SAAS,CAAEC,KAAK,CAAEI,SAAS,CAAEb,aAAa,CAAC,CAC/D,CAAC,CACDQ,SAAS,CAACI,SAAS,CAACd,cAAc,CAAC,CACnCU,SAAS,CAACI,SAAS,CAAG,IAAI,CAC5B,CAAC,IAAM,IAAI,MAAO,CAAAb,YAAY,GAAK,QAAQ,CAAE,CAE3CgB,MAAM,CAACC,IAAI,CAACjB,YAAY,CAAC,CAACK,OAAO,CAAEa,GAAG,EACpCpB,gBAAgB,CACdC,cAAc,CACdC,YAAY,CAACkB,GAAG,CAAC,CACjBjB,aAAa,EAAIA,aAAa,CAACiB,GAAG,CAAC,CACnChB,SAAS,EAAIA,SAAS,CAACgB,GAAG,CAC5B,CACF,CAAC,CACH,CACF,EAAApB,gBAAA,CAAAqB,SAAA,IAAArB,gBAAA,CAAAsB,aAAA,gBAAAtB,gBAAA,CAAAuB,UAAA,CAAAzB,iCAAA,QAAAE,gBAAA,EA1DA,SAAAwB,iCAAA,EAAAzB,IAAA,mrCAAA0B,aAAA,CA4DA,iBAAAA,aAAA,SAAAA,CACEd,SAA6B,CAC7BK,SAAoB,CACpBI,GAAoB,CACpBM,MAA0B,CAC1BC,gBAAsC,CAC7B,CAET,GAAI,CAACA,gBAAgB,CAACf,KAAK,CAAE,CAC3B,MAAO,KAAI,CACb,CACA,GAAIP,KAAK,CAACC,OAAO,CAACK,SAAS,CAAC,CAAE,CAC5Be,MAAM,CAACN,GAAG,CAAC,CAAG,EAAE,CAChB,GAAI,CAAAQ,WAAW,CAAG,IAAI,CACtBjB,SAAS,CAACJ,OAAO,CAAC,CAACsB,KAAK,CAAEpB,KAAK,GAAK,CAClC,GACE,CAACgB,aAAa,CAACI,KAAK,CAAEb,SAAS,CAAEP,KAAK,CAAEiB,MAAM,CAACN,GAAG,CAAC,CAAEO,gBAAgB,CAAC,CACtE,CACAC,WAAW,CAAG,KAAK,CACrB,CACF,CAAC,CAAC,CACF,MAAO,CAAAA,WAAW,CACpB,CAAC,IAAM,IAAI,MAAO,CAAAjB,SAAS,GAAK,QAAQ,EAAIA,SAAS,CAACD,OAAO,CAAE,CAC7D,GAAI,CAAAoB,QAAQ,CAAG,IAAI,CACnB,GAAI,CAACnB,SAAS,CAACmB,QAAQ,CAAE,CACvB,GAAInB,SAAS,CAACI,SAAS,CAAE,CACvBJ,SAAS,CAACI,SAAS,CAACC,SAAS,CAAC,CAC9BL,SAAS,CAACI,SAAS,CAAG,IAAI,CAC5B,CACAe,QAAQ,CAAGnB,SAAS,CAACD,OAAO,CAACC,SAAS,CAAEK,SAAS,CAAC,CAClDL,SAAS,CAACK,SAAS,CAAGA,SAAS,CAC/B,GAAIc,QAAQ,CAAE,CACZnB,SAAS,CAACmB,QAAQ,CAAG,IAAI,CACzBnB,SAAS,CAACoB,QAAQ,EAAIpB,SAAS,CAACoB,QAAQ,CAAC,IAAmB,CAAC,CAC/D,CACF,CACAL,MAAM,CAACN,GAAG,CAAC,CAAGT,SAAS,CAACE,OAAO,CAC/B,MAAO,CAAAiB,QAAQ,CACjB,CAAC,IAAM,IAAI,MAAO,CAAAnB,SAAS,GAAK,QAAQ,CAAE,CACxCe,MAAM,CAACN,GAAG,CAAC,CAAG,CAAC,CAAC,CAChB,GAAI,CAAAQ,WAAW,CAAG,IAAI,CACtBV,MAAM,CAACC,IAAI,CAACR,SAAS,CAAC,CAACJ,OAAO,CAAEyB,CAAC,EAAK,CACpC,GACE,CAACP,aAAa,CACZd,SAAS,CAACqB,CAAC,CAAC,CACZhB,SAAS,CACTgB,CAAC,CACDN,MAAM,CAACN,GAAG,CAAC,CACXO,gBACF,CAAC,CACD,CACAC,WAAW,CAAG,KAAK,CACrB,CACF,CAAC,CAAC,CACF,MAAO,CAAAA,WAAW,CACpB,CAAC,IAAM,CACLF,MAAM,CAACN,GAAG,CAAC,CAAGT,SAAS,CACvB,MAAO,KAAI,CACb,CACF,EAAAc,aAAA,CAAAJ,SAAA,IAAAI,aAAA,CAAAH,aAAA,gBAAAG,aAAA,CAAAF,UAAA,CAAAC,iCAAA,QAAAC,aAAA,EA3DA,SAAAQ,gCAAA,EAAAlC,IAAA,04DAAAmC,YAAA,CA6DA,iBAAAA,YAAA,SAAAA,CACEC,eAA0C,CAC1CC,OAA6E,CAC7EC,KAAoB,CACpBV,gBAAsC,CACtCW,eAAe,CAAG,KAAK,CACjB,CAEN,KAAM,CAAAC,UAAU,CAAGF,KAAK,CAACE,UAAU,EAAI,CAAC,CAAC,CACzC,KAAM,CAAAC,SAAS,CAAGJ,OAAO,CAAC,CAAC,EAAI,CAAC,CAAC,CACjC,KAAM,CAAAK,SAAS,CAAGJ,KAAK,CAACK,IAAI,CAC5B,KAAM,CAAAC,oBAAgC,CAAG,CAAC,CAAC,CAE3C,GAAI,CAAAC,aAAa,CAAG,KAAK,CACzB,GAAI,CAAA3C,cAAkC,CACtC,GAAI,CAAA4C,oBAAoB,CAAG,KAAK,CAChC,IAAK,KAAM,CAAAzB,GAAG,GAAI,CAAAoB,SAAS,CAAE,CAC3B,KAAM,CAAA5B,KAAK,CAAG4B,SAAS,CAACpB,GAAG,CAAC,CAC5B,GAAI/B,UAAU,CAACuB,KAAK,CAAC,CAAE,CACrBX,cAAc,CACZ6C,MAAM,CAACC,gBAAgB,EAAID,MAAM,CAACE,sBAAsB,CAAC,CAAC,CAC5DhD,gBAAgB,CAACC,cAAc,CAAEW,KAAK,CAAE2B,UAAU,CAACnB,GAAG,CAAC,CAAEqB,SAAS,CAACrB,GAAG,CAAC,CAAC,CACxEmB,UAAU,CAACnB,GAAG,CAAC,CAAGR,KAAK,CACvBgC,aAAa,CAAG,IAAI,CACtB,CAAC,IAAM,CACLC,oBAAoB,CAAG,IAAI,CAC3BF,oBAAoB,CAACvB,GAAG,CAAC,CAAGR,KAAK,CACjC,MAAO,CAAA2B,UAAU,CAACnB,GAAG,CAAC,CACxB,CACF,CAEA,GAAIwB,aAAa,CAAE,CACjB,KAAM,CAAAK,KAAK,CAAIjC,SAAoB,EAAK,CAEtC,KAAM,CAAEuB,UAAU,CAAEG,IAAI,CAAEQ,oBAAqB,CAAC,CAAGb,KAAK,CACxD,GAAIa,oBAAoB,CAAE,CACxBb,KAAK,CAACc,kBAAkB,CAAG,KAAK,CAChC,OACF,CAEA,KAAM,CAAAC,OAA2B,CAAG,CAAC,CAAC,CACtC,GAAI,CAAAxB,WAAW,CAAG,IAAI,CACtB,IAAK,KAAM,CAAAyB,QAAQ,GAAI,CAAAd,UAAU,CAAE,CACjC,KAAM,CAAAT,QAAQ,CAAGL,aAAa,CAC5Bc,UAAU,CAACc,QAAQ,CAAC,CACpBrC,SAAS,CACTqC,QAAQ,CACRD,OAAO,CACPzB,gBACF,CAAC,CACD,GAAIG,QAAQ,CAAE,CACZY,IAAI,CAACW,QAAQ,CAAC,CAAGD,OAAO,CAACC,QAAQ,CAAC,CAClC,MAAO,CAAAd,UAAU,CAACc,QAAQ,CAAC,CAC7B,CAAC,IAAM,CACLzB,WAAW,CAAG,KAAK,CACrB,CACF,CAEA,GAAIwB,OAAO,CAAE,CACXpE,WAAW,CAACmD,eAAe,CAAEiB,OAAO,CAAC,CACvC,CAEA,GAAI,CAACxB,WAAW,CAAE,CAChB0B,qBAAqB,CAACL,KAAK,CAAC,CAC9B,CAAC,IAAM,CACLZ,KAAK,CAACc,kBAAkB,CAAG,KAAK,CAClC,CACF,CAAC,CAEDd,KAAK,CAACE,UAAU,CAAGA,UAAU,CAC7B,GAAI,CAACF,KAAK,CAACc,kBAAkB,CAAE,CAC7Bd,KAAK,CAACa,oBAAoB,CAAG,KAAK,CAClCb,KAAK,CAACc,kBAAkB,CAAG,IAAI,CAC/BF,KAAK,CAAChD,cAAe,CAAC,CACxB,CAEA,GAAI4C,oBAAoB,CAAE,CACxB7D,WAAW,CAACmD,eAAe,CAAEQ,oBAAoB,CAAC,CACpD,CACF,CAAC,IAAM,CACLN,KAAK,CAACa,oBAAoB,CAAG,IAAI,CACjCb,KAAK,CAACE,UAAU,CAAG,EAAE,CAErB,GAAI,CAACjD,YAAY,CAACmD,SAAS,CAAED,SAAS,CAAC,CAAE,CACvCxD,WAAW,CAACmD,eAAe,CAAEK,SAAS,CAAEF,eAAe,CAAC,CAC1D,CACF,CACAD,KAAK,CAACK,IAAI,CAAGF,SAAS,CACxB,EAAAN,YAAA,CAAAb,SAAA,EAAAhC,UAAA,CAAAW,gBAAA,CAAAyB,aAAA,CAAAzC,WAAA,CAAAM,YAAA,EAAA4C,YAAA,CAAAZ,aAAA,eAAAY,YAAA,CAAAX,UAAA,CAAAU,gCAAA,QAAAC,YAAA,EAxFA,SAAAqB,gCAAA,EAAAxD,IAAA,45DAAAyD,gBAAA,CA0FA,iBAAAA,gBAAA,SAAAA,CACErB,eAA0C,CAC1CC,OAA6E,CAC7EC,KAAoB,CACpBV,gBAAsC,CACtC8B,aAAmD,CACnDC,QAAwC,CAClC,CAEN,KAAM,CAAAnB,UAA8B,CAAGF,KAAK,CAACE,UAAU,EAAI,CAAC,CAAC,CAC7D,KAAM,CAAAC,SAAS,CAAGJ,OAAO,CAAC,CAAC,EAAI,CAAC,CAAC,CACjC,KAAM,CAAAK,SAAS,CAAGJ,KAAK,CAACK,IAAI,CAG5B,GAAI,CAAAE,aAAa,CAAG,KAAK,CACzB,GAAI,CAAA3C,cAAkC,CACtCiB,MAAM,CAACC,IAAI,CAACoB,UAAU,CAAC,CAAChC,OAAO,CAAEa,GAAG,EAAK,CACvC,KAAM,CAAAR,KAAK,CAAG4B,SAAS,CAACpB,GAAG,CAAC,CAC5B,GAAI,CAAC/B,UAAU,CAACuB,KAAK,CAAC,CAAE,CACtB,MAAO,CAAA2B,UAAU,CAACnB,GAAG,CAAC,CACxB,CACF,CAAC,CAAC,CACFF,MAAM,CAACC,IAAI,CAACqB,SAAS,CAAC,CAACjC,OAAO,CAAEa,GAAG,EAAK,CACtC,KAAM,CAAAR,KAAK,CAAG4B,SAAS,CAACpB,GAAG,CAAC,CAC5B,GAAI/B,UAAU,CAACuB,KAAK,CAAC,CAAE,CACrBX,cAAc,CACZ6C,MAAM,CAACC,gBAAgB,EAAID,MAAM,CAACE,sBAAsB,CAAC,CAAC,CAC5DhD,gBAAgB,CAACC,cAAc,CAAEW,KAAK,CAAE2B,UAAU,CAACnB,GAAG,CAAC,CAAEqB,SAAS,CAACrB,GAAG,CAAC,CAAC,CACxEmB,UAAU,CAACnB,GAAG,CAAC,CAAGR,KAAK,CACvBgC,aAAa,CAAG,IAAI,CACtB,CACF,CAAC,CAAC,CAEF,QAAS,CAAAK,KAAKA,CAACjC,SAAoB,CAAE,CAEnC,KAAM,CAAEuB,UAAU,CAAEG,IAAI,CAAEQ,oBAAqB,CAAC,CAAGb,KAAK,CACxD,GAAIa,oBAAoB,CAAE,CACxBb,KAAK,CAACc,kBAAkB,CAAG,KAAK,CAChC,OACF,CAEA,KAAM,CAAAC,OAA2B,CAAG,CAAC,CAAC,CACtC,GAAI,CAAAxB,WAAW,CAAG,IAAI,CACtBV,MAAM,CAACC,IAAI,CAACoB,UAAU,CAAC,CAAChC,OAAO,CAAE8C,QAAQ,EAAK,CAC5C,KAAM,CAAAvB,QAAQ,CAAGL,aAAa,CAC5Bc,UAAU,CAACc,QAAQ,CAAC,CACpBrC,SAAS,CACTqC,QAAQ,CACRD,OAAO,CACPzB,gBACF,CAAC,CACD,GAAIG,QAAQ,CAAE,CACZY,IAAI,CAACW,QAAQ,CAAC,CAAGD,OAAO,CAACC,QAAQ,CAAC,CAClC,MAAO,CAAAd,UAAU,CAACc,QAAQ,CAAC,CAC7B,CAAC,IAAM,CACLzB,WAAW,CAAG,KAAK,CACrB,CACF,CAAC,CAAC,CAEF,GAAIV,MAAM,CAACC,IAAI,CAACiC,OAAO,CAAC,CAACO,MAAM,CAAE,CAC/B1E,sBAAsB,CAACkD,eAAe,CAAEiB,OAAO,CAAEK,aAAa,CAAEC,QAAQ,CAAC,CAC3E,CAEA,GAAI,CAAC9B,WAAW,CAAE,CAChB0B,qBAAqB,CAACL,KAAK,CAAC,CAC9B,CAAC,IAAM,CACLZ,KAAK,CAACc,kBAAkB,CAAG,KAAK,CAClC,CACF,CAEA,GAAIP,aAAa,CAAE,CACjBP,KAAK,CAACE,UAAU,CAAGA,UAAU,CAC7B,GAAI,CAACF,KAAK,CAACc,kBAAkB,CAAE,CAC7Bd,KAAK,CAACa,oBAAoB,CAAG,KAAK,CAClCb,KAAK,CAACc,kBAAkB,CAAG,IAAI,CAC/BF,KAAK,CAAChD,cAAe,CAAC,CACxB,CACF,CAAC,IAAM,CACLoC,KAAK,CAACa,oBAAoB,CAAG,IAAI,CACjCb,KAAK,CAACE,UAAU,CAAG,EAAE,CACvB,CAGAF,KAAK,CAACK,IAAI,CAAGF,SAAS,CAEtB,GAAI,CAAClD,YAAY,CAACmD,SAAS,CAAED,SAAS,CAAC,CAAE,CACvCvD,sBAAsB,CAACkD,eAAe,CAAEK,SAAS,CAAEiB,aAAa,CAAEC,QAAQ,CAAC,CAC7E,CACF,EAAAF,gBAAA,CAAAnC,SAAA,EAAAhC,UAAA,CAAAW,gBAAA,CAAAyB,aAAA,CAAAxC,sBAAA,CAAAK,YAAA,EAAAkE,gBAAA,CAAAlC,aAAA,eAAAkC,gBAAA,CAAAjC,UAAA,CAAAgC,gCAAA,QAAAC,gBAAA,EAxFA,GA2FA,QAAS,CAAAI,qBAAqBA,CAC5BpD,IAAyC,CACzCqD,UAAmB,CACb,CACN,GAAIxD,KAAK,CAACC,OAAO,CAACE,IAAI,CAAC,CAAE,CAEvB,IAAK,KAAM,CAAAsD,OAAO,GAAI,CAAAtD,IAAI,CAAE,CAC1BoD,qBAAqB,CAACE,OAAO,CAAED,UAAU,CAAC,CAC5C,CACF,CAAC,IAAM,IACL,MAAO,CAAArD,IAAI,GAAK,QAAQ,EACxBA,IAAI,GAAK,IAAI,EACbA,IAAI,CAACI,KAAK,GAAKE,SAAS,CACxB,CAEA,IAAK,KAAM,CAAAM,GAAG,GAAI,CAAAF,MAAM,CAACC,IAAI,CAACX,IAAI,CAAC,CAAE,CACnCoD,qBAAqB,CAACpD,IAAI,CAACY,GAAG,CAAC,CAAEA,GAAG,CAAC,CACvC,CACF,CAAC,IAAM,IACLyC,UAAU,GAAK/C,SAAS,EACxB,MAAO,CAAAN,IAAI,GAAK,QAAQ,EACxBA,IAAI,GAAK,IAAI,EACbA,IAAI,CAACI,KAAK,GAAKE,SAAS,CACxB,CAEA,KAAM,IAAI,CAAAlB,eAAe,CACvB,6BAA6BiE,UAAU,yCACzC,CAAC,CACH,CACF,OAAAE,iCAAA,EAAAhE,IAAA,sNAAAiE,gCAAA,EAAAjE,IAAA,4TAAAkE,gCAAA,EAAAlE,IAAA,kRAqBA,MAAO,SAAS,CAAAmE,gBAAgBA,CAC9B9B,OAE6C,CAC7C+B,YAAoC,CACpCT,QAA6E,CAC7EpB,eAAe,CAAG,KAAK,CACsC,CAC7D,KAAM,CAAA8B,mBAAmB,CAAGxF,MAAM,CAAsB,CAAC,CACzD,GAAI,CAAAyF,MAAM,CAAGnD,MAAM,CAACoD,MAAM,CAAClC,OAAO,CAACf,SAAS,EAAI,CAAC,CAAC,CAAC,CACnD,GAAIxB,iBAAiB,CAAE,CACrB,GAAI,CAACwE,MAAM,CAACV,MAAM,EAAIQ,YAAY,EAAER,MAAM,CAAE,CAE1CU,MAAM,CAAGF,YAAY,CACvB,CACA,GACE,OACA,CAACE,MAAM,CAACV,MAAM,EACd,CAACQ,YAAY,EACb,CAACxE,iBAAiB,CAACyC,OAAO,CAAC,CAC3B,CACA,KAAM,IAAI,CAAAxC,eAAe,CACvB;AACR,qIACM,CAAC,CACH,CACF,CACA,KAAM,CAAA2E,aAAa,CAAGb,QAAQ,CAC1BrD,KAAK,CAACC,OAAO,CAACoD,QAAQ,CAAC,CACrBA,QAAQ,CACR,CAACA,QAAQ,CAAC,CACZ,EAAE,CACN,KAAM,CAAAc,YAAY,CAAGd,QAAQ,CAAGtE,iBAAiB,CAACmF,aAAa,CAAC,CAAG,IAAI,CACvE,KAAM,CAAAE,mBAAmB,CAAGtF,cAAc,CAAU,IAAI,CAAC,CACzD,KAAM,CAAAuF,iBAAiB,CAAG9F,MAAM,CAAQ,CAAC,CAAU,CAAC,CAGpD,GAAI,CAACuF,YAAY,CAAE,CACjBA,YAAY,CAAG,CAAC,GAAGE,MAAM,CAAEjC,OAAO,CAACd,aAAa,CAAC,CACnD,CAAC,IAAM,CACL6C,YAAY,CAACQ,IAAI,CAACvC,OAAO,CAACd,aAAa,CAAC,CAC1C,CACAkD,YAAY,EAAIL,YAAY,CAACQ,IAAI,CAACH,YAAY,CAAC,CAE/C,GAAI,CAACJ,mBAAmB,CAACvD,OAAO,CAAE,CAChC,KAAM,CAAA+D,YAAY,CAAG1F,iBAAiB,CAACkD,OAAO,CAAC,CAC/C,SAAa,CACX7C,sBAAsB,CAACqF,YAAY,CAAC,CACtC,CACAR,mBAAmB,CAACvD,OAAO,CAAG,CAC5BgE,OAAO,CAAE,CACPjE,KAAK,CAAEgE,YAAY,CACnBxC,OACF,CAAC,CACD0C,WAAW,CAAEjG,aAAa,CAAC,CACzB6D,IAAI,CAAEkC,YAAY,CAClBrC,UAAU,CAAE,CAAC,CAAC,CACdW,oBAAoB,CAAE,KAAK,CAC3BC,kBAAkB,CAAE,KACtB,CAAC,CAAC,CACFhB,eAAe,CAAE3C,sBAAsB,CAAC,CAC1C,CAAC,CACH,CAEA,KAAM,CAAEqF,OAAO,CAAEC,WAAW,CAAE3C,eAAgB,CAAC,CAAGiC,mBAAmB,CAACvD,OAAO,CAC7E,KAAM,CAAAkE,wBAAwB,CAAG5C,eAAe,CAAC4C,wBAAwB,CAEzEZ,YAAY,CAACQ,IAAI,CAACI,wBAAwB,CAAC,CAE3CpG,SAAS,CAAC,IAAM,CACd,GAAI,CAAAqG,GAAG,CACP,GAAI,CAAAC,SAAS,CAAG7C,OAAO,CACvB,GAAIsB,QAAQ,CAAE,CACZuB,SAAS,CAAI,iBAAAC,yCAAA,SAAAA,CAAA,CAAM,CAEjB,KAAM,CAAA1C,SAAS,CAAGJ,OAAO,CAAC,CAAC,CAC3BmC,aAAa,CAAChE,OAAO,CAAE4E,OAAO,EAAK,CACjCA,OAAO,CAAC3C,SAAoC,CAAC,CAC/C,CAAC,CAAC,CACF,MAAO,CAAAA,SAAS,CAClB,CAAgC,CAAA0C,yCAAA,CAAA7D,SAAA,EAAAe,OAAA,CAAAmC,aAAA,EAAAW,yCAAA,CAAA5D,aAAA,gBAAA4D,yCAAA,CAAA3D,UAAA,CAAAwC,iCAAA,QAAAmB,yCAAA,EAPnB,EAOmB,CAClC,CAEA,GAAIzF,MAAM,CAAC,CAAC,CAAE,CACZuF,GAAG,CAAG,iBAAAI,yCAAA,SAAAA,CAAA,CAAM,CAEV5B,gBAAgB,CACduB,wBAAwB,CACxB3C,OAAO,CACP0C,WAAW,CACXL,mBAAmB,CACnBC,iBAAiB,CACjBH,aACF,CAAC,CACH,CAAC,CAAAa,yCAAA,CAAA/D,SAAA,EAAAmC,gBAAA,CAAAuB,wBAAA,CAAA3C,OAAA,CAAA0C,WAAA,CAAAL,mBAAA,CAAAC,iBAAA,CAAAH,aAAA,EAAAa,yCAAA,CAAA9D,aAAA,eAAA8D,yCAAA,CAAA7D,UAAA,CAAAyC,gCAAA,QAAAoB,yCAAA,EAVK,EAUL,CACH,CAAC,IAAM,CACLJ,GAAG,CAAG,iBAAAK,yCAAA,SAAAA,CAAA,CAAM,CAEVnD,YAAY,CACV6C,wBAAwB,CACxBE,SAAS,CACTH,WAAW,CACXL,mBAAmB,CACnBnC,eACF,CAAC,CACH,CAAC,CAAA+C,yCAAA,CAAAhE,SAAA,EAAAa,YAAA,CAAA6C,wBAAA,CAAAE,SAAA,CAAAH,WAAA,CAAAL,mBAAA,CAAAnC,eAAA,EAAA+C,yCAAA,CAAA/D,aAAA,eAAA+D,yCAAA,CAAA9D,UAAA,CAAA0C,gCAAA,QAAAoB,yCAAA,EATK,EASL,CACH,CACA,KAAM,CAAAC,QAAQ,CAAGxG,WAAW,CAACkG,GAAG,CAAEX,MAAM,CAAC,CACzC,MAAO,IAAM,CACXtF,UAAU,CAACuG,QAAQ,CAAC,CACtB,CAAC,CAEH,CAAC,CAAEnB,YAAY,CAAC,CAEhBxF,SAAS,CAAC,IAAM,CACd8F,mBAAmB,CAAC7D,KAAK,CAAG,IAAI,CAChC,MAAO,IAAM,CACX6D,mBAAmB,CAAC7D,KAAK,CAAG,KAAK,CACnC,CAAC,CACH,CAAC,CAAE,CAAC6D,mBAAmB,CAAC,CAAC,CAEzBb,qBAAqB,CAACiB,OAAO,CAACjE,KAAK,CAAC,CAEpC,KAAM,CAAA2E,mBAAmB,CAAG3G,MAAM,CAEhC,IAAI,CAAC,CAEP,GAAI,CAAC2G,mBAAmB,CAAC1E,OAAO,CAAE,CAChC0E,mBAAmB,CAAC1E,OAAO,CAAGpB,MAAM,CAAC,CAAC,CAClC,CAAE0C,eAAe,CAAE0C,OAAO,CAAEH,iBAAkB,CAAC,CAC/C,CAAEvC,eAAe,CAAE0C,OAAQ,CAAC,CAClC,CAEA,MAAO,CAAAU,mBAAmB,CAAC1E,OAAO,CACpC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}