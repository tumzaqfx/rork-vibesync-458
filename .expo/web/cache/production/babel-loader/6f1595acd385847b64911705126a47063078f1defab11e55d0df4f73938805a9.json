{"ast":null,"code":"'use strict';import JSReanimated from\"./JSReanimated.js\";import{createReactDOMStyle,createTransformValue,createTextShadowValue}from'./webUtils';import{PropsAllowlists}from\"../propsAllowlists.js\";import{logger}from\"../logger/index.js\";import{ReanimatedError}from\"../errors.js\";const reanimatedJS=new JSReanimated();global._makeShareableClone=()=>{throw new ReanimatedError('_makeShareableClone should never be called in JSReanimated.');};global._scheduleHostFunctionOnJS=()=>{throw new ReanimatedError('_scheduleHostFunctionOnJS should never be called in JSReanimated.');};global._scheduleRemoteFunctionOnJS=()=>{throw new ReanimatedError('_scheduleHostFunctionOnJS should never be called in JSReanimated.');};global._scheduleOnRuntime=()=>{throw new ReanimatedError('_scheduleOnRuntime should never be called in JSReanimated.');};export const _updatePropsJS=(updates,viewRef,isAnimatedProps)=>{if(viewRef){const component=viewRef.getAnimatableRef?viewRef.getAnimatableRef():viewRef;const[rawStyles]=Object.keys(updates).reduce((acc,key)=>{const value=updates[key];const index=typeof value==='function'?1:0;acc[index][key]=value;return acc;},[{},{}]);if(typeof component.setNativeProps==='function'){setNativeProps(component,rawStyles,isAnimatedProps);}else if(createReactDOMStyle!==undefined&&component.style!==undefined){updatePropsDOM(component,rawStyles,isAnimatedProps);}else if(Object.keys(component.props).length>0){Object.keys(component.props).forEach(key=>{if(!rawStyles[key]){return;}const dashedKey=key.replace(/[A-Z]/g,m=>'-'+m.toLowerCase());component._touchableNode.setAttribute(dashedKey,rawStyles[key]);});}else{const componentName='className'in component?component?.className:'';logger.warn(`It's not possible to manipulate the component ${componentName}`);}}};const setNativeProps=(component,newProps,isAnimatedProps)=>{if(isAnimatedProps){const uiProps={};for(const key in newProps){if(isNativeProp(key)){uiProps[key]=newProps[key];}}component.setNativeProps?.(uiProps);}const previousStyle=component.previousStyle?component.previousStyle:{};const currentStyle=Object.assign({},previousStyle,newProps);component.previousStyle=currentStyle;component.setNativeProps?.({style:currentStyle});};const updatePropsDOM=(component,style,isAnimatedProps)=>{const previousStyle=component.previousStyle?component.previousStyle:{};const currentStyle=Object.assign({},previousStyle,style);component.previousStyle=currentStyle;const domStyle=createReactDOMStyle(currentStyle);if(Array.isArray(domStyle.transform)&&createTransformValue!==undefined){domStyle.transform=createTransformValue(domStyle.transform);}if(createTextShadowValue!==undefined&&(domStyle.textShadowColor||domStyle.textShadowRadius||domStyle.textShadowOffset)){domStyle.textShadow=createTextShadowValue({textShadowColor:domStyle.textShadowColor,textShadowOffset:domStyle.textShadowOffset,textShadowRadius:domStyle.textShadowRadius});}for(const key in domStyle){if(isAnimatedProps){component.setAttribute(key,domStyle[key]);}else{component.style[key]=domStyle[key];}}};function isNativeProp(propName){return!!PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST[propName];}export default reanimatedJS;","map":{"version":3,"names":["JSReanimated","createReactDOMStyle","createTransformValue","createTextShadowValue","PropsAllowlists","logger","ReanimatedError","reanimatedJS","global","_makeShareableClone","_scheduleHostFunctionOnJS","_scheduleRemoteFunctionOnJS","_scheduleOnRuntime","_updatePropsJS","updates","viewRef","isAnimatedProps","component","getAnimatableRef","rawStyles","Object","keys","reduce","acc","key","value","index","setNativeProps","undefined","style","updatePropsDOM","props","length","forEach","dashedKey","replace","m","toLowerCase","_touchableNode","setAttribute","componentName","className","warn","newProps","uiProps","isNativeProp","previousStyle","currentStyle","assign","domStyle","Array","isArray","transform","textShadowColor","textShadowRadius","textShadowOffset","textShadow","propName","NATIVE_THREAD_PROPS_WHITELIST"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/js-reanimated/index.ts"],"sourcesContent":["'use strict';\nimport JSReanimated from './JSReanimated';\nimport type { StyleProps, AnimatedStyle } from '../commonTypes';\nimport {\n  createReactDOMStyle,\n  createTransformValue,\n  createTextShadowValue,\n} from './webUtils';\nimport { PropsAllowlists } from '../propsAllowlists';\nimport { logger } from '../logger';\nimport { ReanimatedError } from '../errors';\n\nconst reanimatedJS = new JSReanimated();\n\nglobal._makeShareableClone = () => {\n  throw new ReanimatedError(\n    '_makeShareableClone should never be called in JSReanimated.'\n  );\n};\n\nglobal._scheduleHostFunctionOnJS = () => {\n  throw new ReanimatedError(\n    '_scheduleHostFunctionOnJS should never be called in JSReanimated.'\n  );\n};\n\nglobal._scheduleRemoteFunctionOnJS = () => {\n  throw new ReanimatedError(\n    '_scheduleHostFunctionOnJS should never be called in JSReanimated.'\n  );\n};\n\nglobal._scheduleOnRuntime = () => {\n  throw new ReanimatedError(\n    '_scheduleOnRuntime should never be called in JSReanimated.'\n  );\n};\n\ninterface JSReanimatedComponent {\n  previousStyle: StyleProps;\n  setNativeProps?: (style: StyleProps) => void;\n  style?: StyleProps;\n  props: Record<string, string | number>;\n  _touchableNode: {\n    setAttribute: (key: string, props: unknown) => void;\n  };\n}\n\nexport interface ReanimatedHTMLElement extends HTMLElement {\n  previousStyle: StyleProps;\n  setNativeProps?: (style: StyleProps) => void;\n  props: Record<string, string | number>;\n  _touchableNode: {\n    setAttribute: (key: string, props: unknown) => void;\n  };\n  reanimatedDummy?: boolean;\n  removedAfterAnimation?: boolean;\n}\n\nexport const _updatePropsJS = (\n  // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n  updates: StyleProps | AnimatedStyle<any>,\n  viewRef: (JSReanimatedComponent | ReanimatedHTMLElement) & {\n    getAnimatableRef?: () => JSReanimatedComponent | ReanimatedHTMLElement;\n  },\n  isAnimatedProps?: boolean\n): void => {\n  if (viewRef) {\n    const component = viewRef.getAnimatableRef\n      ? viewRef.getAnimatableRef()\n      : viewRef;\n    const [rawStyles] = Object.keys(updates).reduce(\n      (acc: [StyleProps, AnimatedStyle<any>], key) => {\n        const value = updates[key];\n        const index = typeof value === 'function' ? 1 : 0;\n        acc[index][key] = value;\n        return acc;\n      },\n      [{}, {}]\n    );\n\n    if (typeof component.setNativeProps === 'function') {\n      // This is the legacy way to update props on React Native Web <= 0.18.\n      // Also, some components (e.g. from react-native-svg) don't have styles\n      // and always provide setNativeProps function instead (even on React Native Web 0.19+).\n      setNativeProps(component, rawStyles, isAnimatedProps);\n    } else if (\n      createReactDOMStyle !== undefined &&\n      component.style !== undefined\n    ) {\n      // React Native Web 0.19+ no longer provides setNativeProps function,\n      // so we need to update DOM nodes directly.\n      updatePropsDOM(component, rawStyles, isAnimatedProps);\n    } else if (Object.keys(component.props).length > 0) {\n      Object.keys(component.props).forEach((key) => {\n        if (!rawStyles[key]) {\n          return;\n        }\n        const dashedKey = key.replace(/[A-Z]/g, (m) => '-' + m.toLowerCase());\n        component._touchableNode.setAttribute(dashedKey, rawStyles[key]);\n      });\n    } else {\n      const componentName =\n        'className' in component ? component?.className : '';\n      logger.warn(\n        `It's not possible to manipulate the component ${componentName}`\n      );\n    }\n  }\n};\n\nconst setNativeProps = (\n  component: JSReanimatedComponent | ReanimatedHTMLElement,\n  newProps: StyleProps,\n  isAnimatedProps?: boolean\n): void => {\n  if (isAnimatedProps) {\n    const uiProps: Record<string, unknown> = {};\n    for (const key in newProps) {\n      if (isNativeProp(key)) {\n        uiProps[key] = newProps[key];\n      }\n    }\n    // Only update UI props directly on the component,\n    // other props can be updated as standard style props.\n    component.setNativeProps?.(uiProps);\n  }\n\n  const previousStyle = component.previousStyle ? component.previousStyle : {};\n  const currentStyle = { ...previousStyle, ...newProps };\n  component.previousStyle = currentStyle;\n\n  component.setNativeProps?.({ style: currentStyle });\n};\n\nconst updatePropsDOM = (\n  component: JSReanimatedComponent | HTMLElement,\n  style: StyleProps,\n  isAnimatedProps?: boolean\n): void => {\n  const previousStyle = (component as JSReanimatedComponent).previousStyle\n    ? (component as JSReanimatedComponent).previousStyle\n    : {};\n  const currentStyle = { ...previousStyle, ...style };\n  (component as JSReanimatedComponent).previousStyle = currentStyle;\n\n  const domStyle = createReactDOMStyle(currentStyle);\n  if (Array.isArray(domStyle.transform) && createTransformValue !== undefined) {\n    domStyle.transform = createTransformValue(domStyle.transform);\n  }\n\n  if (\n    createTextShadowValue !== undefined &&\n    (domStyle.textShadowColor ||\n      domStyle.textShadowRadius ||\n      domStyle.textShadowOffset)\n  ) {\n    domStyle.textShadow = createTextShadowValue({\n      textShadowColor: domStyle.textShadowColor,\n      textShadowOffset: domStyle.textShadowOffset,\n      textShadowRadius: domStyle.textShadowRadius,\n    });\n  }\n\n  for (const key in domStyle) {\n    if (isAnimatedProps) {\n      (component as HTMLElement).setAttribute(key, domStyle[key]);\n    } else {\n      (component.style as StyleProps)[key] = domStyle[key];\n    }\n  }\n};\n\nfunction isNativeProp(propName: string): boolean {\n  return !!PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST[propName];\n}\n\nexport default reanimatedJS;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}