{"ast":null,"code":"import AsyncStorage from'@react-native-async-storage/async-storage';import Platform from\"react-native-web/dist/exports/Platform\";const STORAGE_KEY='@vibesync_crash_reports';const MAX_STORED_REPORTS=50;export class CrashReporter{static reports=[];static isInitialized=false;static async initialize(){if(this.isInitialized)return;try{await this.loadReports();this.setupGlobalErrorHandler();this.isInitialized=true;console.log('[CrashReporter] Initialized');}catch(error){console.error('[CrashReporter] Initialization error:',error);}}static setupGlobalErrorHandler(){if(true){console.log('[CrashReporter] Skipping global error handler on web');return;}try{const ErrorUtils=require('react-native').ErrorUtils;if(!ErrorUtils||typeof ErrorUtils.getGlobalHandler!=='function'){console.warn('[CrashReporter] ErrorUtils not available');return;}const originalHandler=ErrorUtils.getGlobalHandler();ErrorUtils.setGlobalHandler((error,isFatal)=>{console.error('[CrashReporter] Global error caught:',error,'Fatal:',isFatal);this.reportCrash(error,{isFatal,source:'global_handler'});if(originalHandler){originalHandler(error,isFatal);}});}catch(error){console.warn('[CrashReporter] Could not setup global error handler:',error);}}static async reportCrash(error,context){try{const report={id:`crash_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,timestamp:new Date().toISOString(),error:{message:error.message,stack:error.stack,name:error.name},context:context||{},device:{platform:\"web\",version:Platform.Version.toString()},app:{version:'1.0.0'}};this.reports.push(report);if(this.reports.length>MAX_STORED_REPORTS){this.reports=this.reports.slice(-MAX_STORED_REPORTS);}await this.saveReports();console.log('[CrashReporter] Crash reported:',report.id);}catch(err){console.error('[CrashReporter] Error reporting crash:',err);}}static async reportError(error,severity,context){await this.reportCrash(error,Object.assign({},context,{severity,type:'handled_error'}));}static async reportWarning(message,context){const error=new Error(message);await this.reportError(error,'low',Object.assign({},context,{type:'warning'}));}static async loadReports(){try{const stored=await AsyncStorage.getItem(STORAGE_KEY);if(stored){this.reports=JSON.parse(stored);console.log('[CrashReporter] Loaded',this.reports.length,'reports');}}catch(error){console.error('[CrashReporter] Error loading reports:',error);}}static async saveReports(){try{await AsyncStorage.setItem(STORAGE_KEY,JSON.stringify(this.reports));}catch(error){console.error('[CrashReporter] Error saving reports:',error);}}static async getReports(){return[...this.reports];}static async clearReports(){try{this.reports=[];await AsyncStorage.removeItem(STORAGE_KEY);console.log('[CrashReporter] Reports cleared');}catch(error){console.error('[CrashReporter] Error clearing reports:',error);}}static async sendReports(){if(this.reports.length===0){console.log('[CrashReporter] No reports to send');return true;}try{console.log('[CrashReporter] Sending',this.reports.length,'reports');await this.clearReports();return true;}catch(error){console.error('[CrashReporter] Error sending reports:',error);return false;}}}","map":{"version":3,"names":["AsyncStorage","Platform","STORAGE_KEY","MAX_STORED_REPORTS","CrashReporter","reports","isInitialized","initialize","loadReports","setupGlobalErrorHandler","console","log","error","ErrorUtils","require","getGlobalHandler","warn","originalHandler","setGlobalHandler","isFatal","reportCrash","source","context","report","id","Date","now","Math","random","toString","substr","timestamp","toISOString","message","stack","name","device","platform","version","Version","app","push","length","slice","saveReports","err","reportError","severity","Object","assign","type","reportWarning","Error","stored","getItem","JSON","parse","setItem","stringify","getReports","clearReports","removeItem","sendReports"],"sources":["/home/user/rork-vibesync-458/utils/crash-reporter.ts"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Platform } from 'react-native';\n\nexport interface CrashReport {\n  id: string;\n  timestamp: string;\n  error: {\n    message: string;\n    stack?: string;\n    name: string;\n  };\n  context: {\n    userId?: string;\n    sessionId?: string;\n    screen?: string;\n    action?: string;\n    [key: string]: any;\n  };\n  device: {\n    platform: string;\n    version: string;\n    model?: string;\n  };\n  app: {\n    version: string;\n    buildNumber?: string;\n  };\n}\n\nconst STORAGE_KEY = '@vibesync_crash_reports';\nconst MAX_STORED_REPORTS = 50;\n\nexport class CrashReporter {\n  private static reports: CrashReport[] = [];\n  private static isInitialized = false;\n\n  static async initialize(): Promise<void> {\n    if (this.isInitialized) return;\n\n    try {\n      await this.loadReports();\n      this.setupGlobalErrorHandler();\n      this.isInitialized = true;\n      console.log('[CrashReporter] Initialized');\n    } catch (error) {\n      console.error('[CrashReporter] Initialization error:', error);\n    }\n  }\n\n  private static setupGlobalErrorHandler(): void {\n    if (Platform.OS === 'web') {\n      console.log('[CrashReporter] Skipping global error handler on web');\n      return;\n    }\n\n    try {\n      const ErrorUtils = require('react-native').ErrorUtils;\n      if (!ErrorUtils || typeof ErrorUtils.getGlobalHandler !== 'function') {\n        console.warn('[CrashReporter] ErrorUtils not available');\n        return;\n      }\n\n      const originalHandler = ErrorUtils.getGlobalHandler();\n\n      ErrorUtils.setGlobalHandler((error: Error, isFatal?: boolean) => {\n        console.error('[CrashReporter] Global error caught:', error, 'Fatal:', isFatal);\n        \n        this.reportCrash(error, {\n          isFatal,\n          source: 'global_handler',\n        });\n\n        if (originalHandler) {\n          originalHandler(error, isFatal);\n        }\n      });\n    } catch (error) {\n      console.warn('[CrashReporter] Could not setup global error handler:', error);\n    }\n  }\n\n  static async reportCrash(error: Error, context?: Record<string, any>): Promise<void> {\n    try {\n      const report: CrashReport = {\n        id: `crash_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        timestamp: new Date().toISOString(),\n        error: {\n          message: error.message,\n          stack: error.stack,\n          name: error.name,\n        },\n        context: context || {},\n        device: {\n          platform: Platform.OS,\n          version: Platform.Version.toString(),\n        },\n        app: {\n          version: '1.0.0',\n        },\n      };\n\n      this.reports.push(report);\n\n      if (this.reports.length > MAX_STORED_REPORTS) {\n        this.reports = this.reports.slice(-MAX_STORED_REPORTS);\n      }\n\n      await this.saveReports();\n      console.log('[CrashReporter] Crash reported:', report.id);\n    } catch (err) {\n      console.error('[CrashReporter] Error reporting crash:', err);\n    }\n  }\n\n  static async reportError(error: Error, severity: 'low' | 'medium' | 'high' | 'critical', context?: Record<string, any>): Promise<void> {\n    await this.reportCrash(error, {\n      ...context,\n      severity,\n      type: 'handled_error',\n    });\n  }\n\n  static async reportWarning(message: string, context?: Record<string, any>): Promise<void> {\n    const error = new Error(message);\n    await this.reportError(error, 'low', {\n      ...context,\n      type: 'warning',\n    });\n  }\n\n  private static async loadReports(): Promise<void> {\n    try {\n      const stored = await AsyncStorage.getItem(STORAGE_KEY);\n      if (stored) {\n        this.reports = JSON.parse(stored);\n        console.log('[CrashReporter] Loaded', this.reports.length, 'reports');\n      }\n    } catch (error) {\n      console.error('[CrashReporter] Error loading reports:', error);\n    }\n  }\n\n  private static async saveReports(): Promise<void> {\n    try {\n      await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(this.reports));\n    } catch (error) {\n      console.error('[CrashReporter] Error saving reports:', error);\n    }\n  }\n\n  static async getReports(): Promise<CrashReport[]> {\n    return [...this.reports];\n  }\n\n  static async clearReports(): Promise<void> {\n    try {\n      this.reports = [];\n      await AsyncStorage.removeItem(STORAGE_KEY);\n      console.log('[CrashReporter] Reports cleared');\n    } catch (error) {\n      console.error('[CrashReporter] Error clearing reports:', error);\n    }\n  }\n\n  static async sendReports(): Promise<boolean> {\n    if (this.reports.length === 0) {\n      console.log('[CrashReporter] No reports to send');\n      return true;\n    }\n\n    try {\n      console.log('[CrashReporter] Sending', this.reports.length, 'reports');\n      \n      await this.clearReports();\n      return true;\n    } catch (error) {\n      console.error('[CrashReporter] Error sending reports:', error);\n      return false;\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}