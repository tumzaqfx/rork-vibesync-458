{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"source\",\"placeholder\",\"contentFit\",\"contentPosition\",\"placeholderContentFit\",\"cachePolicy\",\"onLoad\",\"transition\",\"onError\",\"responsivePolicy\",\"onLoadEnd\",\"onDisplay\",\"priority\",\"blurRadius\",\"recyclingKey\",\"style\",\"nativeViewRef\",\"accessibilityLabel\",\"tintColor\",\"containerViewRef\"];import React from'react';import View from\"react-native-web/dist/exports/View\";import AnimationManager from'./web/AnimationManager';import ImageWrapper from'./web/ImageWrapper';import loadStyle from'./web/imageStyles';import useSourceSelection from'./web/useSourceSelection';import{jsx as _jsx}from\"react/jsx-runtime\";loadStyle();function onLoadAdapter(onLoad){return event=>{const target=event.target;onLoad?.({source:{url:target.currentSrc,width:target.naturalWidth,height:target.naturalHeight,mediaType:null},cacheType:'none'});};}function onErrorAdapter(onError){return({source})=>{onError?.({error:`Failed to load image from url: ${source?.uri}`});};}function setCssVariablesForFlipTransitions(element,size){element?.style.setProperty('--expo-image-width',`${size.width}px`);element?.style.setProperty('--expo-image-height',`${size.height}px`);}function isFlipTransition(transition){return transition?.effect==='flip-from-bottom'||transition?.effect==='flip-from-top'||transition?.effect==='flip-from-left'||transition?.effect==='flip-from-right';}function getAnimationKey(source,recyclingKey){const uri=source&&'uri'in source&&source.uri||'';return recyclingKey?[recyclingKey,uri].join('-'):uri;}export default function ExpoImage(_ref){let{source,placeholder,contentFit,contentPosition,placeholderContentFit,cachePolicy,onLoad,transition,onError,responsivePolicy,onLoadEnd,onDisplay,priority,blurRadius,recyclingKey,style,nativeViewRef,accessibilityLabel,tintColor,containerViewRef}=_ref,props=_objectWithoutPropertiesLoose(_ref,_excluded);const imagePlaceholderContentFit=placeholderContentFit||'scale-down';const imageHashStyle={objectFit:placeholderContentFit||contentFit};const selectedSource=useSourceSelection(source,responsivePolicy,containerViewRef,isFlipTransition(transition)?setCssVariablesForFlipTransitions:null);const firstPlaceholder=placeholder?.[0];const initialNodeAnimationKey=getAnimationKey(firstPlaceholder,recyclingKey);const initialNode=firstPlaceholder?.uri?[initialNodeAnimationKey,({onAnimationFinished})=>(className,style)=>_jsx(ImageWrapper,{ref:nativeViewRef,source:firstPlaceholder,style:Object.assign({objectFit:imagePlaceholderContentFit},blurRadius?{filter:`blur(${blurRadius}px)`}:{},style),className:className,events:{onTransitionEnd:[onAnimationFinished]},contentPosition:{left:'50%',top:'50%'},hashPlaceholderContentPosition:contentPosition,hashPlaceholderStyle:imageHashStyle,accessibilityLabel:accessibilityLabel,cachePolicy:cachePolicy,priority:priority,tintColor:tintColor})]:null;const currentNodeAnimationKey=getAnimationKey(selectedSource??firstPlaceholder,recyclingKey);const currentNode=[currentNodeAnimationKey,({onAnimationFinished,onReady,onMount,onError:onErrorInner})=>(className,style)=>_jsx(ImageWrapper,{ref:nativeViewRef,source:selectedSource||firstPlaceholder,events:{onError:[onErrorAdapter(onError),onLoadEnd,onErrorInner],onLoad:[onLoadAdapter(onLoad),onLoadEnd,onReady],onMount:[onMount],onTransitionEnd:[onAnimationFinished],onDisplay:[onDisplay]},style:Object.assign({objectFit:selectedSource?contentFit:imagePlaceholderContentFit},blurRadius?{filter:`blur(${blurRadius}px)`}:{},style),className:className,cachePolicy:cachePolicy,priority:priority,contentPosition:selectedSource?contentPosition:{top:'50%',left:'50%'},hashPlaceholderContentPosition:contentPosition,hashPlaceholderStyle:imageHashStyle,accessibilityLabel:accessibilityLabel,tintColor:tintColor})];return _jsx(View,Object.assign({ref:containerViewRef,dataSet:{expoimage:true},style:[{overflow:'hidden'},style]},props,{children:_jsx(AnimationManager,{transition:transition,recyclingKey:recyclingKey,initial:initialNode,children:currentNode})}));}","map":{"version":3,"names":["React","View","AnimationManager","ImageWrapper","loadStyle","useSourceSelection","jsx","_jsx","onLoadAdapter","onLoad","event","target","source","url","currentSrc","width","naturalWidth","height","naturalHeight","mediaType","cacheType","onErrorAdapter","onError","error","uri","setCssVariablesForFlipTransitions","element","size","style","setProperty","isFlipTransition","transition","effect","getAnimationKey","recyclingKey","join","ExpoImage","_ref","placeholder","contentFit","contentPosition","placeholderContentFit","cachePolicy","responsivePolicy","onLoadEnd","onDisplay","priority","blurRadius","nativeViewRef","accessibilityLabel","tintColor","containerViewRef","props","_objectWithoutPropertiesLoose","_excluded","imagePlaceholderContentFit","imageHashStyle","objectFit","selectedSource","firstPlaceholder","initialNodeAnimationKey","initialNode","onAnimationFinished","className","ref","Object","assign","filter","events","onTransitionEnd","left","top","hashPlaceholderContentPosition","hashPlaceholderStyle","currentNodeAnimationKey","currentNode","onReady","onMount","onErrorInner","dataSet","expoimage","overflow","children","initial"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-image/src/ExpoImage.web.tsx"],"sourcesContent":["import React from 'react';\n// TODO(@kitten): We shouldn't be importing all of react-native-web or rely on it for a web module in this way optimally\nimport { View } from 'react-native-web';\n\nimport type { ImageNativeProps, ImageSource, ImageLoadEventData, ImageRef } from './Image.types';\nimport AnimationManager, { AnimationManagerNode } from './web/AnimationManager';\nimport ImageWrapper from './web/ImageWrapper';\nimport loadStyle from './web/imageStyles';\nimport useSourceSelection from './web/useSourceSelection';\n\nloadStyle();\n\nfunction onLoadAdapter(onLoad?: (event: ImageLoadEventData) => void) {\n  return (event: React.SyntheticEvent<HTMLImageElement, Event>) => {\n    const target = event.target as HTMLImageElement;\n    onLoad?.({\n      source: {\n        url: target.currentSrc,\n        width: target.naturalWidth,\n        height: target.naturalHeight,\n        mediaType: null,\n      },\n      cacheType: 'none',\n    });\n  };\n}\n\nfunction onErrorAdapter(onError?: { (event: { error: string }): void }) {\n  return ({ source }: { source?: ImageSource | null }) => {\n    onError?.({\n      error: `Failed to load image from url: ${source?.uri}`,\n    });\n  };\n}\n\n// Used for flip transitions to mimic native animations\nfunction setCssVariablesForFlipTransitions(element: HTMLElement, size: DOMRect) {\n  element?.style.setProperty('--expo-image-width', `${size.width}px`);\n  element?.style.setProperty('--expo-image-height', `${size.height}px`);\n}\n\nfunction isFlipTransition(transition: ImageNativeProps['transition']) {\n  return (\n    transition?.effect === 'flip-from-bottom' ||\n    transition?.effect === 'flip-from-top' ||\n    transition?.effect === 'flip-from-left' ||\n    transition?.effect === 'flip-from-right'\n  );\n}\n\nfunction getAnimationKey(\n  source: ImageSource | ImageRef | undefined,\n  recyclingKey?: string | null\n): string {\n  const uri = (source && 'uri' in source && source.uri) || '';\n  return recyclingKey ? [recyclingKey, uri].join('-') : uri;\n}\n\nexport default function ExpoImage({\n  source,\n  placeholder,\n  contentFit,\n  contentPosition,\n  placeholderContentFit,\n  cachePolicy,\n  onLoad,\n  transition,\n  onError,\n  responsivePolicy,\n  onLoadEnd,\n  onDisplay,\n  priority,\n  blurRadius,\n  recyclingKey,\n  style,\n  nativeViewRef,\n  accessibilityLabel,\n  tintColor,\n  containerViewRef,\n  ...props\n}: ImageNativeProps) {\n  const imagePlaceholderContentFit = placeholderContentFit || 'scale-down';\n  const imageHashStyle = {\n    objectFit: placeholderContentFit || contentFit,\n  };\n  const selectedSource = useSourceSelection(\n    source,\n    responsivePolicy,\n    // TODO(@vonovak): this cast is a workaround\n    containerViewRef as React.RefObject<HTMLDivElement | null>,\n    isFlipTransition(transition) ? setCssVariablesForFlipTransitions : null\n  );\n\n  // TODO(@kitten): This should narrow before accessing `placeholder?.[0]`\n  const firstPlaceholder = (placeholder as (typeof placeholder & ImageSource[]) | undefined)?.[0];\n  const initialNodeAnimationKey = getAnimationKey(firstPlaceholder, recyclingKey);\n  const initialNode: AnimationManagerNode | null = firstPlaceholder?.uri\n    ? [\n        initialNodeAnimationKey,\n        ({ onAnimationFinished }) =>\n          (className, style) => (\n            <ImageWrapper\n              ref={nativeViewRef as React.Ref<HTMLImageElement> | undefined}\n              source={firstPlaceholder}\n              style={{\n                objectFit: imagePlaceholderContentFit,\n                ...(blurRadius ? { filter: `blur(${blurRadius}px)` } : {}),\n                ...style,\n              }}\n              className={className}\n              events={{\n                onTransitionEnd: [onAnimationFinished],\n              }}\n              contentPosition={{ left: '50%', top: '50%' }}\n              hashPlaceholderContentPosition={contentPosition}\n              hashPlaceholderStyle={imageHashStyle}\n              accessibilityLabel={accessibilityLabel}\n              cachePolicy={cachePolicy}\n              priority={priority}\n              tintColor={tintColor}\n            />\n          ),\n      ]\n    : null;\n\n  // @ts-expect-error: TODO(@kitten): This was implicitly cast to `any`, but with correct types this is now a mismatch\n  const currentNodeAnimationKey = getAnimationKey(selectedSource ?? firstPlaceholder, recyclingKey);\n  const currentNode: AnimationManagerNode = [\n    currentNodeAnimationKey,\n    ({ onAnimationFinished, onReady, onMount, onError: onErrorInner }) =>\n      (className, style) => (\n        <ImageWrapper\n          ref={nativeViewRef as React.Ref<HTMLImageElement> | undefined}\n          // @ts-expect-error: TODO(@kitten): This was implicitly cast to `any`, but with correct types this is now a mismatch\n          source={selectedSource || firstPlaceholder}\n          events={{\n            onError: [onErrorAdapter(onError), onLoadEnd, onErrorInner],\n            onLoad: [onLoadAdapter(onLoad), onLoadEnd, onReady],\n            onMount: [onMount],\n            onTransitionEnd: [onAnimationFinished],\n            onDisplay: [onDisplay],\n          }}\n          style={{\n            objectFit: selectedSource ? contentFit : imagePlaceholderContentFit,\n            ...(blurRadius ? { filter: `blur(${blurRadius}px)` } : {}),\n            ...style,\n          }}\n          className={className}\n          cachePolicy={cachePolicy}\n          priority={priority}\n          contentPosition={selectedSource ? contentPosition : { top: '50%', left: '50%' }}\n          hashPlaceholderContentPosition={contentPosition}\n          hashPlaceholderStyle={imageHashStyle}\n          accessibilityLabel={accessibilityLabel}\n          tintColor={tintColor}\n        />\n      ),\n  ];\n  return (\n    <View\n      ref={containerViewRef}\n      // @ts-expect-error: TODO(@kitten): This is related to react-native-web presumably\n      dataSet={{ expoimage: true }}\n      style={[{ overflow: 'hidden' }, style]}\n      {...props}>\n      <AnimationManager transition={transition} recyclingKey={recyclingKey} initial={initialNode}>\n        {currentNode}\n      </AnimationManager>\n    </View>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}