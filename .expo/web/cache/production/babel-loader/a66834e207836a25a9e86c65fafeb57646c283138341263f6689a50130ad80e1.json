{"ast":null,"code":"\"use strict\";import*as React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const MULTIPLE_NAVIGATOR_ERROR=`Another navigator is already registered for this container. You likely have multiple navigators under a single \"NavigationContainer\" or \"Screen\". Make sure each navigator is under a separate \"Screen\" container. See https://reactnavigation.org/docs/nesting-navigators for a guide on nesting.`;export const SingleNavigatorContext=React.createContext(undefined);export function EnsureSingleNavigator({children}){const navigatorKeyRef=React.useRef();const value=React.useMemo(()=>({register(key){const currentKey=navigatorKeyRef.current;if(currentKey!==undefined&&key!==currentKey){throw new Error(MULTIPLE_NAVIGATOR_ERROR);}navigatorKeyRef.current=key;},unregister(key){const currentKey=navigatorKeyRef.current;if(key!==currentKey){return;}navigatorKeyRef.current=undefined;}}),[]);return _jsx(SingleNavigatorContext.Provider,{value:value,children:children});}","map":{"version":3,"names":["React","jsx","_jsx","MULTIPLE_NAVIGATOR_ERROR","SingleNavigatorContext","createContext","undefined","EnsureSingleNavigator","children","navigatorKeyRef","useRef","value","useMemo","register","key","currentKey","current","Error","unregister","Provider"],"sources":["/home/user/rork-vibesync-458/node_modules/@react-navigation/core/src/EnsureSingleNavigator.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst MULTIPLE_NAVIGATOR_ERROR = `Another navigator is already registered for this container. You likely have multiple navigators under a single \"NavigationContainer\" or \"Screen\". Make sure each navigator is under a separate \"Screen\" container. See https://reactnavigation.org/docs/nesting-navigators for a guide on nesting.`;\n\nexport const SingleNavigatorContext = React.createContext<\n  | {\n      register(key: string): void;\n      unregister(key: string): void;\n    }\n  | undefined\n>(undefined);\n\n/**\n * Component which ensures that there's only one navigator nested under it.\n */\nexport function EnsureSingleNavigator({ children }: Props) {\n  const navigatorKeyRef = React.useRef<string | undefined>();\n\n  const value = React.useMemo(\n    () => ({\n      register(key: string) {\n        const currentKey = navigatorKeyRef.current;\n\n        if (currentKey !== undefined && key !== currentKey) {\n          throw new Error(MULTIPLE_NAVIGATOR_ERROR);\n        }\n\n        navigatorKeyRef.current = key;\n      },\n      unregister(key: string) {\n        const currentKey = navigatorKeyRef.current;\n\n        if (key !== currentKey) {\n          return;\n        }\n\n        navigatorKeyRef.current = undefined;\n      },\n    }),\n    []\n  );\n\n  return (\n    <SingleNavigatorContext.Provider value={value}>\n      {children}\n    </SingleNavigatorContext.Provider>\n  );\n}\n"],"mappings":"aAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAM/B,KAAM,CAAAC,wBAAwB,CAAG,oSAAoS,CAErU,MAAO,MAAM,CAAAC,sBAAsB,CAAGJ,KAAK,CAACK,aAAa,CAMvDC,SAAS,CAAC,CAKZ,MAAO,SAAS,CAAAC,qBAAqBA,CAAC,CAAEC,QAAgB,CAAC,CAAE,CACzD,KAAM,CAAAC,eAAe,CAAGT,KAAK,CAACU,MAAM,CAAqB,CAAC,CAE1D,KAAM,CAAAC,KAAK,CAAGX,KAAK,CAACY,OAAO,CACzB,KAAO,CACLC,QAAQA,CAACC,GAAW,CAAE,CACpB,KAAM,CAAAC,UAAU,CAAGN,eAAe,CAACO,OAAO,CAE1C,GAAID,UAAU,GAAKT,SAAS,EAAIQ,GAAG,GAAKC,UAAU,CAAE,CAClD,KAAM,IAAI,CAAAE,KAAK,CAACd,wBAAwB,CAAC,CAC3C,CAEAM,eAAe,CAACO,OAAO,CAAGF,GAAG,CAC/B,CAAC,CACDI,UAAUA,CAACJ,GAAW,CAAE,CACtB,KAAM,CAAAC,UAAU,CAAGN,eAAe,CAACO,OAAO,CAE1C,GAAIF,GAAG,GAAKC,UAAU,CAAE,CACtB,OACF,CAEAN,eAAe,CAACO,OAAO,CAAGV,SAAS,CACrC,CACF,CAAC,CAAC,CACF,EACF,CAAC,CAED,MACE,CAAAJ,IAAA,CAACE,sBAAsB,CAACe,QAAQ,EAACR,KAAK,CAAEA,KAAM,CAAAH,QAAA,CAC3CA,QAAQ,CACsB,CAAC,CAEtC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}