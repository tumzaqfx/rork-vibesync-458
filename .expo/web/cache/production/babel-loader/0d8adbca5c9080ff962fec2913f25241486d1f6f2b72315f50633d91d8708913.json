{"ast":null,"code":"'use strict';import{logger}from\"../logger/index.js\";const _worklet_955947669822_init_data={code:\"function checkIfConfigIsValid_reactNativeReanimated_springUtilsJs1(config){const{logger}=this.__closure;var _config$clamp,_config$clamp2;let errorMessage='';['stiffness','damping','dampingRatio','restDisplacementThreshold','restSpeedThreshold','mass'].forEach(function(prop){const value=config[prop];if(value<=0){errorMessage+=\\\", \\\"+prop+\\\" must be grater than zero but got \\\"+value;}});if(config.duration<0){errorMessage+=\\\", duration can't be negative, got \\\"+config.duration;}if((_config$clamp=config.clamp)!==null&&_config$clamp!==void 0&&_config$clamp.min&&(_config$clamp2=config.clamp)!==null&&_config$clamp2!==void 0&&_config$clamp2.max&&config.clamp.min>config.clamp.max){errorMessage+=\\\", clamp.min should be lower than clamp.max, got clamp: {min: \\\"+config.clamp.min+\\\", max: \\\"+config.clamp.max+\\\"} \\\";}if(errorMessage!==''){logger.warn('Invalid spring config'+errorMessage);}return errorMessage==='';}\"};export const checkIfConfigIsValid=function(){const checkIfConfigIsValid=function(config){let errorMessage='';['stiffness','damping','dampingRatio','restDisplacementThreshold','restSpeedThreshold','mass'].forEach(prop=>{const value=config[prop];if(value<=0){errorMessage+=`, ${prop} must be grater than zero but got ${value}`;}});if(config.duration<0){errorMessage+=`, duration can't be negative, got ${config.duration}`;}if(config.clamp?.min&&config.clamp?.max&&config.clamp.min>config.clamp.max){errorMessage+=`, clamp.min should be lower than clamp.max, got clamp: {min: ${config.clamp.min}, max: ${config.clamp.max}} `;}if(errorMessage!==''){logger.warn('Invalid spring config'+errorMessage);}return errorMessage==='';};checkIfConfigIsValid.__closure={logger};checkIfConfigIsValid.__workletHash=955947669822;checkIfConfigIsValid.__initData=_worklet_955947669822_init_data;return checkIfConfigIsValid;}();const _worklet_15530845334841_init_data={code:\"function bisectRoot_reactNativeReanimated_springUtilsJs2({min:min,max:max,func:func,maxIterations=20}){const ACCURACY=0.00005;let idx=maxIterations;let current=(max+min)/2;while(Math.abs(func(current))>ACCURACY&&idx>0){idx-=1;if(func(current)<0){min=current;}else{max=current;}current=(min+max)/2;}return current;}\"};export const bisectRoot=function(){const bisectRoot=function({min,max,func,maxIterations=20}){const ACCURACY=0.00005;let idx=maxIterations;let current=(max+min)/2;while(Math.abs(func(current))>ACCURACY&&idx>0){idx-=1;if(func(current)<0){min=current;}else{max=current;}current=(min+max)/2;}return current;};bisectRoot.__closure={};bisectRoot.__workletHash=15530845334841;bisectRoot.__initData=_worklet_15530845334841_init_data;return bisectRoot;}();const _worklet_13581944811029_init_data={code:\"function initialCalculations_reactNativeReanimated_springUtilsJs3(mass=0,config){if(config.skipAnimation){return{zeta:0,omega0:0,omega1:0};}if(config.useDuration){const{stiffness:k,dampingRatio:zeta}=config;const omega0=Math.sqrt(k/mass);const omega1=omega0*Math.sqrt(1-zeta**2);return{zeta:zeta,omega0:omega0,omega1:omega1};}else{const{damping:c,mass:m,stiffness:k}=config;const zeta=c/(2*Math.sqrt(k*m));const omega0=Math.sqrt(k/m);const omega1=omega0*Math.sqrt(1-zeta**2);return{zeta:zeta,omega0:omega0,omega1:omega1};}}\"};export const initialCalculations=function(){const initialCalculations=function(mass=0,config){if(config.skipAnimation){return{zeta:0,omega0:0,omega1:0};}if(config.useDuration){const{stiffness:k,dampingRatio:zeta}=config;const omega0=Math.sqrt(k/mass);const omega1=omega0*Math.sqrt(1-zeta**2);return{zeta,omega0,omega1};}else{const{damping:c,mass:m,stiffness:k}=config;const zeta=c/(2*Math.sqrt(k*m));const omega0=Math.sqrt(k/m);const omega1=omega0*Math.sqrt(1-zeta**2);return{zeta,omega0,omega1};}};initialCalculations.__closure={};initialCalculations.__workletHash=13581944811029;initialCalculations.__initData=_worklet_13581944811029_init_data;return initialCalculations;}();const _worklet_14836002195398_init_data={code:\"function scaleZetaToMatchClamps_reactNativeReanimated_springUtilsJs4(animation,clamp){const{zeta:zeta,toValue:toValue,startValue:startValue}=animation;const toValueNum=Number(toValue);if(toValueNum===startValue){return zeta;}const[firstBound,secondBound]=toValueNum-startValue>0?[clamp.min,clamp.max]:[clamp.max,clamp.min];const relativeExtremum1=secondBound!==undefined?Math.abs((secondBound-toValueNum)/(toValueNum-startValue)):undefined;const relativeExtremum2=firstBound!==undefined?Math.abs((firstBound-toValueNum)/(toValueNum-startValue)):undefined;const newZeta1=relativeExtremum1!==undefined?Math.abs(Math.log(relativeExtremum1)/Math.PI):undefined;const newZeta2=relativeExtremum2!==undefined?Math.abs(Math.log(relativeExtremum2)/(2*Math.PI)):undefined;const zetaSatisfyingClamp=[newZeta1,newZeta2].filter(function(x){return x!==undefined;});return Math.max(...zetaSatisfyingClamp,zeta);}\"};export const scaleZetaToMatchClamps=function(){const scaleZetaToMatchClamps=function(animation,clamp){const{zeta,toValue,startValue}=animation;const toValueNum=Number(toValue);if(toValueNum===startValue){return zeta;}const[firstBound,secondBound]=toValueNum-startValue>0?[clamp.min,clamp.max]:[clamp.max,clamp.min];const relativeExtremum1=secondBound!==undefined?Math.abs((secondBound-toValueNum)/(toValueNum-startValue)):undefined;const relativeExtremum2=firstBound!==undefined?Math.abs((firstBound-toValueNum)/(toValueNum-startValue)):undefined;const newZeta1=relativeExtremum1!==undefined?Math.abs(Math.log(relativeExtremum1)/Math.PI):undefined;const newZeta2=relativeExtremum2!==undefined?Math.abs(Math.log(relativeExtremum2)/(2*Math.PI)):undefined;const zetaSatisfyingClamp=[newZeta1,newZeta2].filter(x=>x!==undefined);return Math.max(...zetaSatisfyingClamp,zeta);};scaleZetaToMatchClamps.__closure={};scaleZetaToMatchClamps.__workletHash=14836002195398;scaleZetaToMatchClamps.__initData=_worklet_14836002195398_init_data;return scaleZetaToMatchClamps;}();const _worklet_14781270198466_init_data={code:\"function calculateNewMassToMatchDuration_reactNativeReanimated_springUtilsJs5(x0,config,v0){const{bisectRoot}=this.__closure;if(config.skipAnimation){return 0;}const{stiffness:k,dampingRatio:zeta,restSpeedThreshold:threshold,duration:duration}=config;const durationForMass=function(mass){'worklet';const amplitude=(mass*v0*v0+k*x0*x0)/(Math.exp(1-0.5*zeta)*k);const c=zeta*2*Math.sqrt(k*mass);return 1000*(-2*mass/c)*Math.log(threshold*0.01/amplitude)-duration;};return bisectRoot({min:0,max:100,func:durationForMass});}\"};const _worklet_12856228486829_init_data={code:\"function reactNativeReanimated_springUtilsJs6(mass){const{v0,k,x0,zeta,threshold,duration}=this.__closure;const amplitude=(mass*v0*v0+k*x0*x0)/(Math.exp(1-0.5*zeta)*k);const c=zeta*2*Math.sqrt(k*mass);return 1000*(-2*mass/c)*Math.log(threshold*0.01/amplitude)-duration;}\"};export const calculateNewMassToMatchDuration=function(){const calculateNewMassToMatchDuration=function(x0,config,v0){if(config.skipAnimation){return 0;}const{stiffness:k,dampingRatio:zeta,restSpeedThreshold:threshold,duration}=config;const durationForMass=function(){const reactNativeReanimated_springUtilsJs6=function(mass){const amplitude=(mass*v0*v0+k*x0*x0)/(Math.exp(1-0.5*zeta)*k);const c=zeta*2*Math.sqrt(k*mass);return 1000*(-2*mass/c)*Math.log(threshold*0.01/amplitude)-duration;};reactNativeReanimated_springUtilsJs6.__closure={v0,k,x0,zeta,threshold,duration};reactNativeReanimated_springUtilsJs6.__workletHash=12856228486829;reactNativeReanimated_springUtilsJs6.__initData=_worklet_12856228486829_init_data;return reactNativeReanimated_springUtilsJs6;}();return bisectRoot({min:0,max:100,func:durationForMass});};calculateNewMassToMatchDuration.__closure={bisectRoot};calculateNewMassToMatchDuration.__workletHash=14781270198466;calculateNewMassToMatchDuration.__initData=_worklet_14781270198466_init_data;return calculateNewMassToMatchDuration;}();const _worklet_349985694663_init_data={code:\"function criticallyDampedSpringCalculations_reactNativeReanimated_springUtilsJs7(animation,precalculatedValues){const{toValue:toValue}=animation;const{v0:v0,x0:x0,omega0:omega0,t:t}=precalculatedValues;const criticallyDampedEnvelope=Math.exp(-omega0*t);const criticallyDampedPosition=toValue-criticallyDampedEnvelope*(x0+(v0+omega0*x0)*t);const criticallyDampedVelocity=criticallyDampedEnvelope*(v0*(t*omega0-1)+t*x0*omega0*omega0);return{position:criticallyDampedPosition,velocity:criticallyDampedVelocity};}\"};export const criticallyDampedSpringCalculations=function(){const criticallyDampedSpringCalculations=function(animation,precalculatedValues){const{toValue}=animation;const{v0,x0,omega0,t}=precalculatedValues;const criticallyDampedEnvelope=Math.exp(-omega0*t);const criticallyDampedPosition=toValue-criticallyDampedEnvelope*(x0+(v0+omega0*x0)*t);const criticallyDampedVelocity=criticallyDampedEnvelope*(v0*(t*omega0-1)+t*x0*omega0*omega0);return{position:criticallyDampedPosition,velocity:criticallyDampedVelocity};};criticallyDampedSpringCalculations.__closure={};criticallyDampedSpringCalculations.__workletHash=349985694663;criticallyDampedSpringCalculations.__initData=_worklet_349985694663_init_data;return criticallyDampedSpringCalculations;}();const _worklet_2991431177292_init_data={code:\"function underDampedSpringCalculations_reactNativeReanimated_springUtilsJs8(animation,precalculatedValues){const{toValue:toValue,current:current,velocity:velocity}=animation;const{zeta:zeta,t:t,omega0:omega0,omega1:omega1}=precalculatedValues;const v0=-velocity;const x0=toValue-current;const sin1=Math.sin(omega1*t);const cos1=Math.cos(omega1*t);const underDampedEnvelope=Math.exp(-zeta*omega0*t);const underDampedFrag1=underDampedEnvelope*(sin1*((v0+zeta*omega0*x0)/omega1)+x0*cos1);const underDampedPosition=toValue-underDampedFrag1;const underDampedVelocity=zeta*omega0*underDampedFrag1-underDampedEnvelope*(cos1*(v0+zeta*omega0*x0)-omega1*x0*sin1);return{position:underDampedPosition,velocity:underDampedVelocity};}\"};export const underDampedSpringCalculations=function(){const underDampedSpringCalculations=function(animation,precalculatedValues){const{toValue,current,velocity}=animation;const{zeta,t,omega0,omega1}=precalculatedValues;const v0=-velocity;const x0=toValue-current;const sin1=Math.sin(omega1*t);const cos1=Math.cos(omega1*t);const underDampedEnvelope=Math.exp(-zeta*omega0*t);const underDampedFrag1=underDampedEnvelope*(sin1*((v0+zeta*omega0*x0)/omega1)+x0*cos1);const underDampedPosition=toValue-underDampedFrag1;const underDampedVelocity=zeta*omega0*underDampedFrag1-underDampedEnvelope*(cos1*(v0+zeta*omega0*x0)-omega1*x0*sin1);return{position:underDampedPosition,velocity:underDampedVelocity};};underDampedSpringCalculations.__closure={};underDampedSpringCalculations.__workletHash=2991431177292;underDampedSpringCalculations.__initData=_worklet_2991431177292_init_data;return underDampedSpringCalculations;}();const _worklet_3300350087954_init_data={code:\"function isAnimationTerminatingCalculation_reactNativeReanimated_springUtilsJs9(animation,config){const{toValue:toValue,velocity:velocity,startValue:startValue,current:current}=animation;const isOvershooting=config.overshootClamping?current>toValue&&startValue<toValue||current<toValue&&startValue>toValue:false;const isVelocity=Math.abs(velocity)<config.restSpeedThreshold;const isDisplacement=Math.abs(toValue-current)<config.restDisplacementThreshold;return{isOvershooting:isOvershooting,isVelocity:isVelocity,isDisplacement:isDisplacement};}\"};export const isAnimationTerminatingCalculation=function(){const isAnimationTerminatingCalculation=function(animation,config){const{toValue,velocity,startValue,current}=animation;const isOvershooting=config.overshootClamping?current>toValue&&startValue<toValue||current<toValue&&startValue>toValue:false;const isVelocity=Math.abs(velocity)<config.restSpeedThreshold;const isDisplacement=Math.abs(toValue-current)<config.restDisplacementThreshold;return{isOvershooting,isVelocity,isDisplacement};};isAnimationTerminatingCalculation.__closure={};isAnimationTerminatingCalculation.__workletHash=3300350087954;isAnimationTerminatingCalculation.__initData=_worklet_3300350087954_init_data;return isAnimationTerminatingCalculation;}();","map":{"version":3,"names":["logger","_worklet_955947669822_init_data","code","checkIfConfigIsValid","config","errorMessage","forEach","prop","value","duration","clamp","min","max","warn","__closure","__workletHash","__initData","_worklet_15530845334841_init_data","bisectRoot","func","maxIterations","ACCURACY","idx","current","Math","abs","_worklet_13581944811029_init_data","initialCalculations","mass","skipAnimation","zeta","omega0","omega1","useDuration","stiffness","k","dampingRatio","sqrt","damping","c","m","_worklet_14836002195398_init_data","scaleZetaToMatchClamps","animation","toValue","startValue","toValueNum","Number","firstBound","secondBound","relativeExtremum1","undefined","relativeExtremum2","newZeta1","log","PI","newZeta2","zetaSatisfyingClamp","filter","x","_worklet_14781270198466_init_data","_worklet_12856228486829_init_data","calculateNewMassToMatchDuration","x0","v0","restSpeedThreshold","threshold","durationForMass","reactNativeReanimated_springUtilsJs6","amplitude","exp","_worklet_349985694663_init_data","criticallyDampedSpringCalculations","precalculatedValues","t","criticallyDampedEnvelope","criticallyDampedPosition","criticallyDampedVelocity","position","velocity","_worklet_2991431177292_init_data","underDampedSpringCalculations","sin1","sin","cos1","cos","underDampedEnvelope","underDampedFrag1","underDampedPosition","underDampedVelocity","_worklet_3300350087954_init_data","isAnimationTerminatingCalculation","isOvershooting","overshootClamping","isVelocity","isDisplacement","restDisplacementThreshold"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/animation/springUtils.ts"],"sourcesContent":["'use strict';\nimport type {\n  Animation,\n  AnimatableValue,\n  Timestamp,\n  ReduceMotion,\n} from '../commonTypes';\nimport { logger } from '../logger';\n\n/**\n * Spring animation configuration.\n *\n * @param mass - The weight of the spring. Reducing this value makes the\n *   animation faster. Defaults to 1.\n * @param damping - How quickly a spring slows down. Higher damping means the\n *   spring will come to rest faster. Defaults to 10.\n * @param duration - Length of the animation (in milliseconds). Defaults to\n *   2000.\n * @param dampingRatio - How damped the spring is. Value 1 means the spring is\n *   critically damped, and value `>`1 means the spring is overdamped. Defaults\n *   to 0.5.\n * @param stiffness - How bouncy the spring is. Defaults to 100.\n * @param velocity - Initial velocity applied to the spring equation. Defaults\n *   to 0.\n * @param overshootClamping - Whether a spring can bounce over the `toValue`.\n *   Defaults to false.\n * @param restDisplacementThreshold - The displacement below which the spring\n *   will snap to toValue without further oscillations. Defaults to 0.01.\n * @param restSpeedThreshold - The speed in pixels per second from which the\n *   spring will snap to toValue without further oscillations. Defaults to 2.\n * @param reduceMotion - Determines how the animation responds to the device's\n *   reduced motion accessibility setting. Default to `ReduceMotion.System` -\n *   {@link ReduceMotion}.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/animations/withSpring/#config-\n */\nexport type SpringConfig = {\n  stiffness?: number;\n  overshootClamping?: boolean;\n  restDisplacementThreshold?: number;\n  restSpeedThreshold?: number;\n  velocity?: number;\n  reduceMotion?: ReduceMotion;\n} & (\n  | {\n      mass?: number;\n      damping?: number;\n      duration?: never;\n      dampingRatio?: never;\n      clamp?: never;\n    }\n  | {\n      mass?: never;\n      damping?: never;\n      duration?: number;\n      dampingRatio?: number;\n      clamp?: { min?: number; max?: number };\n    }\n);\n\n// This type contains all the properties from SpringConfig, which are changed to be required,\n// except for optional 'reduceMotion' and 'clamp'\nexport type DefaultSpringConfig = {\n  [K in keyof Required<SpringConfig>]: K extends 'reduceMotion' | 'clamp'\n    ? Required<SpringConfig>[K] | undefined\n    : Required<SpringConfig>[K];\n};\nexport type WithSpringConfig = SpringConfig;\n\nexport interface SpringConfigInner {\n  useDuration: boolean;\n  skipAnimation: boolean;\n}\n\nexport interface SpringAnimation extends Animation<SpringAnimation> {\n  current: AnimatableValue;\n  toValue: AnimatableValue;\n  velocity: number;\n  lastTimestamp: Timestamp;\n  startTimestamp: Timestamp;\n  startValue: number;\n  zeta: number;\n  omega0: number;\n  omega1: number;\n}\n\nexport interface InnerSpringAnimation\n  extends Omit<SpringAnimation, 'toValue' | 'current'> {\n  toValue: number;\n  current: number;\n}\nexport function checkIfConfigIsValid(config: DefaultSpringConfig): boolean {\n  'worklet';\n  let errorMessage = '';\n  (\n    [\n      'stiffness',\n      'damping',\n      'dampingRatio',\n      'restDisplacementThreshold',\n      'restSpeedThreshold',\n      'mass',\n    ] as const\n  ).forEach((prop) => {\n    const value = config[prop];\n    if (value <= 0) {\n      errorMessage += `, ${prop} must be grater than zero but got ${value}`;\n    }\n  });\n\n  if (config.duration < 0) {\n    errorMessage += `, duration can't be negative, got ${config.duration}`;\n  }\n\n  if (\n    config.clamp?.min &&\n    config.clamp?.max &&\n    config.clamp.min > config.clamp.max\n  ) {\n    errorMessage += `, clamp.min should be lower than clamp.max, got clamp: {min: ${config.clamp.min}, max: ${config.clamp.max}} `;\n  }\n\n  if (errorMessage !== '') {\n    logger.warn('Invalid spring config' + errorMessage);\n  }\n\n  return errorMessage === '';\n}\n\n// ts-prune-ignore-next This function is exported to be tested\nexport function bisectRoot({\n  min,\n  max,\n  func,\n  maxIterations = 20,\n}: {\n  min: number;\n  max: number;\n  func: (x: number) => number;\n  maxIterations?: number;\n}) {\n  'worklet';\n  const ACCURACY = 0.00005;\n  let idx = maxIterations;\n  let current = (max + min) / 2;\n  while (Math.abs(func(current)) > ACCURACY && idx > 0) {\n    idx -= 1;\n\n    if (func(current) < 0) {\n      min = current;\n    } else {\n      max = current;\n    }\n    current = (min + max) / 2;\n  }\n  return current;\n}\n\nexport function initialCalculations(\n  mass = 0,\n  config: DefaultSpringConfig & SpringConfigInner\n): {\n  zeta: number;\n  omega0: number;\n  omega1: number;\n} {\n  'worklet';\n\n  if (config.skipAnimation) {\n    return { zeta: 0, omega0: 0, omega1: 0 };\n  }\n\n  if (config.useDuration) {\n    const { stiffness: k, dampingRatio: zeta } = config;\n\n    /**\n     * Omega0 and omega1 denote angular frequency and natural angular frequency,\n     * see this link for formulas:\n     * https://courses.lumenlearning.com/suny-osuniversityphysics/chapter/15-5-damped-oscillations/\n     */\n    const omega0 = Math.sqrt(k / mass);\n    const omega1 = omega0 * Math.sqrt(1 - zeta ** 2);\n\n    return { zeta, omega0, omega1 };\n  } else {\n    const { damping: c, mass: m, stiffness: k } = config;\n\n    const zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n    const omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n    const omega1 = omega0 * Math.sqrt(1 - zeta ** 2); // exponential decay\n\n    return { zeta, omega0, omega1 };\n  }\n}\n\n/**\n * We make an assumption that we can manipulate zeta without changing duration\n * of movement. According to theory this change is small and tests shows that we\n * can indeed ignore it.\n */\nexport function scaleZetaToMatchClamps(\n  animation: SpringAnimation,\n  clamp: { min?: number; max?: number }\n): number {\n  'worklet';\n  const { zeta, toValue, startValue } = animation;\n  const toValueNum = Number(toValue);\n\n  if (toValueNum === startValue) {\n    return zeta;\n  }\n\n  const [firstBound, secondBound] =\n    toValueNum - startValue > 0\n      ? [clamp.min, clamp.max]\n      : [clamp.max, clamp.min];\n\n  /**\n   * The extrema we get from equation below are relative (we obtain a ratio), To\n   * get absolute extrema we convert it as follows:\n   *\n   * AbsoluteExtremum = startValue ± RelativeExtremum * (toValue - startValue)\n   * Where ± denotes:\n   *\n   * - If extremum is over the target\n   * - Otherwise\n   */\n\n  const relativeExtremum1 =\n    secondBound !== undefined\n      ? Math.abs((secondBound - toValueNum) / (toValueNum - startValue))\n      : undefined;\n\n  const relativeExtremum2 =\n    firstBound !== undefined\n      ? Math.abs((firstBound - toValueNum) / (toValueNum - startValue))\n      : undefined;\n\n  /**\n   * Use this formula http://hyperphysics.phy-astr.gsu.edu/hbase/oscda.html to\n   * calculate first two extrema. These extrema are located where cos = +- 1\n   *\n   * Therefore the first two extrema are:\n   *\n   *     Math.exp(-zeta * Math.PI);      (over the target)\n   *     Math.exp(-zeta * 2 * Math.PI);  (before the target)\n   */\n\n  const newZeta1 =\n    relativeExtremum1 !== undefined\n      ? Math.abs(Math.log(relativeExtremum1) / Math.PI)\n      : undefined;\n\n  const newZeta2 =\n    relativeExtremum2 !== undefined\n      ? Math.abs(Math.log(relativeExtremum2) / (2 * Math.PI))\n      : undefined;\n\n  const zetaSatisfyingClamp = [newZeta1, newZeta2].filter(\n    (x: number | undefined): x is number => x !== undefined\n  );\n  // The bigger is zeta the smaller are bounces, we return the biggest one\n  // because it should satisfy all conditions\n  return Math.max(...zetaSatisfyingClamp, zeta);\n}\n\n/** Runs before initial */\nexport function calculateNewMassToMatchDuration(\n  x0: number,\n  config: DefaultSpringConfig & SpringConfigInner,\n  v0: number\n) {\n  'worklet';\n  if (config.skipAnimation) {\n    return 0;\n  }\n\n  /**\n   * Use this formula:\n   * https://phys.libretexts.org/Bookshelves/University_Physics/Book%3A_University_Physics_(OpenStax)/Book%3A_University_Physics_I_-_Mechanics_Sound_Oscillations_and_Waves_(OpenStax)/15%3A_Oscillations/15.06%3A_Damped_Oscillations\n   * to find the asymptote and estimate the damping that gives us the expected\n   * duration\n   *\n   *             ⎛ ⎛ c⎞           ⎞\n   *             ⎜-⎜──⎟ ⋅ duration⎟\n   *             ⎝ ⎝2m⎠           ⎠\n   *        A ⋅ e                   = threshold\n   *\n   *\n   *       Amplitude calculated using \"Conservation of energy\"\n   *                        _________________\n   *                       ╱      2         2\n   *                      ╱ m ⋅ v0  + k ⋅ x0\n   *       amplitude =   ╱  ─────────────────\n   *                   ╲╱           k\n   *\n   *       And replace mass with damping ratio which is provided: m = (c^2)/(4 * k * zeta^2)\n   */\n  const {\n    stiffness: k,\n    dampingRatio: zeta,\n    restSpeedThreshold: threshold,\n    duration,\n  } = config;\n\n  const durationForMass = (mass: number) => {\n    'worklet';\n    const amplitude =\n      (mass * v0 * v0 + k * x0 * x0) / (Math.exp(1 - 0.5 * zeta) * k);\n    const c = zeta * 2 * Math.sqrt(k * mass);\n    return (\n      1000 * ((-2 * mass) / c) * Math.log((threshold * 0.01) / amplitude) -\n      duration\n    );\n  };\n\n  // Bisection turns out to be much faster than Newton's method in our case\n  return bisectRoot({ min: 0, max: 100, func: durationForMass });\n}\n\nexport function criticallyDampedSpringCalculations(\n  animation: InnerSpringAnimation,\n  precalculatedValues: {\n    v0: number;\n    x0: number;\n    omega0: number;\n    t: number;\n  }\n): { position: number; velocity: number } {\n  'worklet';\n  const { toValue } = animation;\n\n  const { v0, x0, omega0, t } = precalculatedValues;\n\n  const criticallyDampedEnvelope = Math.exp(-omega0 * t);\n  const criticallyDampedPosition =\n    toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\n\n  const criticallyDampedVelocity =\n    criticallyDampedEnvelope *\n    (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n\n  return {\n    position: criticallyDampedPosition,\n    velocity: criticallyDampedVelocity,\n  };\n}\n\nexport function underDampedSpringCalculations(\n  animation: InnerSpringAnimation,\n  precalculatedValues: {\n    zeta: number;\n    v0: number;\n    x0: number;\n    omega0: number;\n    omega1: number;\n    t: number;\n  }\n): { position: number; velocity: number } {\n  'worklet';\n  const { toValue, current, velocity } = animation;\n\n  const { zeta, t, omega0, omega1 } = precalculatedValues;\n\n  const v0 = -velocity;\n  const x0 = toValue - current;\n\n  const sin1 = Math.sin(omega1 * t);\n  const cos1 = Math.cos(omega1 * t);\n\n  // under damped\n  const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n  const underDampedFrag1 =\n    underDampedEnvelope *\n    (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n\n  const underDampedPosition = toValue - underDampedFrag1;\n  // This looks crazy -- it's actually just the derivative of the oscillation function\n  const underDampedVelocity =\n    zeta * omega0 * underDampedFrag1 -\n    underDampedEnvelope *\n      (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\n\n  return { position: underDampedPosition, velocity: underDampedVelocity };\n}\n\nexport function isAnimationTerminatingCalculation(\n  animation: InnerSpringAnimation,\n  config: DefaultSpringConfig\n): {\n  isOvershooting: boolean;\n  isVelocity: boolean;\n  isDisplacement: boolean;\n} {\n  'worklet';\n  const { toValue, velocity, startValue, current } = animation;\n\n  const isOvershooting = config.overshootClamping\n    ? (current > toValue && startValue < toValue) ||\n      (current < toValue && startValue > toValue)\n    : false;\n\n  const isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\n  const isDisplacement =\n    Math.abs(toValue - current) < config.restDisplacementThreshold;\n\n  return { isOvershooting, isVelocity, isDisplacement };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}