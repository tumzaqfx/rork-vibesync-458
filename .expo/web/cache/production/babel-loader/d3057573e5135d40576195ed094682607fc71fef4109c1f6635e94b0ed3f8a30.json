{"ast":null,"code":"function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{BaseGesture}from'./gesture';export class LongPressGesture extends BaseGesture{constructor(){super();_defineProperty(this,\"config\",{});this.handlerName='LongPressGestureHandler';this.shouldCancelWhenOutside(true);}minDuration(duration){this.config.minDurationMs=duration;return this;}maxDistance(distance){this.config.maxDist=distance;return this;}numberOfPointers(pointers){this.config.numberOfPointers=pointers;return this;}}","map":{"version":3,"names":["BaseGesture","LongPressGesture","constructor","_defineProperty","handlerName","shouldCancelWhenOutside","minDuration","duration","config","minDurationMs","maxDistance","distance","maxDist","numberOfPointers","pointers"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/longPressGesture.ts"],"sourcesContent":["import { BaseGesture, BaseGestureConfig } from './gesture';\nimport { LongPressGestureConfig } from '../LongPressGestureHandler';\nimport type { LongPressGestureHandlerEventPayload } from '../GestureHandlerEventPayload';\n\nexport class LongPressGesture extends BaseGesture<LongPressGestureHandlerEventPayload> {\n  public config: BaseGestureConfig & LongPressGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'LongPressGestureHandler';\n    this.shouldCancelWhenOutside(true);\n  }\n\n  /**\n   * Minimum time, expressed in milliseconds, that a finger must remain pressed on the corresponding view.\n   * The default value is 500.\n   * @param duration\n   */\n  minDuration(duration: number) {\n    this.config.minDurationMs = duration;\n    return this;\n  }\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is allowed to travel during a long press gesture.\n   * @param distance\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/long-press-gesture#maxdistancevalue-number\n   */\n  maxDistance(distance: number) {\n    this.config.maxDist = distance;\n    return this;\n  }\n\n  /**\n   * Determine exact number of points required to handle the long press gesture.\n   * @param pointers\n   */\n  numberOfPointers(pointers: number) {\n    this.config.numberOfPointers = pointers;\n    return this;\n  }\n}\n\nexport type LongPressGestureType = InstanceType<typeof LongPressGesture>;\n"],"mappings":"sLAAA,OAASA,WAAT,KAA+C,WAA/C,CAIA,MAAO,MAAM,CAAAC,gBAAN,QAA+B,CAAAD,WAAiD,CAGrFE,WAAWA,CAAA,CAAG,CACZ,QADYC,eAAA,eAF8C,EAE9C,EAGZ,KAAKC,WAAL,CAAmB,yBAAnB,CACA,KAAKC,uBAAL,CAA6B,IAA7B,EACD,CAODC,WAAWA,CAACC,QAAD,CAAmB,CAC5B,KAAKC,MAAL,CAAYC,aAAZ,CAA4BF,QAA5B,CACA,MAAO,KAAP,CACD,CAODG,WAAWA,CAACC,QAAD,CAAmB,CAC5B,KAAKH,MAAL,CAAYI,OAAZ,CAAsBD,QAAtB,CACA,MAAO,KAAP,CACD,CAMDE,gBAAgBA,CAACC,QAAD,CAAmB,CACjC,KAAKN,MAAL,CAAYK,gBAAZ,CAA+BC,QAA/B,CACA,MAAO,KAAP,CACD,CArCoF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}