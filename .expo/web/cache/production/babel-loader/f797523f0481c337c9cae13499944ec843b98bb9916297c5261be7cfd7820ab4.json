{"ast":null,"code":"import Platform from\"react-native-web/dist/exports/Platform\";import{tagMessage}from'./utils';let useNewWebImplementation=true;let getWasCalled=false;export function enableExperimentalWebImplementation(_shouldEnable=true){console.warn(tagMessage('New web implementation is enabled by default. This function will be removed in Gesture Handler 3.'));}export function enableLegacyWebImplementation(shouldUseLegacyImplementation=true){console.warn(tagMessage('Legacy web implementation is deprecated. This function will be removed in Gesture Handler 3.'));if(false||useNewWebImplementation===!shouldUseLegacyImplementation){return;}if(getWasCalled){console.error('Some parts of this application have already started using the new gesture handler implementation. No changes will be applied. You can try enabling legacy implementation earlier.');return;}useNewWebImplementation=!shouldUseLegacyImplementation;}export function isNewWebImplementationEnabled(){getWasCalled=true;return useNewWebImplementation;}","map":{"version":3,"names":["tagMessage","useNewWebImplementation","getWasCalled","enableExperimentalWebImplementation","_shouldEnable","console","warn","enableLegacyWebImplementation","shouldUseLegacyImplementation","error","isNewWebImplementationEnabled"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-gesture-handler/lib/module/EnableNewWebImplementation.ts"],"sourcesContent":["import { Platform } from 'react-native';\nimport { tagMessage } from './utils';\n\nlet useNewWebImplementation = true;\nlet getWasCalled = false;\n\n/**\n * @deprecated new web implementation is enabled by default. This function will be removed in Gesture Handler 3\n */\nexport function enableExperimentalWebImplementation(\n  _shouldEnable = true\n): void {\n  // NO-OP since the new implementation is now the default\n  console.warn(\n    tagMessage(\n      'New web implementation is enabled by default. This function will be removed in Gesture Handler 3.'\n    )\n  );\n}\n\n/**\n * @deprecated legacy implementation is no longer supported. This function will be removed in Gesture Handler 3\n */\nexport function enableLegacyWebImplementation(\n  shouldUseLegacyImplementation = true\n): void {\n  console.warn(\n    tagMessage(\n      'Legacy web implementation is deprecated. This function will be removed in Gesture Handler 3.'\n    )\n  );\n\n  if (\n    Platform.OS !== 'web' ||\n    useNewWebImplementation === !shouldUseLegacyImplementation\n  ) {\n    return;\n  }\n\n  if (getWasCalled) {\n    console.error(\n      'Some parts of this application have already started using the new gesture handler implementation. No changes will be applied. You can try enabling legacy implementation earlier.'\n    );\n    return;\n  }\n\n  useNewWebImplementation = !shouldUseLegacyImplementation;\n}\n\nexport function isNewWebImplementationEnabled(): boolean {\n  getWasCalled = true;\n  return useNewWebImplementation;\n}\n"],"mappings":"6DACA,OAASA,UAAT,KAA2B,SAA3B,CAEA,GAAI,CAAAC,uBAAuB,CAAG,IAA9B,CACA,GAAI,CAAAC,YAAY,CAAG,KAAnB,CAKA,MAAO,SAAS,CAAAC,mCAATA,CACLC,aAAa,CAAG,IADX,CAEC,CAENC,OAAO,CAACC,IAAR,CACEN,UAAU,CACR,mGADQ,CADZ,EAKD,CAKD,MAAO,SAAS,CAAAO,6BAATA,CACLC,6BAA6B,CAAG,IAD3B,CAEC,CACNH,OAAO,CAACC,IAAR,CACEN,UAAU,CACR,8FADQ,CADZ,EAMA,GACE,OACAC,uBAAuB,GAAK,CAACO,6BAF/B,CAGE,CACA,OACD,CAED,GAAIN,YAAJ,CAAkB,CAChBG,OAAO,CAACI,KAAR,CACE,mLADF,EAGA,OACD,CAEDR,uBAAuB,CAAG,CAACO,6BAA3B,CACD,CAED,MAAO,SAAS,CAAAE,6BAATA,CAAA,CAAkD,CACvDR,YAAY,CAAG,IAAf,CACA,MAAO,CAAAD,uBAAP,CACD","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}