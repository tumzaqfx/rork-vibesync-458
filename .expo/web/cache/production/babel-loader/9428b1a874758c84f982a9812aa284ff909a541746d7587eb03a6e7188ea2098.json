{"ast":null,"code":"import Platform from\"react-native-web/dist/exports/Platform\";import{Buffer}from'buffer';export async function fetchText(uri){if(!uri){return null;}if(uri.startsWith('data:image/svg+xml;utf8')&&false){return dataUriToXml(uri);}else if(uri.startsWith('data:image/svg+xml;base64')){return decodeBase64Image(uri);}else{return fetchUriData(uri);}}const decodeBase64Image=uri=>{const decoded=decodeURIComponent(uri);const splitContent=decoded.split(';')[1].split(',');const dataType=splitContent[0];const content=splitContent.slice(1).join(',');return Buffer.from(content,dataType).toString('utf-8');};function dataUriToXml(uri){try{return decodeURIComponent(uri).split(',').slice(1).join(',');}catch(error){throw new Error(`Decoding ${uri} failed with error: ${error}`);}}async function fetchUriData(uri){const response=await fetch(uri);if(response.ok||response.status===0&&uri.startsWith('file://')){return await response.text();}throw new Error(`Fetching ${uri} failed with status ${response.status}`);}","map":{"version":3,"names":["Buffer","fetchText","uri","startsWith","dataUriToXml","decodeBase64Image","fetchUriData","decoded","decodeURIComponent","splitContent","split","dataType","content","slice","join","from","toString","error","Error","response","fetch","ok","status","text"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-svg/src/utils/fetchData.ts"],"sourcesContent":["import { Platform } from 'react-native';\nimport { Buffer } from 'buffer';\n\nexport async function fetchText(uri?: string): Promise<string | null> {\n  if (!uri) {\n    return null;\n  }\n  if (uri.startsWith('data:image/svg+xml;utf8') && Platform.OS === 'android') {\n    return dataUriToXml(uri);\n  } else if (uri.startsWith('data:image/svg+xml;base64')) {\n    return decodeBase64Image(uri);\n  } else {\n    return fetchUriData(uri);\n  }\n}\n\nconst decodeBase64Image = (uri: string) => {\n  const decoded = decodeURIComponent(uri);\n  const splitContent = decoded.split(';')[1].split(',');\n  const dataType = splitContent[0] as BufferEncoding;\n  const content = splitContent.slice(1).join(',');\n\n  return Buffer.from(content, dataType).toString('utf-8');\n};\n\nfunction dataUriToXml(uri: string): string | null {\n  try {\n    // decode and remove data:image/svg+xml;utf8, prefix\n    return decodeURIComponent(uri).split(',').slice(1).join(',');\n  } catch (error) {\n    throw new Error(`Decoding ${uri} failed with error: ${error}`);\n  }\n}\n\nasync function fetchUriData(uri: string) {\n  const response = await fetch(uri);\n  if (response.ok || (response.status === 0 && uri.startsWith('file://'))) {\n    return await response.text();\n  }\n  throw new Error(`Fetching ${uri} failed with status ${response.status}`);\n}\n"],"mappings":"6DACA,OAASA,MAAM,KAAQ,QAAQ,CAE/B,MAAO,eAAe,CAAAC,SAASA,CAACC,GAAY,CAA0B,CACpE,GAAI,CAACA,GAAG,CAAE,CACR,MAAO,KAAI,CACb,CACA,GAAIA,GAAG,CAACC,UAAU,CAAC,yBAAyB,CAAC,OAA6B,CAAE,CAC1E,MAAO,CAAAC,YAAY,CAACF,GAAG,CAAC,CAC1B,CAAC,IAAM,IAAIA,GAAG,CAACC,UAAU,CAAC,2BAA2B,CAAC,CAAE,CACtD,MAAO,CAAAE,iBAAiB,CAACH,GAAG,CAAC,CAC/B,CAAC,IAAM,CACL,MAAO,CAAAI,YAAY,CAACJ,GAAG,CAAC,CAC1B,CACF,CAEA,KAAM,CAAAG,iBAAiB,CAAIH,GAAW,EAAK,CACzC,KAAM,CAAAK,OAAO,CAAGC,kBAAkB,CAACN,GAAG,CAAC,CACvC,KAAM,CAAAO,YAAY,CAAGF,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CACrD,KAAM,CAAAC,QAAQ,CAAGF,YAAY,CAAC,CAAC,CAAmB,CAClD,KAAM,CAAAG,OAAO,CAAGH,YAAY,CAACI,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAE/C,MAAO,CAAAd,MAAM,CAACe,IAAI,CAACH,OAAO,CAAED,QAAQ,CAAC,CAACK,QAAQ,CAAC,OAAO,CAAC,CACzD,CAAC,CAED,QAAS,CAAAZ,YAAYA,CAACF,GAAW,CAAiB,CAChD,GAAI,CAEF,MAAO,CAAAM,kBAAkB,CAACN,GAAG,CAAC,CAACQ,KAAK,CAAC,GAAG,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAC9D,CAAE,MAAOG,KAAK,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,YAAYhB,GAAG,uBAAuBe,KAAK,EAAE,CAAC,CAChE,CACF,CAEA,cAAe,CAAAX,YAAYA,CAACJ,GAAW,CAAE,CACvC,KAAM,CAAAiB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAClB,GAAG,CAAC,CACjC,GAAIiB,QAAQ,CAACE,EAAE,EAAKF,QAAQ,CAACG,MAAM,GAAK,CAAC,EAAIpB,GAAG,CAACC,UAAU,CAAC,SAAS,CAAE,CAAE,CACvE,MAAO,MAAM,CAAAgB,QAAQ,CAACI,IAAI,CAAC,CAAC,CAC9B,CACA,KAAM,IAAI,CAAAL,KAAK,CAAC,YAAYhB,GAAG,uBAAuBiB,QAAQ,CAACG,MAAM,EAAE,CAAC,CAC1E","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}