{"ast":null,"code":"\"use strict\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"style\"];import{useTheme}from'@react-navigation/native';import NativeText from\"react-native-web/dist/exports/Text\";import{jsx as _jsx}from\"react/jsx-runtime\";export function Text(_ref){let{style}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const{colors,fonts}=useTheme();return _jsx(NativeText,Object.assign({},rest,{style:[{color:colors.text},fonts.regular,style]}));}","map":{"version":3,"names":["useTheme","NativeText","jsx","_jsx","Text","_ref","style","rest","_objectWithoutPropertiesLoose","_excluded","colors","fonts","Object","assign","color","text","regular"],"sources":["/home/user/rork-vibesync-458/node_modules/@react-navigation/elements/src/Text.tsx"],"sourcesContent":["import { useTheme } from '@react-navigation/native';\n// eslint-disable-next-line no-restricted-imports\nimport { Text as NativeText, type TextProps } from 'react-native';\n\nexport function Text({ style, ...rest }: TextProps) {\n  const { colors, fonts } = useTheme();\n\n  return (\n    <NativeText\n      {...rest}\n      style={[{ color: colors.text }, fonts.regular, style]}\n    />\n  );\n}\n"],"mappings":"sIAAA,OAASA,QAAQ,KAAQ,0BAA0B,QAAAC,UAAA,0CAEe,OAAAC,GAAA,IAAAC,IAAA,yBAElE,MAAO,SAAS,CAAAC,IAAIA,CAAAC,IAAA,CAAgC,IAA/B,CAAEC,KAA0B,CAAC,CAAAD,IAAA,CAAjBE,IAAA,CAAAC,6BAAA,CAAAH,IAAA,CAAAI,SAAA,EAC/B,KAAM,CAAEC,MAAM,CAAEC,KAAM,CAAC,CAAGX,QAAQ,CAAC,CAAC,CAEpC,MACE,CAAAG,IAAA,CAACF,UAAU,CAAAW,MAAA,CAAAC,MAAA,IACLN,IAAI,EACRD,KAAK,CAAE,CAAC,CAAEQ,KAAK,CAAEJ,MAAM,CAACK,IAAK,CAAC,CAAEJ,KAAK,CAACK,OAAO,CAAEV,KAAK,GACrD,CAAC,CAEN","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}