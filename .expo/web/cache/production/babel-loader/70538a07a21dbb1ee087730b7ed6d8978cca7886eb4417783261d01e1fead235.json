{"ast":null,"code":"function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{DiagonalDirections,Directions}from'../../Directions';import{MINIMAL_RECOGNIZABLE_MAGNITUDE}from'../constants';export default class Vector{constructor(x,y){_defineProperty(this,\"x\",void 0);_defineProperty(this,\"y\",void 0);_defineProperty(this,\"unitX\",void 0);_defineProperty(this,\"unitY\",void 0);_defineProperty(this,\"_magnitude\",void 0);this.x=x;this.y=y;this._magnitude=Math.hypot(this.x,this.y);const isMagnitudeSufficient=this._magnitude>MINIMAL_RECOGNIZABLE_MAGNITUDE;this.unitX=isMagnitudeSufficient?this.x/this._magnitude:0;this.unitY=isMagnitudeSufficient?this.y/this._magnitude:0;}static fromDirection(direction){var _DirectionToVectorMap;return(_DirectionToVectorMap=DirectionToVectorMappings.get(direction))!==null&&_DirectionToVectorMap!==void 0?_DirectionToVectorMap:new Vector(0,0);}static fromVelocity(tracker,pointerId){const velocity=tracker.getVelocity(pointerId);return new Vector(velocity.x,velocity.y);}get magnitude(){return this._magnitude;}computeSimilarity(vector){return this.unitX*vector.unitX+this.unitY*vector.unitY;}isSimilar(vector,threshold){return this.computeSimilarity(vector)>threshold;}}const DirectionToVectorMappings=new Map([[Directions.LEFT,new Vector(-1,0)],[Directions.RIGHT,new Vector(1,0)],[Directions.UP,new Vector(0,-1)],[Directions.DOWN,new Vector(0,1)],[DiagonalDirections.UP_RIGHT,new Vector(1,-1)],[DiagonalDirections.DOWN_RIGHT,new Vector(1,1)],[DiagonalDirections.UP_LEFT,new Vector(-1,-1)],[DiagonalDirections.DOWN_LEFT,new Vector(-1,1)]]);","map":{"version":3,"names":["DiagonalDirections","Directions","MINIMAL_RECOGNIZABLE_MAGNITUDE","Vector","constructor","x","y","_defineProperty","_magnitude","Math","hypot","isMagnitudeSufficient","unitX","unitY","fromDirection","direction","_DirectionToVectorMap","DirectionToVectorMappings","get","fromVelocity","tracker","pointerId","velocity","getVelocity","magnitude","computeSimilarity","vector","isSimilar","threshold","Map","LEFT","RIGHT","UP","DOWN","UP_RIGHT","DOWN_RIGHT","UP_LEFT","DOWN_LEFT"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-gesture-handler/lib/module/web/tools/Vector.ts"],"sourcesContent":["import { DiagonalDirections, Directions } from '../../Directions';\nimport { MINIMAL_RECOGNIZABLE_MAGNITUDE } from '../constants';\nimport PointerTracker from './PointerTracker';\n\nexport default class Vector {\n  private readonly x;\n  private readonly y;\n  private readonly unitX;\n  private readonly unitY;\n  private readonly _magnitude;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n\n    this._magnitude = Math.hypot(this.x, this.y);\n    const isMagnitudeSufficient =\n      this._magnitude > MINIMAL_RECOGNIZABLE_MAGNITUDE;\n\n    this.unitX = isMagnitudeSufficient ? this.x / this._magnitude : 0;\n    this.unitY = isMagnitudeSufficient ? this.y / this._magnitude : 0;\n  }\n\n  static fromDirection(direction: Directions | DiagonalDirections): Vector {\n    return DirectionToVectorMappings.get(direction) ?? new Vector(0, 0);\n  }\n\n  static fromVelocity(tracker: PointerTracker, pointerId: number) {\n    const velocity = tracker.getVelocity(pointerId);\n    return new Vector(velocity.x, velocity.y);\n  }\n\n  public get magnitude() {\n    return this._magnitude;\n  }\n\n  computeSimilarity(vector: Vector) {\n    return this.unitX * vector.unitX + this.unitY * vector.unitY;\n  }\n\n  isSimilar(vector: Vector, threshold: number) {\n    return this.computeSimilarity(vector) > threshold;\n  }\n}\n\nconst DirectionToVectorMappings = new Map<\n  Directions | DiagonalDirections,\n  Vector\n>([\n  [Directions.LEFT, new Vector(-1, 0)],\n  [Directions.RIGHT, new Vector(1, 0)],\n  [Directions.UP, new Vector(0, -1)],\n  [Directions.DOWN, new Vector(0, 1)],\n\n  [DiagonalDirections.UP_RIGHT, new Vector(1, -1)],\n  [DiagonalDirections.DOWN_RIGHT, new Vector(1, 1)],\n  [DiagonalDirections.UP_LEFT, new Vector(-1, -1)],\n  [DiagonalDirections.DOWN_LEFT, new Vector(-1, 1)],\n]);\n"],"mappings":"sLAAA,OAASA,kBAAT,CAA6BC,UAA7B,KAA+C,kBAA/C,CACA,OAASC,8BAAT,KAA+C,cAA/C,CAGA,cAAe,MAAM,CAAAC,MAAO,CAO1BC,WAAWA,CAACC,CAAD,CAAYC,CAAZ,CAAuB,CAAAC,eAAA,kBAAAA,eAAA,kBAAAA,eAAA,sBAAAA,eAAA,sBAAAA,eAAA,2BAChC,KAAKF,CAAL,CAASA,CAAT,CACA,KAAKC,CAAL,CAASA,CAAT,CAEA,KAAKE,UAAL,CAAkBC,IAAI,CAACC,KAAL,CAAW,KAAKL,CAAhB,CAAmB,KAAKC,CAAxB,CAAlB,CACA,KAAM,CAAAK,qBAAqB,CACzB,KAAKH,UAAL,CAAkBN,8BADpB,CAGA,KAAKU,KAAL,CAAaD,qBAAqB,CAAG,KAAKN,CAAL,CAAS,KAAKG,UAAjB,CAA8B,CAAhE,CACA,KAAKK,KAAL,CAAaF,qBAAqB,CAAG,KAAKL,CAAL,CAAS,KAAKE,UAAjB,CAA8B,CAAhE,CACD,CAEmB,MAAb,CAAAM,aAAaA,CAACC,SAAD,CAAqD,KAAAC,qBAAA,CACvE,OAAAA,qBAAA,CAAOC,yBAAyB,CAACC,GAA1B,CAA8BH,SAA9B,CAAP,UAAAC,qBAAA,UAAAA,qBAAA,CAAmD,GAAI,CAAAb,MAAJ,CAAW,CAAX,CAAc,CAAd,CAAnD,CACD,CAEkB,MAAZ,CAAAgB,YAAYA,CAACC,OAAD,CAA0BC,SAA1B,CAA6C,CAC9D,KAAM,CAAAC,QAAQ,CAAGF,OAAO,CAACG,WAAR,CAAoBF,SAApB,CAAjB,CACA,MAAO,IAAI,CAAAlB,MAAJ,CAAWmB,QAAQ,CAACjB,CAApB,CAAuBiB,QAAQ,CAAChB,CAAhC,CAAP,CACD,CAEmB,GAAT,CAAAkB,SAASA,CAAA,CAAG,CACrB,MAAO,MAAKhB,UAAZ,CACD,CAEDiB,iBAAiBA,CAACC,MAAD,CAAiB,CAChC,MAAO,MAAKd,KAAL,CAAac,MAAM,CAACd,KAApB,CAA4B,KAAKC,KAAL,CAAaa,MAAM,CAACb,KAAvD,CACD,CAEDc,SAASA,CAACD,MAAD,CAAiBE,SAAjB,CAAoC,CAC3C,MAAO,MAAKH,iBAAL,CAAuBC,MAAvB,EAAiCE,SAAxC,CACD,CAtCyB,CAyC5B,KAAM,CAAAX,yBAAyB,CAAG,GAAI,CAAAY,GAAJ,CAGhC,CACA,CAAC5B,UAAU,CAAC6B,IAAZ,CAAkB,GAAI,CAAA3B,MAAJ,CAAW,CAAC,CAAZ,CAAe,CAAf,CAAlB,CADA,CAEA,CAACF,UAAU,CAAC8B,KAAZ,CAAmB,GAAI,CAAA5B,MAAJ,CAAW,CAAX,CAAc,CAAd,CAAnB,CAFA,CAGA,CAACF,UAAU,CAAC+B,EAAZ,CAAgB,GAAI,CAAA7B,MAAJ,CAAW,CAAX,CAAc,CAAC,CAAf,CAAhB,CAHA,CAIA,CAACF,UAAU,CAACgC,IAAZ,CAAkB,GAAI,CAAA9B,MAAJ,CAAW,CAAX,CAAc,CAAd,CAAlB,CAJA,CAMA,CAACH,kBAAkB,CAACkC,QAApB,CAA8B,GAAI,CAAA/B,MAAJ,CAAW,CAAX,CAAc,CAAC,CAAf,CAA9B,CANA,CAOA,CAACH,kBAAkB,CAACmC,UAApB,CAAgC,GAAI,CAAAhC,MAAJ,CAAW,CAAX,CAAc,CAAd,CAAhC,CAPA,CAQA,CAACH,kBAAkB,CAACoC,OAApB,CAA6B,GAAI,CAAAjC,MAAJ,CAAW,CAAC,CAAZ,CAAe,CAAC,CAAhB,CAA7B,CARA,CASA,CAACH,kBAAkB,CAACqC,SAApB,CAA+B,GAAI,CAAAlC,MAAJ,CAAW,CAAC,CAAZ,CAAe,CAAf,CAA/B,CATA,CAHgC,CAAlC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}