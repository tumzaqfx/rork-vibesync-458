{"ast":null,"code":"import AsyncStorage from'@react-native-async-storage/async-storage';const STORAGE_KEY_EVENTS='@vibesync_analytics_events';const STORAGE_KEY_SESSION='@vibesync_analytics_session';const STORAGE_KEY_USER='@vibesync_analytics_user';export class Analytics{static currentSession=null;static userProperties=null;static eventQueue=[];static isInitialized=false;static async initialize(userId){if(this.isInitialized){console.log('[Analytics] Already initialized');return;}try{await this.startSession();if(userId){await this.setUserId(userId);}await this.loadEventQueue();this.isInitialized=true;console.log('[Analytics] Initialized successfully');}catch(error){console.error('[Analytics] Initialization error:',error);}}static async startSession(){try{this.currentSession={sessionId:`session_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,startTime:new Date().toISOString(),screenViews:[],events:[]};await AsyncStorage.setItem(STORAGE_KEY_SESSION,JSON.stringify(this.currentSession));console.log('[Analytics] Session started:',this.currentSession.sessionId);}catch(error){console.error('[Analytics] Error starting session:',error);}}static async endSession(){if(!this.currentSession)return;try{const endTime=new Date().toISOString();const duration=new Date(endTime).getTime()-new Date(this.currentSession.startTime).getTime();this.currentSession.endTime=endTime;this.currentSession.duration=duration;await this.trackEvent('session_end',{sessionId:this.currentSession.sessionId,duration,screenViews:this.currentSession.screenViews.length,events:this.currentSession.events.length});await this.flushEvents();console.log('[Analytics] Session ended:',this.currentSession.sessionId,'Duration:',duration);this.currentSession=null;}catch(error){console.error('[Analytics] Error ending session:',error);}}static async setUserId(userId){try{if(!this.userProperties){this.userProperties={userId};}else{this.userProperties.userId=userId;}await AsyncStorage.setItem(STORAGE_KEY_USER,JSON.stringify(this.userProperties));console.log('[Analytics] User ID set:',userId);}catch(error){console.error('[Analytics] Error setting user ID:',error);}}static async setUserProperties(properties){try{this.userProperties=Object.assign({},this.userProperties,properties);await AsyncStorage.setItem(STORAGE_KEY_USER,JSON.stringify(this.userProperties));console.log('[Analytics] User properties updated');}catch(error){console.error('[Analytics] Error setting user properties:',error);}}static async trackEvent(eventName,properties){try{const event={name:eventName,properties,timestamp:new Date().toISOString(),userId:this.userProperties?.userId,sessionId:this.currentSession?.sessionId};this.eventQueue.push(event);if(this.currentSession){this.currentSession.events.push(event);}console.log('[Analytics] Event tracked:',eventName,properties);if(this.eventQueue.length>=10){await this.flushEvents();}}catch(error){console.error('[Analytics] Error tracking event:',error);}}static async trackScreenView(screenName){if(this.currentSession){this.currentSession.screenViews.push(screenName);}await this.trackEvent('screen_view',{screenName});}static async trackUserAction(action,target,properties){await this.trackEvent('user_action',Object.assign({action,target},properties));}static async trackError(error,context){await this.trackEvent('error',Object.assign({message:error.message,stack:error.stack},context));}static async trackPerformance(metric,value,unit='ms'){await this.trackEvent('performance',{metric,value,unit});}static async loadEventQueue(){try{const stored=await AsyncStorage.getItem(STORAGE_KEY_EVENTS);if(stored){this.eventQueue=JSON.parse(stored);console.log('[Analytics] Loaded event queue:',this.eventQueue.length,'events');}}catch(error){console.error('[Analytics] Error loading event queue:',error);}}static async flushEvents(){if(this.eventQueue.length===0)return;try{console.log('[Analytics] Flushing',this.eventQueue.length,'events');this.eventQueue=[];await AsyncStorage.setItem(STORAGE_KEY_EVENTS,JSON.stringify(this.eventQueue));}catch(error){console.error('[Analytics] Error flushing events:',error);}}static async getSessionData(){return this.currentSession;}static async getUserProperties(){return this.userProperties;}static async clearData(){try{await Promise.all([AsyncStorage.removeItem(STORAGE_KEY_EVENTS),AsyncStorage.removeItem(STORAGE_KEY_SESSION),AsyncStorage.removeItem(STORAGE_KEY_USER)]);this.eventQueue=[];this.currentSession=null;this.userProperties=null;this.isInitialized=false;console.log('[Analytics] Data cleared');}catch(error){console.error('[Analytics] Error clearing data:',error);}}}","map":{"version":3,"names":["AsyncStorage","STORAGE_KEY_EVENTS","STORAGE_KEY_SESSION","STORAGE_KEY_USER","Analytics","currentSession","userProperties","eventQueue","isInitialized","initialize","userId","console","log","startSession","setUserId","loadEventQueue","error","sessionId","Date","now","Math","random","toString","substr","startTime","toISOString","screenViews","events","setItem","JSON","stringify","endSession","endTime","duration","getTime","trackEvent","length","flushEvents","setUserProperties","properties","Object","assign","eventName","event","name","timestamp","push","trackScreenView","screenName","trackUserAction","action","target","trackError","context","message","stack","trackPerformance","metric","value","unit","stored","getItem","parse","getSessionData","getUserProperties","clearData","Promise","all","removeItem"],"sources":["/home/user/rork-vibesync-458/utils/analytics.ts"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\n\nexport interface AnalyticsEvent {\n  name: string;\n  properties?: Record<string, any>;\n  timestamp: string;\n  userId?: string;\n  sessionId?: string;\n}\n\nexport interface UserProperties {\n  userId: string;\n  username?: string;\n  email?: string;\n  createdAt?: string;\n  lastActive?: string;\n  [key: string]: any;\n}\n\nexport interface SessionData {\n  sessionId: string;\n  startTime: string;\n  endTime?: string;\n  duration?: number;\n  screenViews: string[];\n  events: AnalyticsEvent[];\n}\n\nconst STORAGE_KEY_EVENTS = '@vibesync_analytics_events';\nconst STORAGE_KEY_SESSION = '@vibesync_analytics_session';\nconst STORAGE_KEY_USER = '@vibesync_analytics_user';\n\nexport class Analytics {\n  private static currentSession: SessionData | null = null;\n  private static userProperties: UserProperties | null = null;\n  private static eventQueue: AnalyticsEvent[] = [];\n  private static isInitialized = false;\n\n  static async initialize(userId?: string): Promise<void> {\n    if (this.isInitialized) {\n      console.log('[Analytics] Already initialized');\n      return;\n    }\n\n    try {\n      await this.startSession();\n      \n      if (userId) {\n        await this.setUserId(userId);\n      }\n\n      await this.loadEventQueue();\n      \n      this.isInitialized = true;\n      console.log('[Analytics] Initialized successfully');\n    } catch (error) {\n      console.error('[Analytics] Initialization error:', error);\n    }\n  }\n\n  static async startSession(): Promise<void> {\n    try {\n      this.currentSession = {\n        sessionId: `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        startTime: new Date().toISOString(),\n        screenViews: [],\n        events: [],\n      };\n\n      await AsyncStorage.setItem(STORAGE_KEY_SESSION, JSON.stringify(this.currentSession));\n      console.log('[Analytics] Session started:', this.currentSession.sessionId);\n    } catch (error) {\n      console.error('[Analytics] Error starting session:', error);\n    }\n  }\n\n  static async endSession(): Promise<void> {\n    if (!this.currentSession) return;\n\n    try {\n      const endTime = new Date().toISOString();\n      const duration = new Date(endTime).getTime() - new Date(this.currentSession.startTime).getTime();\n\n      this.currentSession.endTime = endTime;\n      this.currentSession.duration = duration;\n\n      await this.trackEvent('session_end', {\n        sessionId: this.currentSession.sessionId,\n        duration,\n        screenViews: this.currentSession.screenViews.length,\n        events: this.currentSession.events.length,\n      });\n\n      await this.flushEvents();\n      \n      console.log('[Analytics] Session ended:', this.currentSession.sessionId, 'Duration:', duration);\n      this.currentSession = null;\n    } catch (error) {\n      console.error('[Analytics] Error ending session:', error);\n    }\n  }\n\n  static async setUserId(userId: string): Promise<void> {\n    try {\n      if (!this.userProperties) {\n        this.userProperties = { userId };\n      } else {\n        this.userProperties.userId = userId;\n      }\n\n      await AsyncStorage.setItem(STORAGE_KEY_USER, JSON.stringify(this.userProperties));\n      console.log('[Analytics] User ID set:', userId);\n    } catch (error) {\n      console.error('[Analytics] Error setting user ID:', error);\n    }\n  }\n\n  static async setUserProperties(properties: Partial<UserProperties>): Promise<void> {\n    try {\n      this.userProperties = {\n        ...this.userProperties,\n        ...properties,\n      } as UserProperties;\n\n      await AsyncStorage.setItem(STORAGE_KEY_USER, JSON.stringify(this.userProperties));\n      console.log('[Analytics] User properties updated');\n    } catch (error) {\n      console.error('[Analytics] Error setting user properties:', error);\n    }\n  }\n\n  static async trackEvent(eventName: string, properties?: Record<string, any>): Promise<void> {\n    try {\n      const event: AnalyticsEvent = {\n        name: eventName,\n        properties,\n        timestamp: new Date().toISOString(),\n        userId: this.userProperties?.userId,\n        sessionId: this.currentSession?.sessionId,\n      };\n\n      this.eventQueue.push(event);\n\n      if (this.currentSession) {\n        this.currentSession.events.push(event);\n      }\n\n      console.log('[Analytics] Event tracked:', eventName, properties);\n\n      if (this.eventQueue.length >= 10) {\n        await this.flushEvents();\n      }\n    } catch (error) {\n      console.error('[Analytics] Error tracking event:', error);\n    }\n  }\n\n  static async trackScreenView(screenName: string): Promise<void> {\n    if (this.currentSession) {\n      this.currentSession.screenViews.push(screenName);\n    }\n\n    await this.trackEvent('screen_view', { screenName });\n  }\n\n  static async trackUserAction(action: string, target: string, properties?: Record<string, any>): Promise<void> {\n    await this.trackEvent('user_action', {\n      action,\n      target,\n      ...properties,\n    });\n  }\n\n  static async trackError(error: Error, context?: Record<string, any>): Promise<void> {\n    await this.trackEvent('error', {\n      message: error.message,\n      stack: error.stack,\n      ...context,\n    });\n  }\n\n  static async trackPerformance(metric: string, value: number, unit: string = 'ms'): Promise<void> {\n    await this.trackEvent('performance', {\n      metric,\n      value,\n      unit,\n    });\n  }\n\n  private static async loadEventQueue(): Promise<void> {\n    try {\n      const stored = await AsyncStorage.getItem(STORAGE_KEY_EVENTS);\n      if (stored) {\n        this.eventQueue = JSON.parse(stored);\n        console.log('[Analytics] Loaded event queue:', this.eventQueue.length, 'events');\n      }\n    } catch (error) {\n      console.error('[Analytics] Error loading event queue:', error);\n    }\n  }\n\n  private static async flushEvents(): Promise<void> {\n    if (this.eventQueue.length === 0) return;\n\n    try {\n      console.log('[Analytics] Flushing', this.eventQueue.length, 'events');\n      \n      this.eventQueue = [];\n      await AsyncStorage.setItem(STORAGE_KEY_EVENTS, JSON.stringify(this.eventQueue));\n    } catch (error) {\n      console.error('[Analytics] Error flushing events:', error);\n    }\n  }\n\n  static async getSessionData(): Promise<SessionData | null> {\n    return this.currentSession;\n  }\n\n  static async getUserProperties(): Promise<UserProperties | null> {\n    return this.userProperties;\n  }\n\n  static async clearData(): Promise<void> {\n    try {\n      await Promise.all([\n        AsyncStorage.removeItem(STORAGE_KEY_EVENTS),\n        AsyncStorage.removeItem(STORAGE_KEY_SESSION),\n        AsyncStorage.removeItem(STORAGE_KEY_USER),\n      ]);\n\n      this.eventQueue = [];\n      this.currentSession = null;\n      this.userProperties = null;\n      this.isInitialized = false;\n\n      console.log('[Analytics] Data cleared');\n    } catch (error) {\n      console.error('[Analytics] Error clearing data:', error);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}