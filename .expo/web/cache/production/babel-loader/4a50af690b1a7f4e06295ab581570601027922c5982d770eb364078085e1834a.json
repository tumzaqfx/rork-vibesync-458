{"ast":null,"code":"import{Platform}from'expo-modules-core';import CameraManager from'../ExpoCameraManager';export const ConversionTables={type:CameraManager.Type,flash:CameraManager.FlashMode};export function convertNativeProps(props){if(!props||typeof props!=='object'){return{};}const nativeProps={};for(const[key,value]of Object.entries(props)){const prop=key;if(typeof value==='string'&&ConversionTables[prop]){nativeProps[key]=ConversionTables[prop][value];}else{nativeProps[key]=value;}}return nativeProps;}export function ensureNativeProps(props){const newProps=convertNativeProps(props);newProps.barcodeScannerEnabled=!!props?.onBarcodeScanned;newProps.flashMode=props?.flash??'off';newProps.mute=props?.mute??false;newProps.autoFocus=props?.autofocus??'off';if(false){delete newProps.poster;}return newProps;}","map":{"version":3,"names":["Platform","CameraManager","ConversionTables","type","Type","flash","FlashMode","convertNativeProps","props","nativeProps","key","value","Object","entries","prop","ensureNativeProps","newProps","barcodeScannerEnabled","onBarcodeScanned","flashMode","mute","autoFocus","autofocus","poster"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-camera/src/utils/props.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\n\nimport { CameraNativeProps, CameraType, FlashMode, CameraViewProps } from '../Camera.types';\nimport CameraManager from '../ExpoCameraManager';\n\n// Values under keys from this object will be transformed to native options\nexport const ConversionTables: {\n  type: Record<keyof CameraType, CameraNativeProps['facing']>;\n  flash: Record<keyof FlashMode, CameraNativeProps['flashMode']>;\n  [prop: string]: unknown;\n} = {\n  type: CameraManager.Type,\n  flash: CameraManager.FlashMode,\n};\n\nexport function convertNativeProps(props?: CameraViewProps): CameraNativeProps {\n  if (!props || typeof props !== 'object') {\n    return {};\n  }\n\n  const nativeProps: CameraNativeProps = {};\n\n  for (const [key, value] of Object.entries(props)) {\n    const prop = key as 'type' | 'flash' | string;\n    if (typeof value === 'string' && ConversionTables[prop]) {\n      nativeProps[key as keyof CameraNativeProps] =\n        ConversionTables[prop as 'type' | 'flash'][value as any];\n    } else {\n      nativeProps[key as keyof CameraNativeProps] = value;\n    }\n  }\n\n  return nativeProps;\n}\n\nexport function ensureNativeProps(props?: CameraViewProps): CameraNativeProps {\n  const newProps = convertNativeProps(props);\n\n  newProps.barcodeScannerEnabled = !!props?.onBarcodeScanned;\n  newProps.flashMode = props?.flash ?? 'off';\n  newProps.mute = props?.mute ?? false;\n  newProps.autoFocus = props?.autofocus ?? 'off';\n\n  if (Platform.OS !== 'web') {\n    delete newProps.poster;\n  }\n\n  return newProps;\n}\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,mBAAmB,CAG5C,MAAO,CAAAC,aAAa,KAAM,sBAAsB,CAGhD,MAAO,MAAM,CAAAC,gBAAgB,CAIzB,CACFC,IAAI,CAAEF,aAAa,CAACG,IAAI,CACxBC,KAAK,CAAEJ,aAAa,CAACK,S,CACtB,CAED,MAAM,SAAU,CAAAC,kBAAkBA,CAACC,KAAuB,EACxD,GAAI,CAACA,KAAK,EAAI,MAAO,CAAAA,KAAK,GAAK,QAAQ,CAAE,CACvC,MAAO,EAAE,CACX,CAEA,KAAM,CAAAC,WAAW,CAAsB,EAAE,CAEzC,IAAK,KAAM,CAACC,GAAG,CAAEC,KAAK,CAAC,EAAI,CAAAC,MAAM,CAACC,OAAO,CAACL,KAAK,CAAC,CAAE,CAChD,KAAM,CAAAM,IAAI,CAAGJ,GAAgC,CAC7C,GAAI,MAAO,CAAAC,KAAK,GAAK,QAAQ,EAAIT,gBAAgB,CAACY,IAAI,CAAC,CAAE,CACvDL,WAAW,CAACC,GAA8B,CAAC,CACzCR,gBAAgB,CAACY,IAAwB,CAAC,CAACH,KAAY,CAAC,CAC5D,CAAC,IAAM,CACLF,WAAW,CAACC,GAA8B,CAAC,CAAGC,KAAK,CACrD,CACF,CAEA,MAAO,CAAAF,WAAW,CACpB,CAEA,MAAM,SAAU,CAAAM,iBAAiBA,CAACP,KAAuB,EACvD,KAAM,CAAAQ,QAAQ,CAAGT,kBAAkB,CAACC,KAAK,CAAC,CAE1CQ,QAAQ,CAACC,qBAAqB,CAAG,CAAC,CAACT,KAAK,EAAEU,gBAAgB,CAC1DF,QAAQ,CAACG,SAAS,CAAGX,KAAK,EAAEH,KAAK,EAAI,KAAK,CAC1CW,QAAQ,CAACI,IAAI,CAAGZ,KAAK,EAAEY,IAAI,EAAI,KAAK,CACpCJ,QAAQ,CAACK,SAAS,CAAGb,KAAK,EAAEc,SAAS,EAAI,KAAK,CAE9C,SAA2B,CACzB,MAAO,CAAAN,QAAQ,CAACO,MAAM,CACxB,CAEA,MAAO,CAAAP,QAAQ,CACjB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}