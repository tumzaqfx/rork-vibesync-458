{"ast":null,"code":"'use strict';export const WebEasings={linear:[0,0,1,1],ease:[0.42,0,1,1],quad:[0.11,0,0.5,0],cubic:[0.32,0,0.67,0],sin:[0.12,0,0.39,0],circle:[0.55,0,1,0.45],exp:[0.7,0,0.84,0]};export function getEasingByName(easingName){return`cubic-bezier(${WebEasings[easingName].toString()})`;}","map":{"version":3,"names":["WebEasings","linear","ease","quad","cubic","sin","circle","exp","getEasingByName","easingName","toString"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/layoutReanimation/web/Easing.web.ts"],"sourcesContent":["'use strict';\n\n// Those are the easings that can be implemented using Bezier curves.\n// Others should be done as CSS animations\nexport const WebEasings = {\n  linear: [0, 0, 1, 1],\n  ease: [0.42, 0, 1, 1],\n  quad: [0.11, 0, 0.5, 0],\n  cubic: [0.32, 0, 0.67, 0],\n  sin: [0.12, 0, 0.39, 0],\n  circle: [0.55, 0, 1, 0.45],\n  exp: [0.7, 0, 0.84, 0],\n};\n\nexport function getEasingByName(easingName: WebEasingsNames) {\n  return `cubic-bezier(${WebEasings[easingName].toString()})`;\n}\n\nexport type WebEasingsNames = keyof typeof WebEasings;\n"],"mappings":"AAAA,YAAY,CAIZ,MAAO,MAAM,CAAAA,UAAU,CAAG,CACxBC,MAAM,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACpBC,IAAI,CAAE,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACrBC,IAAI,CAAE,CAAC,IAAI,CAAE,CAAC,CAAE,GAAG,CAAE,CAAC,CAAC,CACvBC,KAAK,CAAE,CAAC,IAAI,CAAE,CAAC,CAAE,IAAI,CAAE,CAAC,CAAC,CACzBC,GAAG,CAAE,CAAC,IAAI,CAAE,CAAC,CAAE,IAAI,CAAE,CAAC,CAAC,CACvBC,MAAM,CAAE,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC,CAAE,IAAI,CAAC,CAC1BC,GAAG,CAAE,CAAC,GAAG,CAAE,CAAC,CAAE,IAAI,CAAE,CAAC,CACvB,CAAC,CAED,MAAO,SAAS,CAAAC,eAAeA,CAACC,UAA2B,CAAE,CAC3D,MAAO,gBAAgBT,UAAU,CAACS,UAAU,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG,CAC7D","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}