{"ast":null,"code":"import{isTestEnv}from'../utils';export const handlerIDToTag={};const gestures=new Map();const oldHandlers=new Map();const testIDs=new Map();export function registerHandler(handlerTag,handler,testID){gestures.set(handlerTag,handler);if(isTestEnv()&&testID){testIDs.set(testID,handlerTag);}}export function registerOldGestureHandler(handlerTag,handler){oldHandlers.set(handlerTag,handler);}export function unregisterOldGestureHandler(handlerTag){oldHandlers.delete(handlerTag);}export function unregisterHandler(handlerTag,testID){gestures.delete(handlerTag);if(isTestEnv()&&testID){testIDs.delete(testID);}}export function findHandler(handlerTag){return gestures.get(handlerTag);}export function findOldGestureHandler(handlerTag){return oldHandlers.get(handlerTag);}export function findHandlerByTestID(testID){const handlerTag=testIDs.get(testID);if(handlerTag!==undefined){var _findHandler;return(_findHandler=findHandler(handlerTag))!==null&&_findHandler!==void 0?_findHandler:null;}return null;}","map":{"version":3,"names":["isTestEnv","handlerIDToTag","gestures","Map","oldHandlers","testIDs","registerHandler","handlerTag","handler","testID","set","registerOldGestureHandler","unregisterOldGestureHandler","delete","unregisterHandler","findHandler","get","findOldGestureHandler","findHandlerByTestID","undefined","_findHandler"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-gesture-handler/lib/module/handlers/handlersRegistry.ts"],"sourcesContent":["import { isTestEnv } from '../utils';\nimport { GestureType } from './gestures/gesture';\nimport { GestureEvent, HandlerStateChangeEvent } from './gestureHandlerCommon';\n\nexport const handlerIDToTag: Record<string, number> = {};\nconst gestures = new Map<number, GestureType>();\nconst oldHandlers = new Map<number, GestureHandlerCallbacks>();\nconst testIDs = new Map<string, number>();\n\nexport function registerHandler(\n  handlerTag: number,\n  handler: GestureType,\n  testID?: string\n) {\n  gestures.set(handlerTag, handler);\n  if (isTestEnv() && testID) {\n    testIDs.set(testID, handlerTag);\n  }\n}\n\nexport function registerOldGestureHandler(\n  handlerTag: number,\n  handler: GestureHandlerCallbacks\n) {\n  oldHandlers.set(handlerTag, handler);\n}\n\nexport function unregisterOldGestureHandler(handlerTag: number) {\n  oldHandlers.delete(handlerTag);\n}\n\nexport function unregisterHandler(handlerTag: number, testID?: string) {\n  gestures.delete(handlerTag);\n  if (isTestEnv() && testID) {\n    testIDs.delete(testID);\n  }\n}\n\nexport function findHandler(handlerTag: number) {\n  return gestures.get(handlerTag);\n}\n\nexport function findOldGestureHandler(handlerTag: number) {\n  return oldHandlers.get(handlerTag);\n}\n\nexport function findHandlerByTestID(testID: string) {\n  const handlerTag = testIDs.get(testID);\n  if (handlerTag !== undefined) {\n    return findHandler(handlerTag) ?? null;\n  }\n  return null;\n}\n\nexport interface GestureHandlerCallbacks {\n  onGestureEvent: (event: GestureEvent<any>) => void;\n  onGestureStateChange: (event: HandlerStateChangeEvent<any>) => void;\n}\n"],"mappings":"AAAA,OAASA,SAAT,KAA0B,UAA1B,CAIA,MAAO,MAAM,CAAAC,cAAsC,CAAG,EAA/C,CACP,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,GAAJ,EAAjB,CACA,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAD,GAAJ,EAApB,CACA,KAAM,CAAAE,OAAO,CAAG,GAAI,CAAAF,GAAJ,EAAhB,CAEA,MAAO,SAAS,CAAAG,eAATA,CACLC,UADK,CAELC,OAFK,CAGLC,MAHK,CAIL,CACAP,QAAQ,CAACQ,GAAT,CAAaH,UAAb,CAAyBC,OAAzB,EACA,GAAIR,SAAS,IAAMS,MAAnB,CAA2B,CACzBJ,OAAO,CAACK,GAAR,CAAYD,MAAZ,CAAoBF,UAApB,EACD,CACF,CAED,MAAO,SAAS,CAAAI,yBAATA,CACLJ,UADK,CAELC,OAFK,CAGL,CACAJ,WAAW,CAACM,GAAZ,CAAgBH,UAAhB,CAA4BC,OAA5B,EACD,CAED,MAAO,SAAS,CAAAI,2BAATA,CAAqCL,UAArC,CAAyD,CAC9DH,WAAW,CAACS,MAAZ,CAAmBN,UAAnB,EACD,CAED,MAAO,SAAS,CAAAO,iBAATA,CAA2BP,UAA3B,CAA+CE,MAA/C,CAAgE,CACrEP,QAAQ,CAACW,MAAT,CAAgBN,UAAhB,EACA,GAAIP,SAAS,IAAMS,MAAnB,CAA2B,CACzBJ,OAAO,CAACQ,MAAR,CAAeJ,MAAf,EACD,CACF,CAED,MAAO,SAAS,CAAAM,WAATA,CAAqBR,UAArB,CAAyC,CAC9C,MAAO,CAAAL,QAAQ,CAACc,GAAT,CAAaT,UAAb,CAAP,CACD,CAED,MAAO,SAAS,CAAAU,qBAATA,CAA+BV,UAA/B,CAAmD,CACxD,MAAO,CAAAH,WAAW,CAACY,GAAZ,CAAgBT,UAAhB,CAAP,CACD,CAED,MAAO,SAAS,CAAAW,mBAATA,CAA6BT,MAA7B,CAA6C,CAClD,KAAM,CAAAF,UAAU,CAAGF,OAAO,CAACW,GAAR,CAAYP,MAAZ,CAAnB,CACA,GAAIF,UAAU,GAAKY,SAAnB,CAA8B,KAAAC,YAAA,CAC5B,OAAAA,YAAA,CAAOL,WAAW,CAACR,UAAD,CAAlB,UAAAa,YAAA,UAAAA,YAAA,CAAkC,IAAlC,CACD,CACD,MAAO,KAAP,CACD","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}