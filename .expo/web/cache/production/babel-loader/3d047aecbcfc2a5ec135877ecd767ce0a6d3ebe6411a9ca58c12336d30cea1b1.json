{"ast":null,"code":"\"use strict\";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||(\"get\"in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function(){return m[k];}};}Object.defineProperty(o,k2,desc);}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,\"default\",{enumerable:true,value:v});}:function(o,v){o[\"default\"]=v;});var __importStar=this&&this.__importStar||function(){var ownKeys=function(o){ownKeys=Object.getOwnPropertyNames||function(o){var ar=[];for(var k in o)if(Object.prototype.hasOwnProperty.call(o,k))ar[ar.length]=k;return ar;};return ownKeys(o);};return function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k=ownKeys(mod),i=0;i<k.length;i++)if(k[i]!==\"default\")__createBinding(result,mod,k[i]);__setModuleDefault(result,mod);return result;};}();Object.defineProperty(exports,\"__esModule\",{value:true});exports.applyRedirects=applyRedirects;exports.getRedirectModule=getRedirectModule;exports.convertRedirect=convertRedirect;exports.mergeVariablesWithPath=mergeVariablesWithPath;const Linking=__importStar(require(\"expo-linking\"));const react_1=require(\"react\");const getStateFromPath_forks_1=require(\"./fork/getStateFromPath-forks\");const matchers_1=require(\"./matchers\");function applyRedirects(url,redirects){if(typeof url!=='string'||!redirects){return url;}const nextUrl=(0,getStateFromPath_forks_1.cleanPath)(url);const redirect=redirects.find(([regex])=>regex.test(nextUrl));if(!redirect){return url;}if(redirect[2]){let href=redirect[1].destination;if(href.startsWith('//')&&false){href=`https:${href}`;}Linking.openURL(href);return href;}return applyRedirects(convertRedirect(url,redirect[1]),redirects);}function getRedirectModule(route){return{default:function RedirectComponent(){const params=require('./hooks').useGlobalSearchParams();let href=route.split('/').map(part=>{const match=(0,matchers_1.matchDynamicName)(part)||(0,matchers_1.matchDeepDynamicRouteName)(part);if(!match){return part;}const param=params[match];delete params[match];return param;}).filter(Boolean).join('/');const queryString=new URLSearchParams(params).toString();if(queryString){href+=`?${queryString}`;}return(0,react_1.createElement)(require('./link/Link').Redirect,{href});}};}function convertRedirect(path,config){const params={};const parts=path.split('/');const sourceParts=config.source.split('/');for(const[index,sourcePart]of sourceParts.entries()){let match=(0,matchers_1.matchDynamicName)(sourcePart);if(match){params[match]=parts[index];continue;}match=(0,matchers_1.matchDeepDynamicRouteName)(sourcePart);if(match){params[match]=parts.slice(index);break;}}return mergeVariablesWithPath(config.destination,params);}function mergeVariablesWithPath(path,params){return path.split('/').map(part=>{const match=(0,matchers_1.matchDynamicName)(part)||(0,matchers_1.matchDeepDynamicRouteName)(part);if(!match){return part;}const param=params[match];delete params[match];return param;}).filter(Boolean).join('/');}","map":{"version":3,"names":["exports","applyRedirects","getRedirectModule","convertRedirect","mergeVariablesWithPath","Linking","__importStar","require","react_1","getStateFromPath_forks_1","matchers_1","url","redirects","nextUrl","cleanPath","redirect","find","regex","test","href","destination","startsWith","openURL","route","default","RedirectComponent","params","useGlobalSearchParams","split","map","part","match","matchDynamicName","matchDeepDynamicRouteName","param","filter","Boolean","join","queryString","URLSearchParams","toString","createElement","Redirect","path","config","parts","sourceParts","source","index","sourcePart","entries","slice"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-router/src/getRoutesRedirects.tsx"],"sourcesContent":["import * as Linking from 'expo-linking';\nimport { createElement } from 'react';\n\nimport { cleanPath } from './fork/getStateFromPath-forks';\nimport { RedirectConfig } from './getRoutesCore';\nimport type { StoreRedirects } from './global-state/router-store';\nimport { matchDeepDynamicRouteName, matchDynamicName } from './matchers';\n\nexport function applyRedirects(\n  url: string | null | undefined,\n  redirects: StoreRedirects[] | undefined\n): string | undefined | null {\n  if (typeof url !== 'string' || !redirects) {\n    return url;\n  }\n\n  const nextUrl = cleanPath(url);\n  const redirect = redirects.find(([regex]) => regex.test(nextUrl));\n\n  if (!redirect) {\n    return url;\n  }\n\n  // If the redirect is external, open the URL\n  if (redirect[2]) {\n    let href = redirect[1].destination;\n    if (href.startsWith('//') && process.env.EXPO_OS !== 'web') {\n      href = `https:${href}`;\n    }\n\n    Linking.openURL(href);\n    return href;\n  }\n\n  return applyRedirects(convertRedirect(url, redirect[1]), redirects);\n}\n\nexport function getRedirectModule(route: string) {\n  return {\n    default: function RedirectComponent() {\n      // Use the store directly instead of useGlobalSearchParams.\n      // Importing the hooks directly causes build errors on the server\n      const params = require('./hooks').useGlobalSearchParams();\n\n      // Replace dynamic parts of the route with the actual values from the params\n      let href = route\n        .split('/')\n        .map((part) => {\n          const match = matchDynamicName(part) || matchDeepDynamicRouteName(part);\n          if (!match) {\n            return part;\n          }\n\n          const param = params[match];\n          delete params[match];\n          return param;\n        })\n        .filter(Boolean)\n        .join('/');\n\n      // Add any remaining params as query string\n      const queryString = new URLSearchParams(params as Record<string, any>).toString();\n\n      if (queryString) {\n        href += `?${queryString}`;\n      }\n\n      return createElement(require('./link/Link').Redirect, { href });\n    },\n  };\n}\n\nexport function convertRedirect(path: string, config: RedirectConfig) {\n  const params: Record<string, string | string[]> = {};\n\n  const parts = path.split('/');\n  const sourceParts = config.source.split('/');\n\n  for (const [index, sourcePart] of sourceParts.entries()) {\n    let match = matchDynamicName(sourcePart);\n\n    if (match) {\n      params[match] = parts[index];\n      continue;\n    }\n\n    match = matchDeepDynamicRouteName(sourcePart);\n\n    if (match) {\n      params[match] = parts.slice(index);\n      break;\n    }\n  }\n\n  return mergeVariablesWithPath(config.destination, params);\n}\n\nexport function mergeVariablesWithPath(path: string, params: Record<string, string | string[]>) {\n  return path\n    .split('/')\n    .map((part) => {\n      const match = matchDynamicName(part) || matchDeepDynamicRouteName(part);\n      if (!match) {\n        return part;\n      }\n\n      const param = params[match];\n      delete params[match];\n      return param;\n    })\n    .filter(Boolean)\n    .join('/');\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}