{"ast":null,"code":"'use strict';import NativeReanimatedModule from'./NativeReanimated';import{isWorkletFunction}from\"./commonTypes.js\";import{shouldBeUseWeb}from\"./PlatformChecker.js\";import{ReanimatedError,registerWorkletStackDetails}from\"./errors.js\";import{jsVersion}from\"./platform-specific/jsVersion.js\";import{shareableMappingCache,shareableMappingFlag}from\"./shareableMappingCache.js\";import{logger}from\"./logger/index.js\";const SHOULD_BE_USE_WEB=shouldBeUseWeb();const MAGIC_KEY='REANIMATED_MAGIC_KEY';const _worklet_6235723271315_init_data={code:\"function isHostObject_reactNativeReanimated_shareablesJs1(value){const{MAGIC_KEY}=this.__closure;return MAGIC_KEY in value;}\"};const isHostObject=function(){const isHostObject=function(value){return MAGIC_KEY in value;};isHostObject.__closure={MAGIC_KEY};isHostObject.__workletHash=6235723271315;isHostObject.__initData=_worklet_6235723271315_init_data;return isHostObject;}();function isPlainJSObject(object){return Object.getPrototypeOf(object)===Object.prototype;}const _worklet_15078111874360_init_data={code:\"function reactNativeReanimated_shareablesJs2(){return new Proxy({},{get:function(_,prop){if(prop==='_isReanimatedSharedValue'||prop==='__remoteFunction'){return false;}throw new ReanimatedError(\\\"Trying to access property `\\\"+String(prop)+\\\"` of an object which cannot be sent to the UI runtime.\\\");},set:function(){throw new ReanimatedError('Trying to write to an object which cannot be sent to the UI runtime.');}});}\"};const INACCESSIBLE_OBJECT={__init:function(){const reactNativeReanimated_shareablesJs2=function(){return new Proxy({},{get:(_,prop)=>{if(prop==='_isReanimatedSharedValue'||prop==='__remoteFunction'){return false;}throw new ReanimatedError(`Trying to access property \\`${String(prop)}\\` of an object which cannot be sent to the UI runtime.`);},set:()=>{throw new ReanimatedError('Trying to write to an object which cannot be sent to the UI runtime.');}});};reactNativeReanimated_shareablesJs2.__closure={};reactNativeReanimated_shareablesJs2.__workletHash=15078111874360;reactNativeReanimated_shareablesJs2.__initData=_worklet_15078111874360_init_data;return reactNativeReanimated_shareablesJs2;}()};const VALID_ARRAY_VIEWS_NAMES=['Int8Array','Uint8Array','Uint8ClampedArray','Int16Array','Uint16Array','Int32Array','Uint32Array','Float32Array','Float64Array','BigInt64Array','BigUint64Array','DataView'];const DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD=30;let processedObjectAtThresholdDepth;const _worklet_12912550984615_init_data={code:\"function reactNativeReanimated_shareablesJs3(){const{workletContextObjectFactory}=this.__closure;return workletContextObjectFactory();}\"};const _worklet_5248003660769_init_data={code:\"function reactNativeReanimated_shareablesJs4(){const{pattern,flags}=this.__closure;return new RegExp(pattern,flags);}\"};const _worklet_12925754861140_init_data={code:\"function reactNativeReanimated_shareablesJs5(){const{name,message,stack}=this.__closure;const error=new Error();error.name=name;error.message=message;error.stack=stack;return error;}\"};const _worklet_13404220505587_init_data={code:\"function reactNativeReanimated_shareablesJs6(){const{VALID_ARRAY_VIEWS_NAMES,typeName,buffer}=this.__closure;if(!VALID_ARRAY_VIEWS_NAMES.includes(typeName)){throw new ReanimatedError(\\\"Invalid array view name `\\\"+typeName+\\\"`.\\\");}const constructor=global[typeName];if(constructor===undefined){throw new ReanimatedError(\\\"Constructor for `\\\"+typeName+\\\"` not found.\\\");}return new constructor(buffer);}\"};export function makeShareableCloneRecursive(value,shouldPersistRemote=false,depth=0){if(SHOULD_BE_USE_WEB){return value;}if(depth>=DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD){if(depth===DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD){processedObjectAtThresholdDepth=value;}else if(value===processedObjectAtThresholdDepth){throw new ReanimatedError('Trying to convert a cyclic object to a shareable. This is not supported.');}}else{processedObjectAtThresholdDepth=undefined;}const type=typeof value;const isTypeObject=type==='object';const isTypeFunction=type==='function';if((isTypeObject||isTypeFunction)&&value!==null){const cached=shareableMappingCache.get(value);if(cached===shareableMappingFlag){return value;}else if(cached!==undefined){return cached;}else{let toAdapt;if(Array.isArray(value)){toAdapt=value.map(element=>makeShareableCloneRecursive(element,shouldPersistRemote,depth+1));freezeObjectIfDev(value);}else if(isTypeFunction&&!isWorkletFunction(value)){toAdapt=value;freezeObjectIfDev(value);}else if(isHostObject(value)){toAdapt=value;}else if(isPlainJSObject(value)&&value.__workletContextObjectFactory){const workletContextObjectFactory=value.__workletContextObjectFactory;const handle=makeShareableCloneRecursive({__init:function(){const reactNativeReanimated_shareablesJs3=function(){return workletContextObjectFactory();};reactNativeReanimated_shareablesJs3.__closure={workletContextObjectFactory};reactNativeReanimated_shareablesJs3.__workletHash=12912550984615;reactNativeReanimated_shareablesJs3.__initData=_worklet_12912550984615_init_data;return reactNativeReanimated_shareablesJs3;}()});shareableMappingCache.set(value,handle);return handle;}else if(isPlainJSObject(value)||isTypeFunction){toAdapt={};if(isWorkletFunction(value)){if(false){const babelVersion=value.__initData.version;if(babelVersion!==undefined&&babelVersion!==jsVersion){throw new ReanimatedError(`Mismatch between JavaScript code version and Reanimated Babel plugin version (${jsVersion} vs. ${babelVersion}).        \nSee \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#mismatch-between-javascript-code-version-and-reanimated-babel-plugin-version\\` for more details.\nOffending code was: \\`${getWorkletCode(value)}\\``);}registerWorkletStackDetails(value.__workletHash,value.__stackDetails);}if(value.__stackDetails){delete value.__stackDetails;}toAdapt.__initData=makeShareableCloneRecursive(value.__initData,true,depth+1);}for(const[key,element]of Object.entries(value)){if(key==='__initData'&&toAdapt.__initData!==undefined){continue;}toAdapt[key]=makeShareableCloneRecursive(element,shouldPersistRemote,depth+1);}freezeObjectIfDev(value);}else if(value instanceof RegExp){const pattern=value.source;const flags=value.flags;const handle=makeShareableCloneRecursive({__init:function(){const reactNativeReanimated_shareablesJs4=function(){return new RegExp(pattern,flags);};reactNativeReanimated_shareablesJs4.__closure={pattern,flags};reactNativeReanimated_shareablesJs4.__workletHash=5248003660769;reactNativeReanimated_shareablesJs4.__initData=_worklet_5248003660769_init_data;return reactNativeReanimated_shareablesJs4;}()});shareableMappingCache.set(value,handle);return handle;}else if(value instanceof Error){const{name,message,stack}=value;const handle=makeShareableCloneRecursive({__init:function(){const reactNativeReanimated_shareablesJs5=function(){const error=new Error();error.name=name;error.message=message;error.stack=stack;return error;};reactNativeReanimated_shareablesJs5.__closure={name,message,stack};reactNativeReanimated_shareablesJs5.__workletHash=12925754861140;reactNativeReanimated_shareablesJs5.__initData=_worklet_12925754861140_init_data;return reactNativeReanimated_shareablesJs5;}()});shareableMappingCache.set(value,handle);return handle;}else if(value instanceof ArrayBuffer){toAdapt=value;}else if(ArrayBuffer.isView(value)){const buffer=value.buffer;const typeName=value.constructor.name;const handle=makeShareableCloneRecursive({__init:function(){const reactNativeReanimated_shareablesJs6=function(){if(!VALID_ARRAY_VIEWS_NAMES.includes(typeName)){throw new ReanimatedError(`Invalid array view name \\`${typeName}\\`.`);}const constructor=global[typeName];if(constructor===undefined){throw new ReanimatedError(`Constructor for \\`${typeName}\\` not found.`);}return new constructor(buffer);};reactNativeReanimated_shareablesJs6.__closure={VALID_ARRAY_VIEWS_NAMES,typeName,buffer};reactNativeReanimated_shareablesJs6.__workletHash=13404220505587;reactNativeReanimated_shareablesJs6.__initData=_worklet_13404220505587_init_data;return reactNativeReanimated_shareablesJs6;}()});shareableMappingCache.set(value,handle);return handle;}else{const inaccessibleObject=makeShareableCloneRecursive(INACCESSIBLE_OBJECT);shareableMappingCache.set(value,inaccessibleObject);return inaccessibleObject;}const adapted=NativeReanimatedModule.makeShareableClone(toAdapt,shouldPersistRemote,value);shareableMappingCache.set(value,adapted);shareableMappingCache.set(adapted);return adapted;}}return NativeReanimatedModule.makeShareableClone(value,shouldPersistRemote,undefined);}const WORKLET_CODE_THRESHOLD=255;function getWorkletCode(value){const code=value?.__initData?.code;if(!code){return'unknown';}if(code.length>WORKLET_CODE_THRESHOLD){return`${code.substring(0,WORKLET_CODE_THRESHOLD)}...`;}return code;}const _worklet_7140175189813_init_data={code:\"function isRemoteFunction_reactNativeReanimated_shareablesJs7(value){return!!value.__remoteFunction;}\"};const isRemoteFunction=function(){const isRemoteFunction=function(value){return!!value.__remoteFunction;};isRemoteFunction.__closure={};isRemoteFunction.__workletHash=7140175189813;isRemoteFunction.__initData=_worklet_7140175189813_init_data;return isRemoteFunction;}();function freezeObjectIfDev(value){if(!false){return;}Object.entries(value).forEach(([key,element])=>{const descriptor=Object.getOwnPropertyDescriptor(value,key);if(!descriptor.configurable){return;}Object.defineProperty(value,key,{get(){return element;},set(){logger.warn(`Tried to modify key \\`${key}\\` of an object which has been already passed to a worklet. See \nhttps://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#tried-to-modify-key-of-an-object-which-has-been-converted-to-a-shareable \nfor more details.`);}});});Object.preventExtensions(value);}const _worklet_4829768171363_init_data={code:\"function makeShareableCloneOnUIRecursive_reactNativeReanimated_shareablesJs8(value){const{SHOULD_BE_USE_WEB,isHostObject,isRemoteFunction}=this.__closure;if(SHOULD_BE_USE_WEB){return value;}function cloneRecursive(value){if(typeof value==='object'&&value!==null||typeof value==='function'){if(isHostObject(value)){return global._makeShareableClone(value,undefined);}if(isRemoteFunction(value)){return value.__remoteFunction;}if(Array.isArray(value)){return global._makeShareableClone(value.map(cloneRecursive),undefined);}const toAdapt={};for(const[key,element]of Object.entries(value)){toAdapt[key]=cloneRecursive(element);}return global._makeShareableClone(toAdapt,value);}return global._makeShareableClone(value,undefined);}return cloneRecursive(value);}\"};export const makeShareableCloneOnUIRecursive=function(){const makeShareableCloneOnUIRecursive=function(value){if(SHOULD_BE_USE_WEB){return value;}function cloneRecursive(value){if(typeof value==='object'&&value!==null||typeof value==='function'){if(isHostObject(value)){return global._makeShareableClone(value,undefined);}if(isRemoteFunction(value)){return value.__remoteFunction;}if(Array.isArray(value)){return global._makeShareableClone(value.map(cloneRecursive),undefined);}const toAdapt={};for(const[key,element]of Object.entries(value)){toAdapt[key]=cloneRecursive(element);}return global._makeShareableClone(toAdapt,value);}return global._makeShareableClone(value,undefined);}return cloneRecursive(value);};makeShareableCloneOnUIRecursive.__closure={SHOULD_BE_USE_WEB,isHostObject,isRemoteFunction};makeShareableCloneOnUIRecursive.__workletHash=4829768171363;makeShareableCloneOnUIRecursive.__initData=_worklet_4829768171363_init_data;return makeShareableCloneOnUIRecursive;}();function makeShareableJS(value){return value;}const _worklet_3766025653260_init_data={code:\"function reactNativeReanimated_shareablesJs9(){const{value}=this.__closure;return value;}\"};function makeShareableNative(value){if(shareableMappingCache.get(value)){return value;}const handle=makeShareableCloneRecursive({__init:function(){const reactNativeReanimated_shareablesJs9=function(){return value;};reactNativeReanimated_shareablesJs9.__closure={value};reactNativeReanimated_shareablesJs9.__workletHash=3766025653260;reactNativeReanimated_shareablesJs9.__initData=_worklet_3766025653260_init_data;return reactNativeReanimated_shareablesJs9;}()});shareableMappingCache.set(value,handle);return value;}export const makeShareable=SHOULD_BE_USE_WEB?makeShareableJS:makeShareableNative;","map":{"version":3,"names":["NativeReanimatedModule","isWorkletFunction","shouldBeUseWeb","ReanimatedError","registerWorkletStackDetails","jsVersion","shareableMappingCache","shareableMappingFlag","logger","SHOULD_BE_USE_WEB","MAGIC_KEY","_worklet_6235723271315_init_data","code","isHostObject","value","__closure","__workletHash","__initData","isPlainJSObject","object","Object","getPrototypeOf","prototype","_worklet_15078111874360_init_data","INACCESSIBLE_OBJECT","__init","reactNativeReanimated_shareablesJs2","Proxy","get","_","prop","String","set","VALID_ARRAY_VIEWS_NAMES","DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD","processedObjectAtThresholdDepth","_worklet_12912550984615_init_data","_worklet_5248003660769_init_data","_worklet_12925754861140_init_data","_worklet_13404220505587_init_data","makeShareableCloneRecursive","shouldPersistRemote","depth","undefined","type","isTypeObject","isTypeFunction","cached","toAdapt","Array","isArray","map","element","freezeObjectIfDev","__workletContextObjectFactory","workletContextObjectFactory","handle","reactNativeReanimated_shareablesJs3","babelVersion","version","getWorkletCode","__stackDetails","key","entries","RegExp","pattern","source","flags","reactNativeReanimated_shareablesJs4","Error","name","message","stack","reactNativeReanimated_shareablesJs5","error","ArrayBuffer","isView","buffer","typeName","constructor","reactNativeReanimated_shareablesJs6","includes","global","inaccessibleObject","adapted","makeShareableClone","WORKLET_CODE_THRESHOLD","length","substring","_worklet_7140175189813_init_data","isRemoteFunction","__remoteFunction","forEach","descriptor","getOwnPropertyDescriptor","configurable","defineProperty","warn","preventExtensions","_worklet_4829768171363_init_data","makeShareableCloneOnUIRecursive","cloneRecursive","_makeShareableClone","makeShareableJS","_worklet_3766025653260_init_data","makeShareableNative","reactNativeReanimated_shareablesJs9","makeShareable"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/shareables.ts"],"sourcesContent":["'use strict';\nimport NativeReanimatedModule from './NativeReanimated';\nimport { isWorkletFunction } from './commonTypes';\nimport type {\n  ShareableRef,\n  FlatShareableRef,\n  WorkletFunction,\n} from './commonTypes';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport { ReanimatedError, registerWorkletStackDetails } from './errors';\nimport { jsVersion } from './platform-specific/jsVersion';\nimport {\n  shareableMappingCache,\n  shareableMappingFlag,\n} from './shareableMappingCache';\nimport { logger } from './logger';\n\n// for web/chrome debugger/jest environments this file provides a stub implementation\n// where no shareable references are used. Instead, the objects themselves are used\n// instead of shareable references, because of the fact that we don't have to deal with\n// running the code on separate VMs.\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\nconst MAGIC_KEY = 'REANIMATED_MAGIC_KEY';\n\nfunction isHostObject(value: NonNullable<object>) {\n  'worklet';\n  // We could use JSI to determine whether an object is a host object, however\n  // the below workaround works well and is way faster than an additional JSI call.\n  // We use the fact that host objects have broken implementation of `hasOwnProperty`\n  // and hence return true for all `in` checks regardless of the key we ask for.\n  return MAGIC_KEY in value;\n}\n\nfunction isPlainJSObject(object: object) {\n  return Object.getPrototypeOf(object) === Object.prototype;\n}\n\n// The below object is used as a replacement for objects that cannot be transferred\n// as shareable values. In makeShareableCloneRecursive we detect if an object is of\n// a plain Object.prototype and only allow such objects to be transferred. This lets\n// us avoid all sorts of react internals from leaking into the UI runtime. To make it\n// possible to catch errors when someone actually tries to access such object on the UI\n// runtime, we use the below Proxy object which is instantiated on the UI runtime and\n// throws whenever someone tries to access its fields.\nconst INACCESSIBLE_OBJECT = {\n  __init: () => {\n    'worklet';\n    return new Proxy(\n      {},\n      {\n        get: (_: unknown, prop: string | symbol) => {\n          if (\n            prop === '_isReanimatedSharedValue' ||\n            prop === '__remoteFunction'\n          ) {\n            // not very happy about this check here, but we need to allow for\n            // \"inaccessible\" objects to be tested with isSharedValue check\n            // as it is being used in the mappers when extracting inputs recursively\n            // as well as with isRemoteFunction when cloning objects recursively.\n            // Apparently we can't check if a key exists there as HostObjects always\n            // return true for such tests, so the only possibility for us is to\n            // actually access that key and see if it is set to true. We therefore\n            // need to allow for this key to be accessed here.\n            return false;\n          }\n          throw new ReanimatedError(\n            `Trying to access property \\`${String(\n              prop\n            )}\\` of an object which cannot be sent to the UI runtime.`\n          );\n        },\n        set: () => {\n          throw new ReanimatedError(\n            'Trying to write to an object which cannot be sent to the UI runtime.'\n          );\n        },\n      }\n    );\n  },\n};\n\nconst VALID_ARRAY_VIEWS_NAMES = [\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array',\n  'DataView',\n];\n\nconst DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD = 30;\n// Below variable stores object that we process in makeShareableCloneRecursive at the specified depth.\n// We use it to check if later on the function reenters with the same object\nlet processedObjectAtThresholdDepth: unknown;\n\nexport function makeShareableCloneRecursive<T>(\n  value: any,\n  shouldPersistRemote = false,\n  depth = 0\n): ShareableRef<T> {\n  if (SHOULD_BE_USE_WEB) {\n    return value;\n  }\n  if (depth >= DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n    // if we reach certain recursion depth we suspect that we are dealing with a cyclic object.\n    // this type of objects are not supported and cannot be transferred as shareable, so we\n    // implement a simple detection mechanism that remembers the value at a given depth and\n    // tests whether we try reenter this method later on with the same value. If that happens\n    // we throw an appropriate error.\n    if (depth === DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n      processedObjectAtThresholdDepth = value;\n    } else if (value === processedObjectAtThresholdDepth) {\n      throw new ReanimatedError(\n        'Trying to convert a cyclic object to a shareable. This is not supported.'\n      );\n    }\n  } else {\n    processedObjectAtThresholdDepth = undefined;\n  }\n  // This one actually may be worth to be moved to c++, we also need similar logic to run on the UI thread\n  const type = typeof value;\n  const isTypeObject = type === 'object';\n  const isTypeFunction = type === 'function';\n  if ((isTypeObject || isTypeFunction) && value !== null) {\n    const cached = shareableMappingCache.get(value);\n    if (cached === shareableMappingFlag) {\n      return value;\n    } else if (cached !== undefined) {\n      return cached as ShareableRef<T>;\n    } else {\n      let toAdapt: any;\n      if (Array.isArray(value)) {\n        toAdapt = value.map((element) =>\n          makeShareableCloneRecursive(element, shouldPersistRemote, depth + 1)\n        );\n        freezeObjectIfDev(value);\n      } else if (isTypeFunction && !isWorkletFunction(value)) {\n        // this is a remote function\n        toAdapt = value;\n        freezeObjectIfDev(value);\n      } else if (isHostObject(value)) {\n        // for host objects we pass the reference to the object as shareable and\n        // then recreate new host object wrapping the same instance on the UI thread.\n        // there is no point of iterating over keys as we do for regular objects.\n        toAdapt = value;\n      } else if (\n        isPlainJSObject(value) &&\n        value.__workletContextObjectFactory\n      ) {\n        const workletContextObjectFactory = value.__workletContextObjectFactory;\n        const handle = makeShareableCloneRecursive({\n          __init: () => {\n            'worklet';\n            return workletContextObjectFactory();\n          },\n        });\n        shareableMappingCache.set(value, handle);\n        return handle as ShareableRef<T>;\n      } else if (isPlainJSObject(value) || isTypeFunction) {\n        toAdapt = {};\n        if (isWorkletFunction(value)) {\n          if (__DEV__) {\n            const babelVersion = value.__initData.version;\n            if (babelVersion !== undefined && babelVersion !== jsVersion) {\n              throw new ReanimatedError(`Mismatch between JavaScript code version and Reanimated Babel plugin version (${jsVersion} vs. ${babelVersion}).        \nSee \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#mismatch-between-javascript-code-version-and-reanimated-babel-plugin-version\\` for more details.\nOffending code was: \\`${getWorkletCode(value)}\\``);\n            }\n            registerWorkletStackDetails(\n              value.__workletHash,\n              value.__stackDetails!\n            );\n          }\n          if (value.__stackDetails) {\n            // `Error` type of value cannot be copied to the UI thread, so we\n            // remove it after we handled it in dev mode or delete it to ignore it in production mode.\n            // Not removing this would cause an infinite loop in production mode and it just\n            // seems more elegant to handle it this way.\n            delete value.__stackDetails;\n          }\n          // to save on transferring static __initData field of worklet structure\n          // we request shareable value to persist its UI counterpart. This means\n          // that the __initData field that contains long strings representing the\n          // worklet code, source map, and location, will always be\n          // serialized/deserialized once.\n          toAdapt.__initData = makeShareableCloneRecursive(\n            value.__initData,\n            true,\n            depth + 1\n          );\n        }\n\n        for (const [key, element] of Object.entries(value)) {\n          if (key === '__initData' && toAdapt.__initData !== undefined) {\n            continue;\n          }\n          toAdapt[key] = makeShareableCloneRecursive(\n            element,\n            shouldPersistRemote,\n            depth + 1\n          );\n        }\n        freezeObjectIfDev(value);\n      } else if (value instanceof RegExp) {\n        const pattern = value.source;\n        const flags = value.flags;\n        const handle = makeShareableCloneRecursive({\n          __init: () => {\n            'worklet';\n            return new RegExp(pattern, flags);\n          },\n        });\n        shareableMappingCache.set(value, handle);\n        return handle as ShareableRef<T>;\n      } else if (value instanceof Error) {\n        const { name, message, stack } = value;\n        const handle = makeShareableCloneRecursive({\n          __init: () => {\n            'worklet';\n            // eslint-disable-next-line reanimated/use-reanimated-error\n            const error = new Error();\n            error.name = name;\n            error.message = message;\n            error.stack = stack;\n            return error;\n          },\n        });\n        shareableMappingCache.set(value, handle);\n        return handle as ShareableRef<T>;\n      } else if (value instanceof ArrayBuffer) {\n        toAdapt = value;\n      } else if (ArrayBuffer.isView(value)) {\n        // typed array (e.g. Int32Array, Uint8ClampedArray) or DataView\n        const buffer = value.buffer;\n        const typeName = value.constructor.name;\n        const handle = makeShareableCloneRecursive({\n          __init: () => {\n            'worklet';\n            if (!VALID_ARRAY_VIEWS_NAMES.includes(typeName)) {\n              throw new ReanimatedError(\n                `Invalid array view name \\`${typeName}\\`.`\n              );\n            }\n            const constructor = global[typeName as keyof typeof global];\n            if (constructor === undefined) {\n              throw new ReanimatedError(\n                `Constructor for \\`${typeName}\\` not found.`\n              );\n            }\n            return new constructor(buffer);\n          },\n        });\n        shareableMappingCache.set(value, handle);\n        return handle as ShareableRef<T>;\n      } else {\n        // This is reached for object types that are not of plain Object.prototype.\n        // We don't support such objects from being transferred as shareables to\n        // the UI runtime and hence we replace them with \"inaccessible object\"\n        // which is implemented as a Proxy object that throws on any attempt\n        // of accessing its fields. We argue that such objects can sometimes leak\n        // as attributes of objects being captured by worklets but should never\n        // be used on the UI runtime regardless. If they are being accessed, the user\n        // will get an appropriate error message.\n        const inaccessibleObject =\n          makeShareableCloneRecursive<T>(INACCESSIBLE_OBJECT);\n        shareableMappingCache.set(value, inaccessibleObject);\n        return inaccessibleObject;\n      }\n      const adapted = NativeReanimatedModule.makeShareableClone(\n        toAdapt,\n        shouldPersistRemote,\n        value\n      );\n      shareableMappingCache.set(value, adapted);\n      shareableMappingCache.set(adapted);\n      return adapted;\n    }\n  }\n  return NativeReanimatedModule.makeShareableClone(\n    value,\n    shouldPersistRemote,\n    undefined\n  );\n}\n\nconst WORKLET_CODE_THRESHOLD = 255;\n\nfunction getWorkletCode(value: WorkletFunction) {\n  // @ts-ignore this is fine\n  const code = value?.__initData?.code;\n  if (!code) {\n    return 'unknown';\n  }\n  if (code.length > WORKLET_CODE_THRESHOLD) {\n    return `${code.substring(0, WORKLET_CODE_THRESHOLD)}...`;\n  }\n  return code;\n}\n\ntype RemoteFunction<T> = {\n  __remoteFunction: FlatShareableRef<T>;\n};\n\nfunction isRemoteFunction<T>(value: {\n  __remoteFunction?: unknown;\n}): value is RemoteFunction<T> {\n  'worklet';\n  return !!value.__remoteFunction;\n}\n\n/**\n * We freeze\n *\n * - Arrays,\n * - Remote functions,\n * - Plain JS objects,\n *\n * That are transformed to a shareable with a meaningful warning. This should\n * help detect issues when someone modifies data after it's been converted.\n * Meaning that they may be doing a faulty assumption in their code expecting\n * that the updates are going to automatically propagate to the object sent to\n * the UI thread. If the user really wants some objects to be mutable they\n * should use shared values instead.\n */\nfunction freezeObjectIfDev<T extends object>(value: T) {\n  if (!__DEV__) {\n    return;\n  }\n  Object.entries(value).forEach(([key, element]) => {\n    const descriptor = Object.getOwnPropertyDescriptor(value, key)!;\n    if (!descriptor.configurable) {\n      return;\n    }\n    Object.defineProperty(value, key, {\n      get() {\n        return element;\n      },\n      set() {\n        logger.warn(\n          `Tried to modify key \\`${key}\\` of an object which has been already passed to a worklet. See \nhttps://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#tried-to-modify-key-of-an-object-which-has-been-converted-to-a-shareable \nfor more details.`\n        );\n      },\n    });\n  });\n  Object.preventExtensions(value);\n}\n\nexport function makeShareableCloneOnUIRecursive<T>(\n  value: T\n): FlatShareableRef<T> {\n  'worklet';\n  if (SHOULD_BE_USE_WEB) {\n    // @ts-ignore web is an interesting place where we don't run a secondary VM on the UI thread\n    // see more details in the comment where USE_STUB_IMPLEMENTATION is defined.\n    return value;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  function cloneRecursive(value: T): FlatShareableRef<T> {\n    if (\n      (typeof value === 'object' && value !== null) ||\n      typeof value === 'function'\n    ) {\n      if (isHostObject(value)) {\n        // We call `_makeShareableClone` to wrap the provided HostObject\n        // inside ShareableJSRef.\n        return global._makeShareableClone(\n          value,\n          undefined\n        ) as FlatShareableRef<T>;\n      }\n      if (isRemoteFunction<T>(value)) {\n        // RemoteFunctions are created by us therefore they are\n        // a Shareable out of the box and there is no need to\n        // call `_makeShareableClone`.\n        return value.__remoteFunction;\n      }\n      if (Array.isArray(value)) {\n        return global._makeShareableClone(\n          value.map(cloneRecursive),\n          undefined\n        ) as FlatShareableRef<T>;\n      }\n      const toAdapt: Record<string, FlatShareableRef<T>> = {};\n      for (const [key, element] of Object.entries(value)) {\n        toAdapt[key] = cloneRecursive(element);\n      }\n      return global._makeShareableClone(toAdapt, value) as FlatShareableRef<T>;\n    }\n    return global._makeShareableClone(value, undefined);\n  }\n  return cloneRecursive(value);\n}\n\nfunction makeShareableJS<T extends object>(value: T): T {\n  return value;\n}\n\nfunction makeShareableNative<T extends object>(value: T): T {\n  if (shareableMappingCache.get(value)) {\n    return value;\n  }\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return value;\n    },\n  });\n  shareableMappingCache.set(value, handle);\n  return value;\n}\n\n/**\n * This function creates a value on UI with persistent state - changes to it on\n * the UI thread will be seen by all worklets. Use it when you want to create a\n * value that is read and written only on the UI thread.\n */\nexport const makeShareable = SHOULD_BE_USE_WEB\n  ? makeShareableJS\n  : makeShareableNative;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}