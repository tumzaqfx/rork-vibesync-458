{"ast":null,"code":"'use strict';import RNLogBox from\"react-native-web/dist/exports/LogBox\";const LogBox=RNLogBox;const noop=()=>{};export const addLogBoxLog=LogBox?.addLog?.bind(LogBox)??noop;","map":{"version":3,"names":["RNLogBox","LogBox","noop","addLogBoxLog","addLog","bind"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/logger/LogBox.ts"],"sourcesContent":["'use strict';\n/**\n * Copied from: react-native/Libraries/LogBox/Data/LogBoxData.js\n * react-native/Libraries/LogBox/Data/parseLogBoxLog.js\n */\n\nimport type { LogBoxStatic } from 'react-native';\nimport { LogBox as RNLogBox } from 'react-native';\n\nexport type LogBoxLogLevel = 'warn' | 'error' | 'fatal' | 'syntax';\n\ntype Message = {\n  content: string;\n  substitutions: { length: number; offset: number }[];\n};\n\ntype Category = string;\n\ninterface Location {\n  row: number;\n  column: number;\n}\n\ninterface CodeFrame {\n  content: string;\n  location?: Location | null;\n  fileName: string;\n  collapse?: boolean;\n}\n\ntype ComponentStack = CodeFrame[];\n\ntype ComponentStackType = 'legacy' | 'stack';\n\nexport type LogData = {\n  level: LogBoxLogLevel;\n  message: Message;\n  category: Category;\n  componentStack: ComponentStack;\n  componentStackType: ComponentStackType | null;\n  stack?: string;\n};\n\ninterface LogBoxExtended extends LogBoxStatic {\n  addLog(data: LogData): void;\n}\n\nconst LogBox = RNLogBox as LogBoxExtended;\n\nconst noop = () => {\n  // do nothing\n};\n\n// Do nothing when addLogBoxLog is called if LogBox is not available\nexport const addLogBoxLog = LogBox?.addLog?.bind(LogBox) ?? noop;\n"],"mappings":"AAAA,YAAY,QAAAA,QAAA,4CA+CZ,KAAM,CAAAC,MAAM,CAAGD,QAA0B,CAEzC,KAAM,CAAAE,IAAI,CAAGA,CAAA,GAAM,CACjB,CACD,CAGD,MAAO,MAAM,CAAAC,YAAY,CAAGF,MAAM,EAAEG,MAAM,EAAEC,IAAI,CAACJ,MAAM,CAAC,EAAIC,IAAI","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}