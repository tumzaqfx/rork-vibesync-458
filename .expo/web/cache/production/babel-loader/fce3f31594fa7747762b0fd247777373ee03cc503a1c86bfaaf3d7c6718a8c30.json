{"ast":null,"code":"\"use strict\";'use client';var _reactJsxRuntime=require(\"react/jsx-runtime\");var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||(\"get\"in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function(){return m[k];}};}Object.defineProperty(o,k2,desc);}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,\"default\",{enumerable:true,value:v});}:function(o,v){o[\"default\"]=v;});var __importStar=this&&this.__importStar||function(){var ownKeys=function(o){ownKeys=Object.getOwnPropertyNames||function(o){var ar=[];for(var k in o)if(Object.prototype.hasOwnProperty.call(o,k))ar[ar.length]=k;return ar;};return ownKeys(o);};return function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k=ownKeys(mod),i=0;i<k.length;i++)if(k[i]!==\"default\")__createBinding(result,mod,k[i]);__setModuleDefault(result,mod);return result;};}();Object.defineProperty(exports,\"__esModule\",{value:true});exports.NavigatorContext=void 0;exports.Navigator=Navigator;exports.useNavigatorContext=useNavigatorContext;exports.Slot=Slot;exports.DefaultNavigator=DefaultNavigator;const native_1=require(\"@react-navigation/native\");const React=__importStar(require(\"react\"));const react_native_safe_area_context_1=require(\"react-native-safe-area-context\");const Screen_1=require(\"./Screen\");const Route_1=require(\"../Route\");const StackClient_1=require(\"../layouts/StackClient\");const withLayoutContext_1=require(\"../layouts/withLayoutContext\");const useScreens_1=require(\"../useScreens\");exports.NavigatorContext=React.createContext(null);if(false){exports.NavigatorContext.displayName='NavigatorContext';}function Navigator({initialRouteName,screenOptions,children,router,routerOptions}){const contextKey=(0,Route_1.useContextKey)();const{screens,children:nonScreenChildren,protectedScreens}=(0,withLayoutContext_1.useFilterScreenChildren)(children,{isCustomNavigator:true,contextKey});const sortedScreens=(0,useScreens_1.useSortedScreens)(screens??[],protectedScreens);router||=StackClient_1.StackRouter;const navigation=(0,native_1.useNavigationBuilder)(router,Object.assign({},routerOptions,{id:contextKey,children:sortedScreens||[_reactJsxRuntime.jsx(Screen_1.Screen,{},\"default\")],screenOptions,initialRouteName}));if(!sortedScreens.length){console.warn(`Navigator at \"${contextKey}\" has no children.`);return null;}return _reactJsxRuntime.jsx(exports.NavigatorContext.Provider,{value:Object.assign({},navigation,{contextKey,router}),children:nonScreenChildren});}function useNavigatorContext(){const context=React.useContext(exports.NavigatorContext);if(!context){throw new Error('useNavigatorContext must be used within a <Navigator />');}return context;}function SlotNavigator(props){const contextKey=(0,Route_1.useContextKey)();const{screens,protectedScreens}=(0,withLayoutContext_1.useFilterScreenChildren)([],{contextKey});const{state,descriptors,NavigationContent}=(0,native_1.useNavigationBuilder)(StackClient_1.StackRouter,Object.assign({},props,{id:contextKey,children:(0,useScreens_1.useSortedScreens)(screens??[],protectedScreens)}));return _reactJsxRuntime.jsx(NavigationContent,{children:descriptors[state.routes[state.index].key].render()});}function Slot(props){const contextKey=(0,Route_1.useContextKey)();const context=React.useContext(exports.NavigatorContext);if(context?.contextKey!==contextKey){return _reactJsxRuntime.jsx(SlotNavigator,Object.assign({},props));}return _reactJsxRuntime.jsx(NavigatorSlot,{});}function NavigatorSlot(){const context=useNavigatorContext();const{state,descriptors}=context;return descriptors[state.routes[state.index].key]?.render()??null;}function DefaultNavigator(){return _reactJsxRuntime.jsx(react_native_safe_area_context_1.SafeAreaView,{style:{flex:1},children:_reactJsxRuntime.jsx(SlotNavigator,{})});}Navigator.Slot=NavigatorSlot;Navigator.useContext=useNavigatorContext;Navigator.Screen=Screen_1.Screen;","map":{"version":3,"names":["_reactJsxRuntime","require","exports","Navigator","useNavigatorContext","Slot","DefaultNavigator","native_1","React","__importStar","react_native_safe_area_context_1","Screen_1","Route_1","StackClient_1","withLayoutContext_1","useScreens_1","NavigatorContext","createContext","displayName","initialRouteName","screenOptions","children","router","routerOptions","contextKey","useContextKey","screens","nonScreenChildren","protectedScreens","useFilterScreenChildren","isCustomNavigator","sortedScreens","useSortedScreens","StackRouter","navigation","useNavigationBuilder","Object","assign","id","jsx","Screen","length","console","warn","Provider","value","context","useContext","Error","SlotNavigator","props","state","descriptors","NavigationContent","routes","index","key","render","NavigatorSlot","SafeAreaView","style","flex"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-router/src/views/Navigator.tsx"],"sourcesContent":["// Copyright Â© 2024 650 Industries.\n'use client';\n\nimport { RouterFactory, useNavigationBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nimport { Screen } from './Screen';\nimport { useContextKey } from '../Route';\nimport { StackRouter } from '../layouts/StackClient';\nimport { useFilterScreenChildren } from '../layouts/withLayoutContext';\nimport { useSortedScreens } from '../useScreens';\n\nexport type NavigatorContextValue = ReturnType<typeof useNavigationBuilder> & {\n  contextKey: string;\n  router: RouterFactory<any, any, any>;\n};\n\nexport const NavigatorContext = React.createContext<NavigatorContextValue | null>(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  NavigatorContext.displayName = 'NavigatorContext';\n}\n\ntype UseNavigationBuilderRouter = Parameters<typeof useNavigationBuilder>[0];\ntype UseNavigationBuilderOptions = Parameters<typeof useNavigationBuilder>[1];\n\nexport type NavigatorProps<T extends UseNavigationBuilderRouter> = {\n  initialRouteName?: UseNavigationBuilderOptions['initialRouteName'];\n  screenOptions?: UseNavigationBuilderOptions['screenOptions'];\n  children?: UseNavigationBuilderOptions['children'];\n  router?: T;\n  routerOptions?: Omit<Parameters<T>[0], 'initialRouteName'>;\n};\n\n/**\n * An unstyled custom navigator. Good for basic web layouts.\n *\n * @hidden\n */\nexport function Navigator<T extends UseNavigationBuilderRouter = typeof StackRouter>({\n  initialRouteName,\n  screenOptions,\n  children,\n  router,\n  routerOptions,\n}: NavigatorProps<T>) {\n  const contextKey = useContextKey();\n\n  // A custom navigator can have a mix of Screen and other components (like a Slot inside a View)\n  const {\n    screens,\n    children: nonScreenChildren,\n    protectedScreens,\n  } = useFilterScreenChildren(children, {\n    isCustomNavigator: true,\n    contextKey,\n  });\n\n  const sortedScreens = useSortedScreens(screens ?? [], protectedScreens);\n\n  router ||= StackRouter as unknown as T;\n\n  const navigation = useNavigationBuilder(router, {\n    // Used for getting the parent with navigation.getParent('/normalized/path')\n    ...routerOptions,\n    id: contextKey,\n    children: sortedScreens || [<Screen key=\"default\" />],\n    screenOptions,\n    initialRouteName,\n  });\n\n  // useNavigationBuilder requires at least one screen to be defined otherwise it will throw.\n  if (!sortedScreens.length) {\n    console.warn(`Navigator at \"${contextKey}\" has no children.`);\n    return null;\n  }\n\n  return (\n    <NavigatorContext.Provider\n      value={{\n        ...navigation,\n        contextKey,\n        router,\n      }}>\n      {nonScreenChildren}\n    </NavigatorContext.Provider>\n  );\n}\n\n/**\n * @hidden\n */\nexport function useNavigatorContext() {\n  const context = React.useContext(NavigatorContext);\n  if (!context) {\n    throw new Error('useNavigatorContext must be used within a <Navigator />');\n  }\n  return context;\n}\n\nfunction SlotNavigator(props: NavigatorProps<any>) {\n  const contextKey = useContextKey();\n\n  // Allows adding Screen components as children to configure routes.\n  const { screens, protectedScreens } = useFilterScreenChildren([], {\n    contextKey,\n  });\n\n  const { state, descriptors, NavigationContent } = useNavigationBuilder(StackRouter, {\n    ...props,\n    id: contextKey,\n    children: useSortedScreens(screens ?? [], protectedScreens),\n  });\n\n  return (\n    <NavigationContent>{descriptors[state.routes[state.index].key].render()}</NavigationContent>\n  );\n}\n\n/**\n * Renders the currently selected content.\n *\n * There are actually two different implementations of `<Slot/>`:\n *  - Used inside a `_layout` as the `Navigator`\n *  - Used inside a `Navigator` as the content\n *\n * Since a custom `Navigator` will set the `NavigatorContext.contextKey` to\n * the current `_layout`, you can use this to determine if you are inside\n * a custom navigator or not.\n */\nexport function Slot(props: Omit<NavigatorProps<any>, 'children'>) {\n  const contextKey = useContextKey();\n  const context = React.useContext(NavigatorContext);\n\n  if (context?.contextKey !== contextKey) {\n    // The _layout has changed since the last navigator\n    return <SlotNavigator {...props} />;\n  }\n\n  /*\n   * The user has defined a custom navigator\n   * <Navigator><Slot /></Navigator>\n   */\n  return <NavigatorSlot />;\n}\n\n/**\n * Render the current navigator content.\n */\nfunction NavigatorSlot() {\n  const context = useNavigatorContext();\n\n  const { state, descriptors } = context;\n\n  return descriptors[state.routes[state.index].key]?.render() ?? null;\n}\n\n/**\n * The default navigator for the app when no root _layout is provided.\n */\nexport function DefaultNavigator() {\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <SlotNavigator />\n    </SafeAreaView>\n  );\n}\n\nNavigator.Slot = NavigatorSlot;\nNavigator.useContext = useNavigatorContext;\n\n/** Used to configure route settings. */\nNavigator.Screen = Screen;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}