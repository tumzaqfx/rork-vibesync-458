{"ast":null,"code":"import{CALLBACK_TYPE}from'../gesture';import{Reanimated}from'../reanimatedWrapper';import{GestureStateManager}from'../gestureStateManager';import{State}from'../../../State';import{TouchEventType}from'../../../TouchEventType';import{tagMessage}from'../../../utils';const _worklet_4317557963300_init_data={code:\"function getHandler_reactNativeGestureHandler_useAnimatedGestureJs1(type,gesture){const{CALLBACK_TYPE}=this.__closure;switch(type){case CALLBACK_TYPE.BEGAN:return gesture.onBegin;case CALLBACK_TYPE.START:return gesture.onStart;case CALLBACK_TYPE.UPDATE:return gesture.onUpdate;case CALLBACK_TYPE.CHANGE:return gesture.onChange;case CALLBACK_TYPE.END:return gesture.onEnd;case CALLBACK_TYPE.FINALIZE:return gesture.onFinalize;case CALLBACK_TYPE.TOUCHES_DOWN:return gesture.onTouchesDown;case CALLBACK_TYPE.TOUCHES_MOVE:return gesture.onTouchesMove;case CALLBACK_TYPE.TOUCHES_UP:return gesture.onTouchesUp;case CALLBACK_TYPE.TOUCHES_CANCELLED:return gesture.onTouchesCancelled;}}\"};const getHandler=function(){const getHandler=function(type,gesture){switch(type){case CALLBACK_TYPE.BEGAN:return gesture.onBegin;case CALLBACK_TYPE.START:return gesture.onStart;case CALLBACK_TYPE.UPDATE:return gesture.onUpdate;case CALLBACK_TYPE.CHANGE:return gesture.onChange;case CALLBACK_TYPE.END:return gesture.onEnd;case CALLBACK_TYPE.FINALIZE:return gesture.onFinalize;case CALLBACK_TYPE.TOUCHES_DOWN:return gesture.onTouchesDown;case CALLBACK_TYPE.TOUCHES_MOVE:return gesture.onTouchesMove;case CALLBACK_TYPE.TOUCHES_UP:return gesture.onTouchesUp;case CALLBACK_TYPE.TOUCHES_CANCELLED:return gesture.onTouchesCancelled;}};getHandler.__closure={CALLBACK_TYPE};getHandler.__workletHash=4317557963300;getHandler.__initData=_worklet_4317557963300_init_data;return getHandler;}();const _worklet_2039840524711_init_data={code:\"function touchEventTypeToCallbackType_reactNativeGestureHandler_useAnimatedGestureJs2(eventType){const{TouchEventType,CALLBACK_TYPE}=this.__closure;switch(eventType){case TouchEventType.TOUCHES_DOWN:return CALLBACK_TYPE.TOUCHES_DOWN;case TouchEventType.TOUCHES_MOVE:return CALLBACK_TYPE.TOUCHES_MOVE;case TouchEventType.TOUCHES_UP:return CALLBACK_TYPE.TOUCHES_UP;case TouchEventType.TOUCHES_CANCELLED:return CALLBACK_TYPE.TOUCHES_CANCELLED;}return CALLBACK_TYPE.UNDEFINED;}\"};const touchEventTypeToCallbackType=function(){const touchEventTypeToCallbackType=function(eventType){switch(eventType){case TouchEventType.TOUCHES_DOWN:return CALLBACK_TYPE.TOUCHES_DOWN;case TouchEventType.TOUCHES_MOVE:return CALLBACK_TYPE.TOUCHES_MOVE;case TouchEventType.TOUCHES_UP:return CALLBACK_TYPE.TOUCHES_UP;case TouchEventType.TOUCHES_CANCELLED:return CALLBACK_TYPE.TOUCHES_CANCELLED;}return CALLBACK_TYPE.UNDEFINED;};touchEventTypeToCallbackType.__closure={TouchEventType,CALLBACK_TYPE};touchEventTypeToCallbackType.__workletHash=2039840524711;touchEventTypeToCallbackType.__initData=_worklet_2039840524711_init_data;return touchEventTypeToCallbackType;}();const _worklet_17409932184457_init_data={code:\"function runWorklet_reactNativeGestureHandler_useAnimatedGestureJs3(type,gesture,event,...args){const{getHandler,tagMessage}=this.__closure;const handler=getHandler(type,gesture);if(gesture.isWorklet[type]){handler===null||handler===void 0?void 0:handler(event,...args);}else if(handler){console.warn(tagMessage('Animated gesture callback must be a worklet'));}}\"};const runWorklet=function(){const runWorklet=function(type,gesture,event,...args){const handler=getHandler(type,gesture);if(gesture.isWorklet[type]){handler===null||handler===void 0?void 0:handler(event,...args);}else if(handler){console.warn(tagMessage('Animated gesture callback must be a worklet'));}};runWorklet.__closure={getHandler,tagMessage};runWorklet.__workletHash=17409932184457;runWorklet.__initData=_worklet_17409932184457_init_data;return runWorklet;}();const _worklet_7889847699524_init_data={code:\"function isStateChangeEvent_reactNativeGestureHandler_useAnimatedGestureJs4(event){return event.oldState!=null;}\"};const isStateChangeEvent=function(){const isStateChangeEvent=function(event){return event.oldState!=null;};isStateChangeEvent.__closure={};isStateChangeEvent.__workletHash=7889847699524;isStateChangeEvent.__initData=_worklet_7889847699524_init_data;return isStateChangeEvent;}();const _worklet_13087507825621_init_data={code:\"function isTouchEvent_reactNativeGestureHandler_useAnimatedGestureJs5(event){return event.eventType!=null;}\"};const isTouchEvent=function(){const isTouchEvent=function(event){return event.eventType!=null;};isTouchEvent.__closure={};isTouchEvent.__workletHash=13087507825621;isTouchEvent.__initData=_worklet_13087507825621_init_data;return isTouchEvent;}();const _worklet_615977787608_init_data={code:\"function reactNativeGestureHandler_useAnimatedGestureJs6(event){const{sharedHandlersCallbacks,isStateChangeEvent,State,runWorklet,CALLBACK_TYPE,lastUpdateEvent,isTouchEvent,stateControllers,GestureStateManager,TouchEventType,touchEventTypeToCallbackType}=this.__closure;const currentCallback=sharedHandlersCallbacks.value;if(!currentCallback){return;}for(let i=0;i<currentCallback.length;i++){const gesture=currentCallback[i];if(event.handlerTag!==gesture.handlerTag){continue;}if(isStateChangeEvent(event)){if(event.oldState===State.UNDETERMINED&&event.state===State.BEGAN){runWorklet(CALLBACK_TYPE.BEGAN,gesture,event);}else if((event.oldState===State.BEGAN||event.oldState===State.UNDETERMINED)&&event.state===State.ACTIVE){runWorklet(CALLBACK_TYPE.START,gesture,event);lastUpdateEvent.value[gesture.handlerTag]=undefined;}else if(event.oldState!==event.state&&event.state===State.END){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,true);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,true);}else if((event.state===State.FAILED||event.state===State.CANCELLED)&&event.state!==event.oldState){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,false);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,false);}}else if(isTouchEvent(event)){if(!stateControllers[i]){stateControllers[i]=GestureStateManager.create(event.handlerTag);}if(event.eventType!==TouchEventType.UNDETERMINED){runWorklet(touchEventTypeToCallbackType(event.eventType),gesture,event,stateControllers[i]);}}else{runWorklet(CALLBACK_TYPE.UPDATE,gesture,event);if(gesture.onChange&&gesture.changeEventCalculator){var _gesture$changeEventC;runWorklet(CALLBACK_TYPE.CHANGE,gesture,(_gesture$changeEventC=gesture.changeEventCalculator)===null||_gesture$changeEventC===void 0?void 0:_gesture$changeEventC.call(gesture,event,lastUpdateEvent.value[gesture.handlerTag]));lastUpdateEvent.value[gesture.handlerTag]=event;}}}}\"};export function useAnimatedGesture(preparedGesture,needsRebuild){if(!Reanimated){return;}const sharedHandlersCallbacks=Reanimated.useSharedValue(null);const lastUpdateEvent=Reanimated.useSharedValue([]);const stateControllers=[];const callback=function(){const reactNativeGestureHandler_useAnimatedGestureJs6=function(event){const currentCallback=sharedHandlersCallbacks.value;if(!currentCallback){return;}for(let i=0;i<currentCallback.length;i++){const gesture=currentCallback[i];if(event.handlerTag!==gesture.handlerTag){continue;}if(isStateChangeEvent(event)){if(event.oldState===State.UNDETERMINED&&event.state===State.BEGAN){runWorklet(CALLBACK_TYPE.BEGAN,gesture,event);}else if((event.oldState===State.BEGAN||event.oldState===State.UNDETERMINED)&&event.state===State.ACTIVE){runWorklet(CALLBACK_TYPE.START,gesture,event);lastUpdateEvent.value[gesture.handlerTag]=undefined;}else if(event.oldState!==event.state&&event.state===State.END){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,true);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,true);}else if((event.state===State.FAILED||event.state===State.CANCELLED)&&event.state!==event.oldState){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,false);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,false);}}else if(isTouchEvent(event)){if(!stateControllers[i]){stateControllers[i]=GestureStateManager.create(event.handlerTag);}if(event.eventType!==TouchEventType.UNDETERMINED){runWorklet(touchEventTypeToCallbackType(event.eventType),gesture,event,stateControllers[i]);}}else{runWorklet(CALLBACK_TYPE.UPDATE,gesture,event);if(gesture.onChange&&gesture.changeEventCalculator){var _gesture$changeEventC;runWorklet(CALLBACK_TYPE.CHANGE,gesture,(_gesture$changeEventC=gesture.changeEventCalculator)===null||_gesture$changeEventC===void 0?void 0:_gesture$changeEventC.call(gesture,event,lastUpdateEvent.value[gesture.handlerTag]));lastUpdateEvent.value[gesture.handlerTag]=event;}}}};reactNativeGestureHandler_useAnimatedGestureJs6.__closure={sharedHandlersCallbacks,isStateChangeEvent,State,runWorklet,CALLBACK_TYPE,lastUpdateEvent,isTouchEvent,stateControllers,GestureStateManager,TouchEventType,touchEventTypeToCallbackType};reactNativeGestureHandler_useAnimatedGestureJs6.__workletHash=615977787608;reactNativeGestureHandler_useAnimatedGestureJs6.__initData=_worklet_615977787608_init_data;return reactNativeGestureHandler_useAnimatedGestureJs6;}();const event=Reanimated.useEvent(callback,['onGestureHandlerStateChange','onGestureHandlerEvent'],needsRebuild);preparedGesture.animatedEventHandler=event;preparedGesture.animatedHandlers=sharedHandlersCallbacks;}","map":{"version":3,"names":["CALLBACK_TYPE","Reanimated","GestureStateManager","State","TouchEventType","tagMessage","_worklet_4317557963300_init_data","code","getHandler","type","gesture","BEGAN","onBegin","START","onStart","UPDATE","onUpdate","CHANGE","onChange","END","onEnd","FINALIZE","onFinalize","TOUCHES_DOWN","onTouchesDown","TOUCHES_MOVE","onTouchesMove","TOUCHES_UP","onTouchesUp","TOUCHES_CANCELLED","onTouchesCancelled","__closure","__workletHash","__initData","_worklet_2039840524711_init_data","touchEventTypeToCallbackType","eventType","UNDEFINED","_worklet_17409932184457_init_data","runWorklet","event","args","handler","isWorklet","console","warn","_worklet_7889847699524_init_data","isStateChangeEvent","oldState","_worklet_13087507825621_init_data","isTouchEvent","_worklet_615977787608_init_data","useAnimatedGesture","preparedGesture","needsRebuild","sharedHandlersCallbacks","useSharedValue","lastUpdateEvent","stateControllers","callback","reactNativeGestureHandler_useAnimatedGestureJs6","currentCallback","value","i","length","handlerTag","UNDETERMINED","state","ACTIVE","undefined","FAILED","CANCELLED","create","changeEventCalculator","_gesture$changeEventC","call","useEvent","animatedEventHandler","animatedHandlers"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector/useAnimatedGesture.ts"],"sourcesContent":["import { HandlerCallbacks, CALLBACK_TYPE } from '../gesture';\nimport { Reanimated } from '../reanimatedWrapper';\nimport {\n  GestureTouchEvent,\n  GestureUpdateEvent,\n  GestureStateChangeEvent,\n} from '../../gestureHandlerCommon';\nimport {\n  GestureStateManager,\n  GestureStateManagerType,\n} from '../gestureStateManager';\nimport { State } from '../../../State';\nimport { TouchEventType } from '../../../TouchEventType';\nimport { tagMessage } from '../../../utils';\nimport { AttachedGestureState } from './types';\n\nfunction getHandler(\n  type: CALLBACK_TYPE,\n  gesture: HandlerCallbacks<Record<string, unknown>>\n) {\n  'worklet';\n  switch (type) {\n    case CALLBACK_TYPE.BEGAN:\n      return gesture.onBegin;\n    case CALLBACK_TYPE.START:\n      return gesture.onStart;\n    case CALLBACK_TYPE.UPDATE:\n      return gesture.onUpdate;\n    case CALLBACK_TYPE.CHANGE:\n      return gesture.onChange;\n    case CALLBACK_TYPE.END:\n      return gesture.onEnd;\n    case CALLBACK_TYPE.FINALIZE:\n      return gesture.onFinalize;\n    case CALLBACK_TYPE.TOUCHES_DOWN:\n      return gesture.onTouchesDown;\n    case CALLBACK_TYPE.TOUCHES_MOVE:\n      return gesture.onTouchesMove;\n    case CALLBACK_TYPE.TOUCHES_UP:\n      return gesture.onTouchesUp;\n    case CALLBACK_TYPE.TOUCHES_CANCELLED:\n      return gesture.onTouchesCancelled;\n  }\n}\n\nfunction touchEventTypeToCallbackType(\n  eventType: TouchEventType\n): CALLBACK_TYPE {\n  'worklet';\n  switch (eventType) {\n    case TouchEventType.TOUCHES_DOWN:\n      return CALLBACK_TYPE.TOUCHES_DOWN;\n    case TouchEventType.TOUCHES_MOVE:\n      return CALLBACK_TYPE.TOUCHES_MOVE;\n    case TouchEventType.TOUCHES_UP:\n      return CALLBACK_TYPE.TOUCHES_UP;\n    case TouchEventType.TOUCHES_CANCELLED:\n      return CALLBACK_TYPE.TOUCHES_CANCELLED;\n  }\n  return CALLBACK_TYPE.UNDEFINED;\n}\n\nfunction runWorklet(\n  type: CALLBACK_TYPE,\n  gesture: HandlerCallbacks<Record<string, unknown>>,\n  event: GestureStateChangeEvent | GestureUpdateEvent | GestureTouchEvent,\n  ...args: unknown[]\n) {\n  'worklet';\n  const handler = getHandler(type, gesture);\n  if (gesture.isWorklet[type]) {\n    // @ts-ignore Logic below makes sure the correct event is send to the\n    // correct handler.\n    handler?.(event, ...args);\n  } else if (handler) {\n    console.warn(tagMessage('Animated gesture callback must be a worklet'));\n  }\n}\n\nfunction isStateChangeEvent(\n  event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent\n): event is GestureStateChangeEvent {\n  'worklet';\n  // @ts-ignore Yes, the oldState prop is missing on GestureTouchEvent, that's the point\n  return event.oldState != null;\n}\n\nfunction isTouchEvent(\n  event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent\n): event is GestureTouchEvent {\n  'worklet';\n  return event.eventType != null;\n}\n\nexport function useAnimatedGesture(\n  preparedGesture: AttachedGestureState,\n  needsRebuild: boolean\n) {\n  if (!Reanimated) {\n    return;\n  }\n\n  // Hooks are called conditionally, but the condition is whether the\n  // react-native-reanimated is installed, which shouldn't change while running\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const sharedHandlersCallbacks = Reanimated.useSharedValue<\n    HandlerCallbacks<Record<string, unknown>>[] | null\n  >(null);\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const lastUpdateEvent = Reanimated.useSharedValue<\n    (GestureUpdateEvent | undefined)[]\n  >([]);\n\n  // not every gesture needs a state controller, init them lazily\n  const stateControllers: GestureStateManagerType[] = [];\n\n  const callback = (\n    event: GestureStateChangeEvent | GestureUpdateEvent | GestureTouchEvent\n  ) => {\n    'worklet';\n\n    const currentCallback = sharedHandlersCallbacks.value;\n    if (!currentCallback) {\n      return;\n    }\n\n    for (let i = 0; i < currentCallback.length; i++) {\n      const gesture = currentCallback[i];\n\n      if (event.handlerTag !== gesture.handlerTag) {\n        continue;\n      }\n\n      if (isStateChangeEvent(event)) {\n        if (\n          event.oldState === State.UNDETERMINED &&\n          event.state === State.BEGAN\n        ) {\n          runWorklet(CALLBACK_TYPE.BEGAN, gesture, event);\n        } else if (\n          (event.oldState === State.BEGAN ||\n            event.oldState === State.UNDETERMINED) &&\n          event.state === State.ACTIVE\n        ) {\n          runWorklet(CALLBACK_TYPE.START, gesture, event);\n          lastUpdateEvent.value[gesture.handlerTag] = undefined;\n        } else if (\n          event.oldState !== event.state &&\n          event.state === State.END\n        ) {\n          if (event.oldState === State.ACTIVE) {\n            runWorklet(CALLBACK_TYPE.END, gesture, event, true);\n          }\n          runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, true);\n        } else if (\n          (event.state === State.FAILED || event.state === State.CANCELLED) &&\n          event.state !== event.oldState\n        ) {\n          if (event.oldState === State.ACTIVE) {\n            runWorklet(CALLBACK_TYPE.END, gesture, event, false);\n          }\n          runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, false);\n        }\n      } else if (isTouchEvent(event)) {\n        if (!stateControllers[i]) {\n          stateControllers[i] = GestureStateManager.create(event.handlerTag);\n        }\n\n        if (event.eventType !== TouchEventType.UNDETERMINED) {\n          runWorklet(\n            touchEventTypeToCallbackType(event.eventType),\n            gesture,\n            event,\n            stateControllers[i]\n          );\n        }\n      } else {\n        runWorklet(CALLBACK_TYPE.UPDATE, gesture, event);\n\n        if (gesture.onChange && gesture.changeEventCalculator) {\n          runWorklet(\n            CALLBACK_TYPE.CHANGE,\n            gesture,\n            gesture.changeEventCalculator?.(\n              event,\n              lastUpdateEvent.value[gesture.handlerTag]\n            )\n          );\n\n          lastUpdateEvent.value[gesture.handlerTag] = event;\n        }\n      }\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const event = Reanimated.useEvent(\n    callback,\n    ['onGestureHandlerStateChange', 'onGestureHandlerEvent'],\n    needsRebuild\n  );\n\n  preparedGesture.animatedEventHandler = event;\n  preparedGesture.animatedHandlers = sharedHandlersCallbacks;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}