{"ast":null,"code":"\"use strict\";import{nanoid}from'nanoid/non-secure';import{BaseRouter}from\"./BaseRouter.js\";const TYPE_ROUTE='route';export const TabActions={jumpTo(name,params){return{type:'JUMP_TO',payload:{name,params}};}};const getRouteHistory=(routes,index,backBehavior,initialRouteName)=>{const history=[{type:TYPE_ROUTE,key:routes[index].key}];let initialRouteIndex;switch(backBehavior){case'order':for(let i=index;i>0;i--){history.unshift({type:TYPE_ROUTE,key:routes[i-1].key});}break;case'firstRoute':if(index!==0){history.unshift({type:TYPE_ROUTE,key:routes[0].key});}break;case'initialRoute':initialRouteIndex=routes.findIndex(route=>route.name===initialRouteName);initialRouteIndex=initialRouteIndex===-1?0:initialRouteIndex;if(index!==initialRouteIndex){history.unshift({type:TYPE_ROUTE,key:routes[initialRouteIndex].key});}break;case'history':break;}return history;};const changeIndex=(state,index,backBehavior,initialRouteName)=>{let history;if(backBehavior==='history'){const currentKey=state.routes[index].key;history=state.history.filter(it=>it.type==='route'?it.key!==currentKey:false).concat({type:TYPE_ROUTE,key:currentKey});}else{history=getRouteHistory(state.routes,index,backBehavior,initialRouteName);}return Object.assign({},state,{index,history});};export function TabRouter({initialRouteName,backBehavior='firstRoute'}){const router=Object.assign({},BaseRouter,{type:'tab',getInitialState({routeNames,routeParamList}){const index=initialRouteName!==undefined&&routeNames.includes(initialRouteName)?routeNames.indexOf(initialRouteName):0;const routes=routeNames.map(name=>({name,key:`${name}-${nanoid()}`,params:routeParamList[name]}));const history=getRouteHistory(routes,index,backBehavior,initialRouteName);return{stale:false,type:'tab',key:`tab-${nanoid()}`,index,routeNames,history,routes,preloadedRouteKeys:[]};},getRehydratedState(partialState,{routeNames,routeParamList}){const state=partialState;if(state.stale===false){return state;}const routes=routeNames.map(name=>{const route=state.routes.find(r=>r.name===name);return Object.assign({},route,{name,key:route&&route.name===name&&route.key?route.key:`${name}-${nanoid()}`,params:routeParamList[name]!==undefined?Object.assign({},routeParamList[name],route?route.params:undefined):route?route.params:undefined});});const index=Math.min(Math.max(routeNames.indexOf(state.routes[state?.index??0]?.name),0),routes.length-1);const routeKeys=routes.map(route=>route.key);const history=state.history?.filter(it=>routeKeys.includes(it.key))??[];return changeIndex({stale:false,type:'tab',key:`tab-${nanoid()}`,index,routeNames,history,routes,preloadedRouteKeys:state.preloadedRouteKeys?.filter(key=>routeKeys.includes(key))??[]},index,backBehavior,initialRouteName);},getStateForRouteNamesChange(state,{routeNames,routeParamList,routeKeyChanges}){const routes=routeNames.map(name=>state.routes.find(r=>r.name===name&&!routeKeyChanges.includes(r.name))||{name,key:`${name}-${nanoid()}`,params:routeParamList[name]});const index=Math.max(0,routeNames.indexOf(state.routes[state.index].name));let history=state.history.filter(it=>it.type!=='route'||routes.find(r=>r.key===it.key));if(!history.length){history=getRouteHistory(routes,index,backBehavior,initialRouteName);}return Object.assign({},state,{history,routeNames,routes,index});},getStateForRouteFocus(state,key){const index=state.routes.findIndex(r=>r.key===key);if(index===-1||index===state.index){return state;}return changeIndex(state,index,backBehavior,initialRouteName);},getStateForAction(state,action,{routeParamList,routeGetIdList}){switch(action.type){case'JUMP_TO':case'NAVIGATE':case'NAVIGATE_DEPRECATED':{const index=state.routes.findIndex(route=>route.name===action.payload.name);if(index===-1){return null;}const updatedState=changeIndex(Object.assign({},state,{routes:state.routes.map(route=>{if(route.name!==action.payload.name){return route;}const getId=routeGetIdList[route.name];const currentId=getId?.({params:route.params});const nextId=getId?.({params:action.payload.params});const key=currentId===nextId?route.key:`${route.name}-${nanoid()}`;let params;if((action.type==='NAVIGATE'||action.type==='NAVIGATE_DEPRECATED')&&action.payload.merge&&currentId===nextId){params=action.payload.params!==undefined||routeParamList[route.name]!==undefined?Object.assign({},routeParamList[route.name],route.params,action.payload.params):route.params;}else{params=routeParamList[route.name]!==undefined?Object.assign({},routeParamList[route.name],action.payload.params):action.payload.params;}const path=action.type==='NAVIGATE'&&action.payload.path!=null?action.payload.path:route.path;return params!==route.params||path!==route.path?Object.assign({},route,{key,path,params}):route;})}),index,backBehavior,initialRouteName);return Object.assign({},updatedState,{preloadedRouteKeys:updatedState.preloadedRouteKeys.filter(key=>key!==state.routes[updatedState.index].key)});}case'GO_BACK':{if(state.history.length===1){return null;}const previousKey=state.history[state.history.length-2]?.key;const index=state.routes.findIndex(route=>route.key===previousKey);if(index===-1){return null;}return Object.assign({},state,{preloadedRouteKeys:state.preloadedRouteKeys.filter(key=>key!==state.routes[index].key),history:state.history.slice(0,-1),index});}case'PRELOAD':{const routeIndex=state.routes.findIndex(route=>route.name===action.payload.name);if(routeIndex===-1){return null;}const route=state.routes[routeIndex];const getId=routeGetIdList[route.name];const currentId=getId?.({params:route.params});const nextId=getId?.({params:action.payload.params});const key=currentId===nextId?route.key:`${route.name}-${nanoid()}`;const params=action.payload.params!==undefined||routeParamList[route.name]!==undefined?Object.assign({},routeParamList[route.name],action.payload.params):undefined;const newRoute=params!==route.params?Object.assign({},route,{key,params}):route;return Object.assign({},state,{preloadedRouteKeys:state.preloadedRouteKeys.filter(key=>key!==route.key).concat(newRoute.key),routes:state.routes.map((route,index)=>index===routeIndex?newRoute:route),history:key===route.key?state.history:state.history.filter(record=>record.key!==route.key)});}default:return BaseRouter.getStateForAction(state,action);}},actionCreators:TabActions});return router;}","map":{"version":3,"names":["nanoid","BaseRouter","TYPE_ROUTE","TabActions","jumpTo","name","params","type","payload","getRouteHistory","routes","index","backBehavior","initialRouteName","history","key","initialRouteIndex","i","unshift","findIndex","route","changeIndex","state","currentKey","filter","it","concat","Object","assign","TabRouter","router","getInitialState","routeNames","routeParamList","undefined","includes","indexOf","map","stale","preloadedRouteKeys","getRehydratedState","partialState","find","r","Math","min","max","length","routeKeys","getStateForRouteNamesChange","routeKeyChanges","getStateForRouteFocus","getStateForAction","action","routeGetIdList","updatedState","getId","currentId","nextId","merge","path","previousKey","slice","routeIndex","newRoute","record","actionCreators"],"sources":["/home/user/rork-vibesync-458/node_modules/@react-navigation/routers/src/TabRouter.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\n\nimport { BaseRouter } from './BaseRouter';\nimport type {\n  CommonNavigationAction,\n  DefaultRouterOptions,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n  Router,\n} from './types';\n\nexport type TabActionType = {\n  type: 'JUMP_TO';\n  payload: { name: string; params?: object };\n  source?: string;\n  target?: string;\n};\n\nexport type BackBehavior =\n  | 'initialRoute'\n  | 'firstRoute'\n  | 'history'\n  | 'order'\n  | 'none';\n\nexport type TabRouterOptions = DefaultRouterOptions & {\n  backBehavior?: BackBehavior;\n};\n\nexport type TabNavigationState<ParamList extends ParamListBase> = Omit<\n  NavigationState<ParamList>,\n  'history'\n> & {\n  /**\n   * Type of the router, in this case, it's tab.\n   */\n  type: 'tab';\n  /**\n   * List of previously visited route keys.\n   */\n  history: { type: 'route'; key: string }[];\n  /**\n   * List of routes' key, which are supposed to be preloaded before navigating to.\n   */\n  preloadedRouteKeys: string[];\n};\n\nexport type TabActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Jump to an existing tab.\n   *\n   * @param screen Name of the route to jump to.\n   * @param [params] Params object for the route.\n   */\n  jumpTo<RouteName extends Extract<keyof ParamList, string>>(\n    ...args: RouteName extends unknown\n      ? undefined extends ParamList[RouteName]\n        ? [screen: RouteName, params?: ParamList[RouteName]]\n        : [screen: RouteName, params: ParamList[RouteName]]\n      : never\n  ): void;\n};\n\nconst TYPE_ROUTE = 'route' as const;\n\nexport const TabActions = {\n  jumpTo(name: string, params?: object): TabActionType {\n    return { type: 'JUMP_TO', payload: { name, params } };\n  },\n};\n\nconst getRouteHistory = (\n  routes: Route<string>[],\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  const history = [{ type: TYPE_ROUTE, key: routes[index].key }];\n  let initialRouteIndex;\n\n  switch (backBehavior) {\n    case 'order':\n      for (let i = index; i > 0; i--) {\n        history.unshift({ type: TYPE_ROUTE, key: routes[i - 1].key });\n      }\n      break;\n    case 'firstRoute':\n      if (index !== 0) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[0].key,\n        });\n      }\n      break;\n    case 'initialRoute':\n      initialRouteIndex = routes.findIndex(\n        (route) => route.name === initialRouteName\n      );\n      initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n\n      if (index !== initialRouteIndex) {\n        history.unshift({\n          type: TYPE_ROUTE,\n          key: routes[initialRouteIndex].key,\n        });\n      }\n      break;\n    case 'history':\n      // The history will fill up on navigation\n      break;\n  }\n\n  return history;\n};\n\nconst changeIndex = (\n  state: TabNavigationState<ParamListBase>,\n  index: number,\n  backBehavior: BackBehavior,\n  initialRouteName: string | undefined\n) => {\n  let history;\n\n  if (backBehavior === 'history') {\n    const currentKey = state.routes[index].key;\n\n    history = state.history\n      .filter((it) => (it.type === 'route' ? it.key !== currentKey : false))\n      .concat({ type: TYPE_ROUTE, key: currentKey });\n  } else {\n    history = getRouteHistory(\n      state.routes,\n      index,\n      backBehavior,\n      initialRouteName\n    );\n  }\n\n  return {\n    ...state,\n    index,\n    history,\n  };\n};\n\nexport function TabRouter({\n  initialRouteName,\n  backBehavior = 'firstRoute',\n}: TabRouterOptions) {\n  const router: Router<\n    TabNavigationState<ParamListBase>,\n    TabActionType | CommonNavigationAction\n  > = {\n    ...BaseRouter,\n\n    type: 'tab',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const index =\n        initialRouteName !== undefined && routeNames.includes(initialRouteName)\n          ? routeNames.indexOf(initialRouteName)\n          : 0;\n\n      const routes = routeNames.map((name) => ({\n        name,\n        key: `${name}-${nanoid()}`,\n        params: routeParamList[name],\n      }));\n\n      const history = getRouteHistory(\n        routes,\n        index,\n        backBehavior,\n        initialRouteName\n      );\n\n      return {\n        stale: false,\n        type: 'tab',\n        key: `tab-${nanoid()}`,\n        index,\n        routeNames,\n        history,\n        routes,\n        preloadedRouteKeys: [],\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      const state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = routeNames.map((name) => {\n        const route = (\n          state as PartialState<TabNavigationState<ParamListBase>>\n        ).routes.find((r) => r.name === name);\n\n        return {\n          ...route,\n          name,\n          key:\n            route && route.name === name && route.key\n              ? route.key\n              : `${name}-${nanoid()}`,\n          params:\n            routeParamList[name] !== undefined\n              ? {\n                  ...routeParamList[name],\n                  ...(route ? route.params : undefined),\n                }\n              : route\n                ? route.params\n                : undefined,\n        } as Route<string>;\n      });\n\n      const index = Math.min(\n        Math.max(routeNames.indexOf(state.routes[state?.index ?? 0]?.name), 0),\n        routes.length - 1\n      );\n\n      const routeKeys = routes.map((route) => route.key);\n\n      const history =\n        state.history?.filter((it) => routeKeys.includes(it.key)) ?? [];\n\n      return changeIndex(\n        {\n          stale: false,\n          type: 'tab',\n          key: `tab-${nanoid()}`,\n          index,\n          routeNames,\n          history,\n          routes,\n          preloadedRouteKeys:\n            state.preloadedRouteKeys?.filter((key) =>\n              routeKeys.includes(key)\n            ) ?? [],\n        },\n        index,\n        backBehavior,\n        initialRouteName\n      );\n    },\n\n    getStateForRouteNamesChange(\n      state,\n      { routeNames, routeParamList, routeKeyChanges }\n    ) {\n      const routes = routeNames.map(\n        (name) =>\n          state.routes.find(\n            (r) => r.name === name && !routeKeyChanges.includes(r.name)\n          ) || {\n            name,\n            key: `${name}-${nanoid()}`,\n            params: routeParamList[name],\n          }\n      );\n\n      const index = Math.max(\n        0,\n        routeNames.indexOf(state.routes[state.index].name)\n      );\n\n      let history = state.history.filter(\n        // Type will always be 'route' for tabs, but could be different in a router extending this (e.g. drawer)\n        (it) => it.type !== 'route' || routes.find((r) => r.key === it.key)\n      );\n\n      if (!history.length) {\n        history = getRouteHistory(\n          routes,\n          index,\n          backBehavior,\n          initialRouteName\n        );\n      }\n\n      return {\n        ...state,\n        history,\n        routeNames,\n        routes,\n        index,\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return changeIndex(state, index, backBehavior, initialRouteName);\n    },\n\n    getStateForAction(state, action, { routeParamList, routeGetIdList }) {\n      switch (action.type) {\n        case 'JUMP_TO':\n        case 'NAVIGATE':\n        case 'NAVIGATE_DEPRECATED': {\n          const index = state.routes.findIndex(\n            (route) => route.name === action.payload.name\n          );\n\n          if (index === -1) {\n            return null;\n          }\n\n          const updatedState = changeIndex(\n            {\n              ...state,\n              routes: state.routes.map((route) => {\n                if (route.name !== action.payload.name) {\n                  return route;\n                }\n\n                const getId = routeGetIdList[route.name];\n\n                const currentId = getId?.({ params: route.params });\n                const nextId = getId?.({ params: action.payload.params });\n\n                const key =\n                  currentId === nextId\n                    ? route.key\n                    : `${route.name}-${nanoid()}`;\n\n                let params;\n\n                if (\n                  (action.type === 'NAVIGATE' ||\n                    action.type === 'NAVIGATE_DEPRECATED') &&\n                  action.payload.merge &&\n                  currentId === nextId\n                ) {\n                  params =\n                    action.payload.params !== undefined ||\n                    routeParamList[route.name] !== undefined\n                      ? {\n                          ...routeParamList[route.name],\n                          ...route.params,\n                          ...action.payload.params,\n                        }\n                      : route.params;\n                } else {\n                  params =\n                    routeParamList[route.name] !== undefined\n                      ? {\n                          ...routeParamList[route.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params;\n                }\n\n                const path =\n                  action.type === 'NAVIGATE' && action.payload.path != null\n                    ? action.payload.path\n                    : route.path;\n\n                return params !== route.params || path !== route.path\n                  ? { ...route, key, path, params }\n                  : route;\n              }),\n            },\n            index,\n            backBehavior,\n            initialRouteName\n          );\n\n          return {\n            ...updatedState,\n            preloadedRouteKeys: updatedState.preloadedRouteKeys.filter(\n              (key) => key !== state.routes[updatedState.index].key\n            ),\n          };\n        }\n\n        case 'GO_BACK': {\n          if (state.history.length === 1) {\n            return null;\n          }\n\n          const previousKey = state.history[state.history.length - 2]?.key;\n          const index = state.routes.findIndex(\n            (route) => route.key === previousKey\n          );\n\n          if (index === -1) {\n            return null;\n          }\n\n          return {\n            ...state,\n            preloadedRouteKeys: state.preloadedRouteKeys.filter(\n              (key) => key !== state.routes[index].key\n            ),\n            history: state.history.slice(0, -1),\n            index,\n          };\n        }\n\n        case 'PRELOAD': {\n          const routeIndex = state.routes.findIndex(\n            (route) => route.name === action.payload.name\n          );\n          if (routeIndex === -1) {\n            return null;\n          }\n          const route = state.routes[routeIndex];\n\n          const getId = routeGetIdList[route.name];\n\n          const currentId = getId?.({ params: route.params });\n          const nextId = getId?.({ params: action.payload.params });\n\n          const key =\n            currentId === nextId ? route.key : `${route.name}-${nanoid()}`;\n\n          const params =\n            action.payload.params !== undefined ||\n            routeParamList[route.name] !== undefined\n              ? {\n                  ...routeParamList[route.name],\n                  ...action.payload.params,\n                }\n              : undefined;\n\n          const newRoute =\n            params !== route.params ? { ...route, key, params } : route;\n\n          return {\n            ...state,\n            preloadedRouteKeys: state.preloadedRouteKeys\n              .filter((key) => key !== route.key)\n              .concat(newRoute.key),\n            routes: state.routes.map((route, index) =>\n              index === routeIndex ? newRoute : route\n            ),\n            history:\n              key === route.key\n                ? state.history\n                : state.history.filter((record) => record.key !== route.key),\n          };\n        }\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    actionCreators: TabActions,\n  };\n\n  return router;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}