{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"testOnly_pressed\",\"hitSlop\",\"pressRetentionOffset\",\"delayHoverIn\",\"onHoverIn\",\"delayHoverOut\",\"onHoverOut\",\"delayLongPress\",\"unstable_pressDelay\",\"onPress\",\"onPressIn\",\"onPressOut\",\"onLongPress\",\"style\",\"children\",\"android_disableSound\",\"android_ripple\",\"disabled\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{useCallback,useMemo,useRef,useState}from'react';import{GestureObjects as Gesture}from'../../handlers/gestures/gestureObjects';import{GestureDetector}from'../../handlers/gestures/GestureDetector';import Platform from\"react-native-web/dist/exports/Platform\";import processColor from\"react-native-web/dist/exports/processColor\";import NativeButton from'../GestureHandlerButton';import{numberAsInset,gestureToPressableEvent,isTouchWithinInset,gestureTouchToPressableEvent,addInsets}from'./utils';import{PressabilityDebugView}from'../../handlers/PressabilityDebugView';import{INT32_MAX,isFabric,isTestEnv}from'../../utils';const DEFAULT_LONG_PRESS_DURATION=500;const IS_TEST_ENV=isTestEnv();let IS_FABRIC=null;const _worklet_13008698270117_init_data={code:\"function reactNativeGestureHandler_PressableJs1(event){const{hoverOutTimeout,clearTimeout,delayHoverIn,hoverInTimeout,setTimeout,onHoverIn,gestureToPressableEvent}=this.__closure;if(hoverOutTimeout.current){clearTimeout(hoverOutTimeout.current);}if(delayHoverIn){hoverInTimeout.current=setTimeout(function(){return onHoverIn===null||onHoverIn===void 0?void 0:onHoverIn(gestureToPressableEvent(event));},delayHoverIn);return;}onHoverIn===null||onHoverIn===void 0?void 0:onHoverIn(gestureToPressableEvent(event));}\"};const _worklet_4962952881647_init_data={code:\"function reactNativeGestureHandler_PressableJs2(event){const{hoverInTimeout,clearTimeout,delayHoverOut,hoverOutTimeout,setTimeout,onHoverOut,gestureToPressableEvent}=this.__closure;if(hoverInTimeout.current){clearTimeout(hoverInTimeout.current);}if(delayHoverOut){hoverOutTimeout.current=setTimeout(function(){return onHoverOut===null||onHoverOut===void 0?void 0:onHoverOut(gestureToPressableEvent(event));},delayHoverOut);return;}onHoverOut===null||onHoverOut===void 0?void 0:onHoverOut(gestureToPressableEvent(event));}\"};const _worklet_13737626960471_init_data={code:\"function reactNativeGestureHandler_PressableJs3(event){const{handlingOnTouchesDown,pressableRef,isTouchWithinInset,normalizedHitSlop,hasPassedBoundsChecks,cancelledMidPress,onEndHandlingTouchesDown,longPressTimeoutRef,setTimeout,activateLongPress,longPressMinDuration,unstable_pressDelay,pressDelayTimeoutRef,pressInHandler,gestureTouchToPressableEvent}=this.__closure;var _pressableRef$current;handlingOnTouchesDown.current=true;(_pressableRef$current=pressableRef.current)===null||_pressableRef$current===void 0?void 0:_pressableRef$current.measure(function(_x,_y,width,height){var _onEndHandlingTouches;if(!isTouchWithinInset({width:width,height:height},normalizedHitSlop,event.changedTouches.at(-1))||hasPassedBoundsChecks.current||cancelledMidPress.current){cancelledMidPress.current=false;onEndHandlingTouchesDown.current=null;handlingOnTouchesDown.current=false;return;}hasPassedBoundsChecks.current=true;if(longPressTimeoutRef.current===null){longPressTimeoutRef.current=setTimeout(function(){return activateLongPress(event);},longPressMinDuration);}if(unstable_pressDelay){pressDelayTimeoutRef.current=setTimeout(function(){pressInHandler(gestureTouchToPressableEvent(event));},unstable_pressDelay);}else{pressInHandler(gestureTouchToPressableEvent(event));}(_onEndHandlingTouches=onEndHandlingTouchesDown.current)===null||_onEndHandlingTouches===void 0?void 0:_onEndHandlingTouches.call(onEndHandlingTouchesDown);onEndHandlingTouchesDown.current=null;handlingOnTouchesDown.current=false;});}\"};const _worklet_16520707553157_init_data={code:\"function reactNativeGestureHandler_PressableJs4(event){const{handlingOnTouchesDown,onEndHandlingTouchesDown,pressOutHandler,gestureTouchToPressableEvent,deferredEventPayload,shouldPreventNativeEffects}=this.__closure;if(handlingOnTouchesDown.current){onEndHandlingTouchesDown.current=function(){return pressOutHandler(gestureTouchToPressableEvent(event));};return;}if(deferredEventPayload.current!==null){shouldPreventNativeEffects.current=true;}pressOutHandler(gestureTouchToPressableEvent(event));}\"};const _worklet_5577263905475_init_data={code:\"function reactNativeGestureHandler_PressableJs5(event){const{isPressCallbackEnabled,handlingOnTouchesDown,cancelledMidPress,onEndHandlingTouchesDown,pressOutHandler,gestureTouchToPressableEvent,hasPassedBoundsChecks}=this.__closure;isPressCallbackEnabled.current=false;if(handlingOnTouchesDown.current){cancelledMidPress.current=true;onEndHandlingTouchesDown.current=function(){return pressOutHandler(gestureTouchToPressableEvent(event));};return;}if(!hasPassedBoundsChecks.current||event.allTouches.length>event.changedTouches.length){return;}pressOutHandler(gestureTouchToPressableEvent(event));}\"};const _worklet_15208493945624_init_data={code:\"function reactNativeGestureHandler_PressableJs6(){const{Platform,isTouchPropagationAllowed}=this.__closure;if(Platform.OS==='android'||Platform.OS==='macos'){isTouchPropagationAllowed.current=true;}}\"};const _worklet_11752004859077_init_data={code:\"function reactNativeGestureHandler_PressableJs7(){const{Platform,isTouchPropagationAllowed,deferredEventPayload,hasPassedBoundsChecks,pressInHandler,pressOutHandler,shouldPreventNativeEffects}=this.__closure;if(Platform.OS==='web'){isTouchPropagationAllowed.current=true;}if(Platform.OS!=='ios'){return;}if(deferredEventPayload.current){isTouchPropagationAllowed.current=true;if(hasPassedBoundsChecks.current){pressInHandler(deferredEventPayload.current);deferredEventPayload.current=null;}else{pressOutHandler(deferredEventPayload.current);isTouchPropagationAllowed.current=false;}return;}if(hasPassedBoundsChecks.current){isTouchPropagationAllowed.current=true;return;}if(shouldPreventNativeEffects.current){shouldPreventNativeEffects.current=false;return;}isTouchPropagationAllowed.current=true;}\"};export default function Pressable(props){var _android_ripple$radiu;const{testOnly_pressed,hitSlop,pressRetentionOffset,delayHoverIn,onHoverIn,delayHoverOut,onHoverOut,delayLongPress,unstable_pressDelay,onPress,onPressIn,onPressOut,onLongPress,style,children,android_disableSound,android_ripple,disabled}=props,remainingProps=_objectWithoutPropertiesLoose(props,_excluded);const[pressedState,setPressedState]=useState(testOnly_pressed!==null&&testOnly_pressed!==void 0?testOnly_pressed:false);const pressableRef=useRef(null);const isPressCallbackEnabled=useRef(true);const hasPassedBoundsChecks=useRef(false);const shouldPreventNativeEffects=useRef(false);const normalizedHitSlop=useMemo(()=>typeof hitSlop==='number'?numberAsInset(hitSlop):hitSlop!==null&&hitSlop!==void 0?hitSlop:{},[hitSlop]);const normalizedPressRetentionOffset=useMemo(()=>typeof pressRetentionOffset==='number'?numberAsInset(pressRetentionOffset):pressRetentionOffset!==null&&pressRetentionOffset!==void 0?pressRetentionOffset:{},[pressRetentionOffset]);const hoverInTimeout=useRef(null);const hoverOutTimeout=useRef(null);const hoverGesture=useMemo(()=>Gesture.Hover().manualActivation(true).cancelsTouchesInView(false).onBegin(function(){const reactNativeGestureHandler_PressableJs1=function(event){if(hoverOutTimeout.current){clearTimeout(hoverOutTimeout.current);}if(delayHoverIn){hoverInTimeout.current=setTimeout(()=>onHoverIn===null||onHoverIn===void 0?void 0:onHoverIn(gestureToPressableEvent(event)),delayHoverIn);return;}onHoverIn===null||onHoverIn===void 0?void 0:onHoverIn(gestureToPressableEvent(event));};reactNativeGestureHandler_PressableJs1.__closure={hoverOutTimeout,clearTimeout,delayHoverIn,hoverInTimeout,setTimeout,onHoverIn,gestureToPressableEvent};reactNativeGestureHandler_PressableJs1.__workletHash=13008698270117;reactNativeGestureHandler_PressableJs1.__initData=_worklet_13008698270117_init_data;return reactNativeGestureHandler_PressableJs1;}()).onFinalize(function(){const reactNativeGestureHandler_PressableJs2=function(event){if(hoverInTimeout.current){clearTimeout(hoverInTimeout.current);}if(delayHoverOut){hoverOutTimeout.current=setTimeout(()=>onHoverOut===null||onHoverOut===void 0?void 0:onHoverOut(gestureToPressableEvent(event)),delayHoverOut);return;}onHoverOut===null||onHoverOut===void 0?void 0:onHoverOut(gestureToPressableEvent(event));};reactNativeGestureHandler_PressableJs2.__closure={hoverInTimeout,clearTimeout,delayHoverOut,hoverOutTimeout,setTimeout,onHoverOut,gestureToPressableEvent};reactNativeGestureHandler_PressableJs2.__workletHash=4962952881647;reactNativeGestureHandler_PressableJs2.__initData=_worklet_4962952881647_init_data;return reactNativeGestureHandler_PressableJs2;}()),[delayHoverIn,delayHoverOut,onHoverIn,onHoverOut]);const pressDelayTimeoutRef=useRef(null);const isTouchPropagationAllowed=useRef(false);const deferredEventPayload=useRef(null);const pressInHandler=useCallback(event=>{if(handlingOnTouchesDown.current){deferredEventPayload.current=event;}if(!isTouchPropagationAllowed.current){return;}deferredEventPayload.current=null;onPressIn===null||onPressIn===void 0?void 0:onPressIn(event);isPressCallbackEnabled.current=true;pressDelayTimeoutRef.current=null;setPressedState(true);},[onPressIn]);const pressOutHandler=useCallback(event=>{if(!hasPassedBoundsChecks.current||event.nativeEvent.touches.length>event.nativeEvent.changedTouches.length){return;}if(unstable_pressDelay&&pressDelayTimeoutRef.current!==null){clearTimeout(pressDelayTimeoutRef.current);pressInHandler(event);}if(deferredEventPayload.current){onPressIn===null||onPressIn===void 0?void 0:onPressIn(deferredEventPayload.current);deferredEventPayload.current=null;}onPressOut===null||onPressOut===void 0?void 0:onPressOut(event);if(isPressCallbackEnabled.current){onPress===null||onPress===void 0?void 0:onPress(event);}if(longPressTimeoutRef.current){clearTimeout(longPressTimeoutRef.current);longPressTimeoutRef.current=null;}isTouchPropagationAllowed.current=false;hasPassedBoundsChecks.current=false;isPressCallbackEnabled.current=true;setPressedState(false);},[onPress,onPressIn,onPressOut,pressInHandler,unstable_pressDelay]);const handlingOnTouchesDown=useRef(false);const onEndHandlingTouchesDown=useRef(null);const cancelledMidPress=useRef(false);const activateLongPress=useCallback(event=>{if(!isTouchPropagationAllowed.current){return;}if(hasPassedBoundsChecks.current){onLongPress===null||onLongPress===void 0?void 0:onLongPress(gestureTouchToPressableEvent(event));isPressCallbackEnabled.current=false;}if(longPressTimeoutRef.current){clearTimeout(longPressTimeoutRef.current);longPressTimeoutRef.current=null;}},[onLongPress]);const longPressTimeoutRef=useRef(null);const longPressMinDuration=(delayLongPress!==null&&delayLongPress!==void 0?delayLongPress:DEFAULT_LONG_PRESS_DURATION)+(unstable_pressDelay!==null&&unstable_pressDelay!==void 0?unstable_pressDelay:0);const pressAndTouchGesture=useMemo(()=>Gesture.LongPress().minDuration(INT32_MAX).maxDistance(INT32_MAX).cancelsTouchesInView(false).onTouchesDown(function(){const reactNativeGestureHandler_PressableJs3=function(event){var _pressableRef$current;handlingOnTouchesDown.current=true;(_pressableRef$current=pressableRef.current)===null||_pressableRef$current===void 0?void 0:_pressableRef$current.measure((_x,_y,width,height)=>{var _onEndHandlingTouches;if(!isTouchWithinInset({width,height},normalizedHitSlop,event.changedTouches.at(-1))||hasPassedBoundsChecks.current||cancelledMidPress.current){cancelledMidPress.current=false;onEndHandlingTouchesDown.current=null;handlingOnTouchesDown.current=false;return;}hasPassedBoundsChecks.current=true;if(longPressTimeoutRef.current===null){longPressTimeoutRef.current=setTimeout(()=>activateLongPress(event),longPressMinDuration);}if(unstable_pressDelay){pressDelayTimeoutRef.current=setTimeout(()=>{pressInHandler(gestureTouchToPressableEvent(event));},unstable_pressDelay);}else{pressInHandler(gestureTouchToPressableEvent(event));}(_onEndHandlingTouches=onEndHandlingTouchesDown.current)===null||_onEndHandlingTouches===void 0?void 0:_onEndHandlingTouches.call(onEndHandlingTouchesDown);onEndHandlingTouchesDown.current=null;handlingOnTouchesDown.current=false;});};reactNativeGestureHandler_PressableJs3.__closure={handlingOnTouchesDown,pressableRef,isTouchWithinInset,normalizedHitSlop,hasPassedBoundsChecks,cancelledMidPress,onEndHandlingTouchesDown,longPressTimeoutRef,setTimeout,activateLongPress,longPressMinDuration,unstable_pressDelay,pressDelayTimeoutRef,pressInHandler,gestureTouchToPressableEvent};reactNativeGestureHandler_PressableJs3.__workletHash=13737626960471;reactNativeGestureHandler_PressableJs3.__initData=_worklet_13737626960471_init_data;return reactNativeGestureHandler_PressableJs3;}()).onTouchesUp(function(){const reactNativeGestureHandler_PressableJs4=function(event){if(handlingOnTouchesDown.current){onEndHandlingTouchesDown.current=()=>pressOutHandler(gestureTouchToPressableEvent(event));return;}if(deferredEventPayload.current!==null){shouldPreventNativeEffects.current=true;}pressOutHandler(gestureTouchToPressableEvent(event));};reactNativeGestureHandler_PressableJs4.__closure={handlingOnTouchesDown,onEndHandlingTouchesDown,pressOutHandler,gestureTouchToPressableEvent,deferredEventPayload,shouldPreventNativeEffects};reactNativeGestureHandler_PressableJs4.__workletHash=16520707553157;reactNativeGestureHandler_PressableJs4.__initData=_worklet_16520707553157_init_data;return reactNativeGestureHandler_PressableJs4;}()).onTouchesCancelled(function(){const reactNativeGestureHandler_PressableJs5=function(event){isPressCallbackEnabled.current=false;if(handlingOnTouchesDown.current){cancelledMidPress.current=true;onEndHandlingTouchesDown.current=()=>pressOutHandler(gestureTouchToPressableEvent(event));return;}if(!hasPassedBoundsChecks.current||event.allTouches.length>event.changedTouches.length){return;}pressOutHandler(gestureTouchToPressableEvent(event));};reactNativeGestureHandler_PressableJs5.__closure={isPressCallbackEnabled,handlingOnTouchesDown,cancelledMidPress,onEndHandlingTouchesDown,pressOutHandler,gestureTouchToPressableEvent,hasPassedBoundsChecks};reactNativeGestureHandler_PressableJs5.__workletHash=5577263905475;reactNativeGestureHandler_PressableJs5.__initData=_worklet_5577263905475_init_data;return reactNativeGestureHandler_PressableJs5;}()),[activateLongPress,longPressMinDuration,normalizedHitSlop,pressInHandler,pressOutHandler,unstable_pressDelay]);const buttonGesture=useMemo(()=>Gesture.Native().onBegin(function(){const reactNativeGestureHandler_PressableJs6=function(){if(false||false){isTouchPropagationAllowed.current=true;}};reactNativeGestureHandler_PressableJs6.__closure={Platform,isTouchPropagationAllowed};reactNativeGestureHandler_PressableJs6.__workletHash=15208493945624;reactNativeGestureHandler_PressableJs6.__initData=_worklet_15208493945624_init_data;return reactNativeGestureHandler_PressableJs6;}()).onStart(function(){const reactNativeGestureHandler_PressableJs7=function(){if(true){isTouchPropagationAllowed.current=true;}if(true){return;}if(deferredEventPayload.current){isTouchPropagationAllowed.current=true;if(hasPassedBoundsChecks.current){pressInHandler(deferredEventPayload.current);deferredEventPayload.current=null;}else{pressOutHandler(deferredEventPayload.current);isTouchPropagationAllowed.current=false;}return;}if(hasPassedBoundsChecks.current){isTouchPropagationAllowed.current=true;return;}if(shouldPreventNativeEffects.current){shouldPreventNativeEffects.current=false;return;}isTouchPropagationAllowed.current=true;};reactNativeGestureHandler_PressableJs7.__closure={Platform,isTouchPropagationAllowed,deferredEventPayload,hasPassedBoundsChecks,pressInHandler,pressOutHandler,shouldPreventNativeEffects};reactNativeGestureHandler_PressableJs7.__workletHash=11752004859077;reactNativeGestureHandler_PressableJs7.__initData=_worklet_11752004859077_init_data;return reactNativeGestureHandler_PressableJs7;}()),[pressInHandler,pressOutHandler]);const appliedHitSlop=addInsets(normalizedHitSlop,normalizedPressRetentionOffset);const isPressableEnabled=disabled!==true;const gestures=[buttonGesture,pressAndTouchGesture,hoverGesture];for(const gesture of gestures){gesture.enabled(isPressableEnabled);gesture.runOnJS(true);gesture.hitSlop(appliedHitSlop);gesture.shouldCancelWhenOutside(true?false:true);}buttonGesture.hitSlop(normalizedHitSlop);const gesture=Gesture.Simultaneous(...gestures);const pointerStyle=true?{cursor:'pointer'}:{};const styleProp=typeof style==='function'?style({pressed:pressedState}):style;const childrenProp=typeof children==='function'?children({pressed:pressedState}):children;const rippleColor=useMemo(()=>{var _android_ripple$color;if(IS_FABRIC===null){IS_FABRIC=isFabric();}const defaultRippleColor=android_ripple?undefined:'transparent';const unprocessedRippleColor=(_android_ripple$color=android_ripple===null||android_ripple===void 0?void 0:android_ripple.color)!==null&&_android_ripple$color!==void 0?_android_ripple$color:defaultRippleColor;return IS_FABRIC?unprocessedRippleColor:processColor(unprocessedRippleColor);},[android_ripple]);return React.createElement(GestureDetector,{gesture:gesture},React.createElement(NativeButton,_extends({},remainingProps,{ref:pressableRef,hitSlop:appliedHitSlop,enabled:isPressableEnabled,touchSoundDisabled:android_disableSound!==null&&android_disableSound!==void 0?android_disableSound:undefined,rippleColor:rippleColor,rippleRadius:(_android_ripple$radiu=android_ripple===null||android_ripple===void 0?void 0:android_ripple.radius)!==null&&_android_ripple$radiu!==void 0?_android_ripple$radiu:undefined,style:[pointerStyle,styleProp],testOnly_onPress:IS_TEST_ENV?onPress:undefined,testOnly_onPressIn:IS_TEST_ENV?onPressIn:undefined,testOnly_onPressOut:IS_TEST_ENV?onPressOut:undefined,testOnly_onLongPress:IS_TEST_ENV?onLongPress:undefined}),childrenProp,false?React.createElement(PressabilityDebugView,{color:\"red\",hitSlop:normalizedHitSlop}):null));}","map":{"version":3,"names":["React","useCallback","useMemo","useRef","useState","GestureObjects","Gesture","GestureDetector","Platform","processColor","NativeButton","numberAsInset","gestureToPressableEvent","isTouchWithinInset","gestureTouchToPressableEvent","addInsets","PressabilityDebugView","INT32_MAX","isFabric","isTestEnv","DEFAULT_LONG_PRESS_DURATION","IS_TEST_ENV","IS_FABRIC","_worklet_13008698270117_init_data","code","_worklet_4962952881647_init_data","_worklet_13737626960471_init_data","_worklet_16520707553157_init_data","_worklet_5577263905475_init_data","_worklet_15208493945624_init_data","_worklet_11752004859077_init_data","Pressable","props","_android_ripple$radiu","testOnly_pressed","hitSlop","pressRetentionOffset","delayHoverIn","onHoverIn","delayHoverOut","onHoverOut","delayLongPress","unstable_pressDelay","onPress","onPressIn","onPressOut","onLongPress","style","children","android_disableSound","android_ripple","disabled","remainingProps","_objectWithoutPropertiesLoose","_excluded","pressedState","setPressedState","pressableRef","isPressCallbackEnabled","hasPassedBoundsChecks","shouldPreventNativeEffects","normalizedHitSlop","normalizedPressRetentionOffset","hoverInTimeout","hoverOutTimeout","hoverGesture","Hover","manualActivation","cancelsTouchesInView","onBegin","reactNativeGestureHandler_PressableJs1","event","current","clearTimeout","setTimeout","__closure","__workletHash","__initData","onFinalize","reactNativeGestureHandler_PressableJs2","pressDelayTimeoutRef","isTouchPropagationAllowed","deferredEventPayload","pressInHandler","handlingOnTouchesDown","pressOutHandler","nativeEvent","touches","length","changedTouches","longPressTimeoutRef","onEndHandlingTouchesDown","cancelledMidPress","activateLongPress","longPressMinDuration","pressAndTouchGesture","LongPress","minDuration","maxDistance","onTouchesDown","reactNativeGestureHandler_PressableJs3","_pressableRef$current","measure","_x","_y","width","height","_onEndHandlingTouches","at","call","onTouchesUp","reactNativeGestureHandler_PressableJs4","onTouchesCancelled","reactNativeGestureHandler_PressableJs5","allTouches","buttonGesture","Native","reactNativeGestureHandler_PressableJs6","onStart","reactNativeGestureHandler_PressableJs7","appliedHitSlop","isPressableEnabled","gestures","gesture","enabled","runOnJS","shouldCancelWhenOutside","Simultaneous","pointerStyle","cursor","styleProp","pressed","childrenProp","rippleColor","_android_ripple$color","defaultRippleColor","undefined","unprocessedRippleColor","color","createElement","_extends","ref","touchSoundDisabled","rippleRadius","radius","testOnly_onPress","testOnly_onPressIn","testOnly_onPressOut","testOnly_onLongPress"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-gesture-handler/lib/module/components/Pressable/Pressable.tsx"],"sourcesContent":["import React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { GestureObjects as Gesture } from '../../handlers/gestures/gestureObjects';\nimport { GestureDetector } from '../../handlers/gestures/GestureDetector';\nimport { PressableEvent, PressableProps } from './PressableProps';\nimport {\n  Insets,\n  Platform,\n  StyleProp,\n  View,\n  ViewStyle,\n  processColor,\n} from 'react-native';\nimport NativeButton from '../GestureHandlerButton';\nimport {\n  numberAsInset,\n  gestureToPressableEvent,\n  isTouchWithinInset,\n  gestureTouchToPressableEvent,\n  addInsets,\n} from './utils';\nimport { PressabilityDebugView } from '../../handlers/PressabilityDebugView';\nimport { GestureTouchEvent } from '../../handlers/gestureHandlerCommon';\nimport { INT32_MAX, isFabric, isTestEnv } from '../../utils';\n\nconst DEFAULT_LONG_PRESS_DURATION = 500;\nconst IS_TEST_ENV = isTestEnv();\n\nlet IS_FABRIC: null | boolean = null;\n\nexport default function Pressable(props: PressableProps) {\n  const {\n    testOnly_pressed,\n    hitSlop,\n    pressRetentionOffset,\n    delayHoverIn,\n    onHoverIn,\n    delayHoverOut,\n    onHoverOut,\n    delayLongPress,\n    unstable_pressDelay,\n    onPress,\n    onPressIn,\n    onPressOut,\n    onLongPress,\n    style,\n    children,\n    android_disableSound,\n    android_ripple,\n    disabled,\n    ...remainingProps\n  } = props;\n\n  const [pressedState, setPressedState] = useState(testOnly_pressed ?? false);\n\n  const pressableRef = useRef<View>(null);\n\n  // Disabled when onLongPress has been called\n  const isPressCallbackEnabled = useRef<boolean>(true);\n  const hasPassedBoundsChecks = useRef<boolean>(false);\n  const shouldPreventNativeEffects = useRef<boolean>(false);\n\n  const normalizedHitSlop: Insets = useMemo(\n    () =>\n      typeof hitSlop === 'number' ? numberAsInset(hitSlop) : (hitSlop ?? {}),\n    [hitSlop]\n  );\n\n  const normalizedPressRetentionOffset: Insets = useMemo(\n    () =>\n      typeof pressRetentionOffset === 'number'\n        ? numberAsInset(pressRetentionOffset)\n        : (pressRetentionOffset ?? {}),\n    [pressRetentionOffset]\n  );\n\n  const hoverInTimeout = useRef<number | null>(null);\n  const hoverOutTimeout = useRef<number | null>(null);\n\n  const hoverGesture = useMemo(\n    () =>\n      Gesture.Hover()\n        .manualActivation(true) // Stops Hover from blocking Native gesture activation on web\n        .cancelsTouchesInView(false)\n        .onBegin((event) => {\n          if (hoverOutTimeout.current) {\n            clearTimeout(hoverOutTimeout.current);\n          }\n          if (delayHoverIn) {\n            hoverInTimeout.current = setTimeout(\n              () => onHoverIn?.(gestureToPressableEvent(event)),\n              delayHoverIn\n            );\n            return;\n          }\n          onHoverIn?.(gestureToPressableEvent(event));\n        })\n        .onFinalize((event) => {\n          if (hoverInTimeout.current) {\n            clearTimeout(hoverInTimeout.current);\n          }\n          if (delayHoverOut) {\n            hoverOutTimeout.current = setTimeout(\n              () => onHoverOut?.(gestureToPressableEvent(event)),\n              delayHoverOut\n            );\n            return;\n          }\n          onHoverOut?.(gestureToPressableEvent(event));\n        }),\n    [delayHoverIn, delayHoverOut, onHoverIn, onHoverOut]\n  );\n\n  const pressDelayTimeoutRef = useRef<number | null>(null);\n  const isTouchPropagationAllowed = useRef<boolean>(false);\n\n  // iOS only: due to varying flow of gestures, events sometimes have to be saved for later use\n  const deferredEventPayload = useRef<PressableEvent | null>(null);\n\n  const pressInHandler = useCallback(\n    (event: PressableEvent) => {\n      if (handlingOnTouchesDown.current) {\n        deferredEventPayload.current = event;\n      }\n\n      if (!isTouchPropagationAllowed.current) {\n        return;\n      }\n\n      deferredEventPayload.current = null;\n\n      onPressIn?.(event);\n      isPressCallbackEnabled.current = true;\n      pressDelayTimeoutRef.current = null;\n      setPressedState(true);\n    },\n    [onPressIn]\n  );\n\n  const pressOutHandler = useCallback(\n    (event: PressableEvent) => {\n      if (\n        !hasPassedBoundsChecks.current ||\n        event.nativeEvent.touches.length >\n          event.nativeEvent.changedTouches.length\n      ) {\n        return;\n      }\n\n      if (unstable_pressDelay && pressDelayTimeoutRef.current !== null) {\n        // When delay is preemptively finished by lifting touches,\n        // we want to immediately activate it's effects - pressInHandler,\n        // even though we are located at the pressOutHandler\n        clearTimeout(pressDelayTimeoutRef.current);\n        pressInHandler(event);\n      }\n\n      if (deferredEventPayload.current) {\n        onPressIn?.(deferredEventPayload.current);\n        deferredEventPayload.current = null;\n      }\n\n      onPressOut?.(event);\n\n      if (isPressCallbackEnabled.current) {\n        onPress?.(event);\n      }\n\n      if (longPressTimeoutRef.current) {\n        clearTimeout(longPressTimeoutRef.current);\n        longPressTimeoutRef.current = null;\n      }\n\n      isTouchPropagationAllowed.current = false;\n      hasPassedBoundsChecks.current = false;\n      isPressCallbackEnabled.current = true;\n      setPressedState(false);\n    },\n    [onPress, onPressIn, onPressOut, pressInHandler, unstable_pressDelay]\n  );\n\n  const handlingOnTouchesDown = useRef<boolean>(false);\n  const onEndHandlingTouchesDown = useRef<(() => void) | null>(null);\n  const cancelledMidPress = useRef<boolean>(false);\n\n  const activateLongPress = useCallback(\n    (event: GestureTouchEvent) => {\n      if (!isTouchPropagationAllowed.current) {\n        return;\n      }\n\n      if (hasPassedBoundsChecks.current) {\n        onLongPress?.(gestureTouchToPressableEvent(event));\n        isPressCallbackEnabled.current = false;\n      }\n\n      if (longPressTimeoutRef.current) {\n        clearTimeout(longPressTimeoutRef.current);\n        longPressTimeoutRef.current = null;\n      }\n    },\n    [onLongPress]\n  );\n\n  const longPressTimeoutRef = useRef<number | null>(null);\n  const longPressMinDuration =\n    (delayLongPress ?? DEFAULT_LONG_PRESS_DURATION) +\n    (unstable_pressDelay ?? 0);\n\n  const pressAndTouchGesture = useMemo(\n    () =>\n      Gesture.LongPress()\n        .minDuration(INT32_MAX) // Stops long press from blocking native gesture\n        .maxDistance(INT32_MAX) // Stops long press from cancelling after set distance\n        .cancelsTouchesInView(false)\n        .onTouchesDown((event) => {\n          handlingOnTouchesDown.current = true;\n          pressableRef.current?.measure((_x, _y, width, height) => {\n            if (\n              !isTouchWithinInset(\n                {\n                  width,\n                  height,\n                },\n                normalizedHitSlop,\n                event.changedTouches.at(-1)\n              ) ||\n              hasPassedBoundsChecks.current ||\n              cancelledMidPress.current\n            ) {\n              cancelledMidPress.current = false;\n              onEndHandlingTouchesDown.current = null;\n              handlingOnTouchesDown.current = false;\n              return;\n            }\n\n            hasPassedBoundsChecks.current = true;\n\n            // In case of multiple touches, the first one starts long press gesture\n            if (longPressTimeoutRef.current === null) {\n              // Start long press gesture timer\n              longPressTimeoutRef.current = setTimeout(\n                () => activateLongPress(event),\n                longPressMinDuration\n              );\n            }\n\n            if (unstable_pressDelay) {\n              pressDelayTimeoutRef.current = setTimeout(() => {\n                pressInHandler(gestureTouchToPressableEvent(event));\n              }, unstable_pressDelay);\n            } else {\n              pressInHandler(gestureTouchToPressableEvent(event));\n            }\n\n            onEndHandlingTouchesDown.current?.();\n            onEndHandlingTouchesDown.current = null;\n            handlingOnTouchesDown.current = false;\n          });\n        })\n        .onTouchesUp((event) => {\n          if (handlingOnTouchesDown.current) {\n            onEndHandlingTouchesDown.current = () =>\n              pressOutHandler(gestureTouchToPressableEvent(event));\n            return;\n          }\n          // On iOS, short taps will make LongPress gesture call onTouchesUp before Native gesture calls onStart\n          // This variable ensures that onStart isn't detected as the first gesture since Pressable is pressed.\n          if (deferredEventPayload.current !== null) {\n            shouldPreventNativeEffects.current = true;\n          }\n          pressOutHandler(gestureTouchToPressableEvent(event));\n        })\n        .onTouchesCancelled((event) => {\n          isPressCallbackEnabled.current = false;\n\n          if (handlingOnTouchesDown.current) {\n            cancelledMidPress.current = true;\n            onEndHandlingTouchesDown.current = () =>\n              pressOutHandler(gestureTouchToPressableEvent(event));\n            return;\n          }\n\n          if (\n            !hasPassedBoundsChecks.current ||\n            event.allTouches.length > event.changedTouches.length\n          ) {\n            return;\n          }\n\n          pressOutHandler(gestureTouchToPressableEvent(event));\n        }),\n    [\n      activateLongPress,\n      longPressMinDuration,\n      normalizedHitSlop,\n      pressInHandler,\n      pressOutHandler,\n      unstable_pressDelay,\n    ]\n  );\n\n  // RNButton is placed inside ButtonGesture to enable Android's ripple and to capture non-propagating events\n  const buttonGesture = useMemo(\n    () =>\n      Gesture.Native()\n        .onBegin(() => {\n          // Android sets BEGAN state on press down\n          if (Platform.OS === 'android' || Platform.OS === 'macos') {\n            isTouchPropagationAllowed.current = true;\n          }\n        })\n        .onStart(() => {\n          if (Platform.OS === 'web') {\n            isTouchPropagationAllowed.current = true;\n          }\n\n          // iOS sets ACTIVE state on press down\n          if (Platform.OS !== 'ios') {\n            return;\n          }\n\n          if (deferredEventPayload.current) {\n            isTouchPropagationAllowed.current = true;\n\n            if (hasPassedBoundsChecks.current) {\n              pressInHandler(deferredEventPayload.current);\n              deferredEventPayload.current = null;\n            } else {\n              pressOutHandler(deferredEventPayload.current);\n              isTouchPropagationAllowed.current = false;\n            }\n\n            return;\n          }\n\n          if (hasPassedBoundsChecks.current) {\n            isTouchPropagationAllowed.current = true;\n            return;\n          }\n\n          if (shouldPreventNativeEffects.current) {\n            shouldPreventNativeEffects.current = false;\n            return;\n          }\n\n          isTouchPropagationAllowed.current = true;\n        }),\n    [pressInHandler, pressOutHandler]\n  );\n\n  const appliedHitSlop = addInsets(\n    normalizedHitSlop,\n    normalizedPressRetentionOffset\n  );\n\n  const isPressableEnabled = disabled !== true;\n\n  const gestures = [buttonGesture, pressAndTouchGesture, hoverGesture];\n\n  for (const gesture of gestures) {\n    gesture.enabled(isPressableEnabled);\n    gesture.runOnJS(true);\n    gesture.hitSlop(appliedHitSlop);\n    gesture.shouldCancelWhenOutside(Platform.OS === 'web' ? false : true);\n  }\n\n  // Uses different hitSlop, to activate on hitSlop area instead of pressRetentionOffset area\n  buttonGesture.hitSlop(normalizedHitSlop);\n\n  const gesture = Gesture.Simultaneous(...gestures);\n\n  // `cursor: 'pointer'` on `RNButton` crashes iOS\n  const pointerStyle: StyleProp<ViewStyle> =\n    Platform.OS === 'web' ? { cursor: 'pointer' } : {};\n\n  const styleProp =\n    typeof style === 'function' ? style({ pressed: pressedState }) : style;\n\n  const childrenProp =\n    typeof children === 'function'\n      ? children({ pressed: pressedState })\n      : children;\n\n  const rippleColor = useMemo(() => {\n    if (IS_FABRIC === null) {\n      IS_FABRIC = isFabric();\n    }\n\n    const defaultRippleColor = android_ripple ? undefined : 'transparent';\n    const unprocessedRippleColor = android_ripple?.color ?? defaultRippleColor;\n    return IS_FABRIC\n      ? unprocessedRippleColor\n      : processColor(unprocessedRippleColor);\n  }, [android_ripple]);\n\n  return (\n    <GestureDetector gesture={gesture}>\n      <NativeButton\n        {...remainingProps}\n        ref={pressableRef}\n        hitSlop={appliedHitSlop}\n        enabled={isPressableEnabled}\n        touchSoundDisabled={android_disableSound ?? undefined}\n        rippleColor={rippleColor}\n        rippleRadius={android_ripple?.radius ?? undefined}\n        style={[pointerStyle, styleProp]}\n        testOnly_onPress={IS_TEST_ENV ? onPress : undefined}\n        testOnly_onPressIn={IS_TEST_ENV ? onPressIn : undefined}\n        testOnly_onPressOut={IS_TEST_ENV ? onPressOut : undefined}\n        testOnly_onLongPress={IS_TEST_ENV ? onLongPress : undefined}>\n        {childrenProp}\n        {__DEV__ ? (\n          <PressabilityDebugView color=\"red\" hitSlop={normalizedHitSlop} />\n        ) : null}\n      </NativeButton>\n    </GestureDetector>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}