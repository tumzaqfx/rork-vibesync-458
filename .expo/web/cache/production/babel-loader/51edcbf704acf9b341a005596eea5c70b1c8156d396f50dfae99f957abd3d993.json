{"ast":null,"code":"\"use strict\";'use client';var _react=require(\"react\");var _reactJsxRuntime=require(\"react/jsx-runtime\");var _objectWithoutPropertiesLoose=require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");const _excluded=[\"ErrorBoundary\"],_excluded2=[\"route\",\"navigation\"],_excluded3=[\"options\",\"getId\"];var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod};};Object.defineProperty(exports,\"__esModule\",{value:true});exports.useSortedScreens=useSortedScreens;exports.getQualifiedRouteComponent=getQualifiedRouteComponent;exports.screenOptionsFactory=screenOptionsFactory;exports.routeToScreen=routeToScreen;exports.getSingularId=getSingularId;const native_1=require(\"@react-navigation/native\");const react_1=__importDefault(require(\"react\"));const Route_1=require(\"./Route\");const storeContext_1=require(\"./global-state/storeContext\");const import_mode_1=__importDefault(require(\"./import-mode\"));const primitives_1=require(\"./primitives\");const EmptyRoute_1=require(\"./views/EmptyRoute\");const SuspenseFallback_1=require(\"./views/SuspenseFallback\");const Try_1=require(\"./views/Try\");function getSortedChildren(children,order=[],initialRouteName){if(!order?.length){return children.sort((0,Route_1.sortRoutesWithInitial)(initialRouteName)).map(route=>({route,props:{}}));}const entries=[...children];const ordered=order.map(({name,redirect,initialParams,listeners,options,getId,dangerouslySingular:singular})=>{if(!entries.length){console.warn(`[Layout children]: Too many screens defined. Route \"${name}\" is extraneous.`);return null;}const matchIndex=entries.findIndex(child=>child.route===name);if(matchIndex===-1){console.warn(`[Layout children]: No route named \"${name}\" exists in nested children:`,children.map(({route})=>route));return null;}else{const match=entries[matchIndex];entries.splice(matchIndex,1);if(redirect){if(typeof redirect==='string'){throw new Error(`Redirecting to a specific route is not supported yet.`);}return null;}if(getId){console.warn(`Deprecated: prop 'getId' on screen ${name} is deprecated. Please rename the prop to 'dangerouslySingular'`);if(singular){console.warn(`Screen ${name} cannot use both getId and dangerouslySingular together.`);}}else if(singular){if(typeof singular==='string'){getId=()=>singular;}else if(typeof singular==='function'&&name){getId=options=>singular(name,options.params||{});}else if(singular===true&&name){getId=options=>getSingularId(name,options);}}return{route:match,props:{initialParams,listeners,options,getId}};}}).filter(Boolean);ordered.push(...entries.sort((0,Route_1.sortRoutesWithInitial)(initialRouteName)).map(route=>({route,props:{}})));return ordered;}function useSortedScreens(order,protectedScreens){const node=(0,Route_1.useRouteNode)();const sorted=node?.children?.length?getSortedChildren(node.children,order,node.initialRouteName):[];return react_1.default.useMemo(()=>sorted.filter(item=>!protectedScreens.has(item.route.route)).map(value=>{return routeToScreen(value.route,value.props);}),[sorted,protectedScreens]);}function fromImport(value,_ref){let{ErrorBoundary}=_ref,component=_objectWithoutPropertiesLoose(_ref,_excluded);if(component?.default&&false){component.default.displayName??=`${component.default.name??'Route'}(${value.contextKey})`;}if(ErrorBoundary){const Wrapped=react_1.default.forwardRef((props,ref)=>{const children=react_1.default.createElement(component.default||EmptyRoute_1.EmptyRoute,Object.assign({},props,{ref}));return _reactJsxRuntime.jsx(Try_1.Try,{catch:ErrorBoundary,children:children});});if(false){Wrapped.displayName=`ErrorBoundary(${value.contextKey})`;}return{default:Wrapped};}if(false){if(typeof component.default==='object'&&component.default&&Object.keys(component.default).length===0){return{default:EmptyRoute_1.EmptyRoute};}}return{default:component.default};}function fromLoadedRoute(value,res){if(!(res instanceof Promise)){return fromImport(value,res);}return res.then(fromImport.bind(null,value));}const qualifiedStore=new WeakMap();function getQualifiedRouteComponent(value){if(qualifiedStore.has(value)){return qualifiedStore.get(value);}let ScreenComponent;if(import_mode_1.default==='lazy'){ScreenComponent=react_1.default.lazy(async()=>{const res=value.loadRoute();return fromLoadedRoute(value,res);});if(false){ScreenComponent.displayName=`AsyncRoute(${value.route})`;}}else{const res=value.loadRoute();ScreenComponent=fromImport(value,res).default;}function BaseRoute(_ref2){let{route,navigation}=_ref2,props=_objectWithoutPropertiesLoose(_ref2,_excluded2);const stateForPath=(0,native_1.useStateForPath)();const isFocused=(0,native_1.useIsFocused)();const store=(0,storeContext_1.useExpoRouterStore)();if(isFocused){const state=navigation.getState();const isLeaf=!('state'in state.routes[state.index]);if(isLeaf&&stateForPath)store.setFocusedState(stateForPath);}return _reactJsxRuntime.jsx(Route_1.Route,{node:value,route:route,children:_reactJsxRuntime.jsx(react_1.default.Suspense,{fallback:_reactJsxRuntime.jsx(SuspenseFallback_1.SuspenseFallback,{route:value}),children:_reactJsxRuntime.jsx(ScreenComponent,Object.assign({},props,{segment:value.route}))})});}if(false){BaseRoute.displayName=`Route(${value.route})`;}qualifiedStore.set(value,BaseRoute);return BaseRoute;}function screenOptionsFactory(route,options){return args=>{const staticOptions=route.generated?route.loadRoute()?.getNavOptions:null;const staticResult=typeof staticOptions==='function'?staticOptions(args):staticOptions;const dynamicResult=typeof options==='function'?options?.(args):options;const output=Object.assign({},staticResult,dynamicResult);if(route.generated){output.tabBarItemStyle={display:'none'};output.tabBarButton=()=>null;output.drawerItemStyle={height:0,display:'none'};}return output;};}function routeToScreen(route,_ref3={}){let{options,getId}=_ref3,props=_objectWithoutPropertiesLoose(_ref3,_excluded3);return _react.createElement(primitives_1.Screen,Object.assign({},props,{name:route.route,key:route.route,getId:getId,options:screenOptionsFactory(route,options),getComponent:()=>getQualifiedRouteComponent(route)}));}function getSingularId(name,options={}){return name.split('/').map(segment=>{if(segment.startsWith('[...')){return options.params?.[segment.slice(4,-1)]?.join('/')||segment;}else if(segment.startsWith('[')){return options.params?.[segment.slice(1,-1)]||segment;}else{return segment;}}).join('/');}","map":{"version":3,"names":["_react","require","_reactJsxRuntime","_objectWithoutPropertiesLoose","_excluded","_excluded2","_excluded3","exports","useSortedScreens","getQualifiedRouteComponent","screenOptionsFactory","routeToScreen","getSingularId","native_1","react_1","__importDefault","Route_1","storeContext_1","import_mode_1","primitives_1","EmptyRoute_1","SuspenseFallback_1","Try_1","getSortedChildren","children","order","initialRouteName","length","sort","sortRoutesWithInitial","map","route","props","entries","ordered","name","redirect","initialParams","listeners","options","getId","dangerouslySingular","singular","console","warn","matchIndex","findIndex","child","match","splice","Error","params","filter","Boolean","push","protectedScreens","node","useRouteNode","sorted","default","useMemo","item","has","value","fromImport","_ref","ErrorBoundary","component","displayName","contextKey","Wrapped","forwardRef","ref","createElement","EmptyRoute","Object","assign","jsx","Try","catch","keys","fromLoadedRoute","res","Promise","then","bind","qualifiedStore","WeakMap","get","ScreenComponent","lazy","loadRoute","BaseRoute","_ref2","navigation","stateForPath","useStateForPath","isFocused","useIsFocused","store","useExpoRouterStore","state","getState","isLeaf","routes","index","setFocusedState","Route","Suspense","fallback","SuspenseFallback","segment","set","args","staticOptions","generated","getNavOptions","staticResult","dynamicResult","output","tabBarItemStyle","display","tabBarButton","drawerItemStyle","height","_ref3","Screen","key","getComponent","split","startsWith","slice","join"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-router/src/useScreens.tsx"],"sourcesContent":["'use client';\n\nimport {\n  useIsFocused,\n  useStateForPath,\n  type EventMapBase,\n  type NavigationState,\n  type ParamListBase,\n  type RouteProp,\n  type ScreenListeners,\n} from '@react-navigation/native';\nimport React from 'react';\n\nimport { LoadedRoute, Route, RouteNode, sortRoutesWithInitial, useRouteNode } from './Route';\nimport { useExpoRouterStore } from './global-state/storeContext';\nimport EXPO_ROUTER_IMPORT_MODE from './import-mode';\nimport { Screen } from './primitives';\nimport { UnknownOutputParams } from './types';\nimport { EmptyRoute } from './views/EmptyRoute';\nimport { SuspenseFallback } from './views/SuspenseFallback';\nimport { Try } from './views/Try';\n\nexport type ScreenProps<\n  TOptions extends Record<string, any> = Record<string, any>,\n  TState extends NavigationState = NavigationState,\n  TEventMap extends EventMapBase = EventMapBase,\n> = {\n  /** Name is required when used inside a Layout component. */\n  name?: string;\n  /**\n   * Redirect to the nearest sibling route.\n   * If all children are `redirect={true}`, the layout will render `null` as there are no children to render.\n   */\n  redirect?: boolean;\n  initialParams?: Record<string, any>;\n  options?:\n    | TOptions\n    | ((prop: { route: RouteProp<ParamListBase, string>; navigation: any }) => TOptions);\n\n  listeners?:\n    | ScreenListeners<TState, TEventMap>\n    | ((prop: {\n        route: RouteProp<ParamListBase, string>;\n        navigation: any;\n      }) => ScreenListeners<TState, TEventMap>);\n\n  getId?: ({ params }: { params?: Record<string, any> }) => string | undefined;\n\n  dangerouslySingular?: SingularOptions;\n};\n\nexport type SingularOptions =\n  | boolean\n  | ((name: string, params: UnknownOutputParams) => string | undefined);\n\nfunction getSortedChildren(\n  children: RouteNode[],\n  order: ScreenProps[] = [],\n  initialRouteName?: string\n): { route: RouteNode; props: Partial<ScreenProps> }[] {\n  if (!order?.length) {\n    return children\n      .sort(sortRoutesWithInitial(initialRouteName))\n      .map((route) => ({ route, props: {} }));\n  }\n  const entries = [...children];\n\n  const ordered = order\n    .map(\n      ({\n        name,\n        redirect,\n        initialParams,\n        listeners,\n        options,\n        getId,\n        dangerouslySingular: singular,\n      }) => {\n        if (!entries.length) {\n          console.warn(\n            `[Layout children]: Too many screens defined. Route \"${name}\" is extraneous.`\n          );\n          return null;\n        }\n        const matchIndex = entries.findIndex((child) => child.route === name);\n        if (matchIndex === -1) {\n          console.warn(\n            `[Layout children]: No route named \"${name}\" exists in nested children:`,\n            children.map(({ route }) => route)\n          );\n          return null;\n        } else {\n          // Get match and remove from entries\n          const match = entries[matchIndex];\n          entries.splice(matchIndex, 1);\n\n          // Ensure to return null after removing from entries.\n          if (redirect) {\n            if (typeof redirect === 'string') {\n              throw new Error(`Redirecting to a specific route is not supported yet.`);\n            }\n            return null;\n          }\n\n          if (getId) {\n            console.warn(\n              `Deprecated: prop 'getId' on screen ${name} is deprecated. Please rename the prop to 'dangerouslySingular'`\n            );\n            if (singular) {\n              console.warn(\n                `Screen ${name} cannot use both getId and dangerouslySingular together.`\n              );\n            }\n          } else if (singular) {\n            // If singular is set, use it as the getId function.\n            if (typeof singular === 'string') {\n              getId = () => singular;\n            } else if (typeof singular === 'function' && name) {\n              getId = (options) => singular(name, options.params || {});\n            } else if (singular === true && name) {\n              getId = (options) => getSingularId(name, options);\n            }\n          }\n\n          return {\n            route: match,\n            props: { initialParams, listeners, options, getId },\n          };\n        }\n      }\n    )\n    .filter(Boolean) as {\n    route: RouteNode;\n    props: Partial<ScreenProps>;\n  }[];\n\n  // Add any remaining children\n  ordered.push(\n    ...entries.sort(sortRoutesWithInitial(initialRouteName)).map((route) => ({ route, props: {} }))\n  );\n\n  return ordered;\n}\n\n/**\n * @returns React Navigation screens sorted by the `route` property.\n */\nexport function useSortedScreens(\n  order: ScreenProps[],\n  protectedScreens: Set<string>\n): React.ReactNode[] {\n  const node = useRouteNode();\n\n  const sorted = node?.children?.length\n    ? getSortedChildren(node.children, order, node.initialRouteName)\n    : [];\n  return React.useMemo(\n    () =>\n      sorted\n        .filter((item) => !protectedScreens.has(item.route.route))\n        .map((value) => {\n          return routeToScreen(value.route, value.props);\n        }),\n    [sorted, protectedScreens]\n  );\n}\n\nfunction fromImport(value: RouteNode, { ErrorBoundary, ...component }: LoadedRoute) {\n  // If possible, add a more helpful display name for the component stack to improve debugging of React errors such as `Text strings must be rendered within a <Text> component.`.\n  if (component?.default && __DEV__) {\n    component.default.displayName ??= `${component.default.name ?? 'Route'}(${value.contextKey})`;\n  }\n\n  if (ErrorBoundary) {\n    const Wrapped = React.forwardRef((props: any, ref: any) => {\n      const children = React.createElement(component.default || EmptyRoute, {\n        ...props,\n        ref,\n      });\n      return <Try catch={ErrorBoundary}>{children}</Try>;\n    });\n\n    if (__DEV__) {\n      Wrapped.displayName = `ErrorBoundary(${value.contextKey})`;\n    }\n\n    return {\n      default: Wrapped,\n    };\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (\n      typeof component.default === 'object' &&\n      component.default &&\n      Object.keys(component.default).length === 0\n    ) {\n      return { default: EmptyRoute };\n    }\n  }\n\n  return { default: component.default };\n}\n\nfunction fromLoadedRoute(value: RouteNode, res: LoadedRoute) {\n  if (!(res instanceof Promise)) {\n    return fromImport(value, res);\n  }\n\n  return res.then(fromImport.bind(null, value));\n}\n\n// TODO: Maybe there's a more React-y way to do this?\n// Without this store, the process enters a recursive loop.\nconst qualifiedStore = new WeakMap<RouteNode, React.ComponentType<any>>();\n\n/** Wrap the component with various enhancements and add access to child routes. */\nexport function getQualifiedRouteComponent(value: RouteNode) {\n  if (qualifiedStore.has(value)) {\n    return qualifiedStore.get(value)!;\n  }\n\n  let ScreenComponent:\n    | React.ForwardRefExoticComponent<React.RefAttributes<unknown>>\n    | React.ComponentType<any>;\n\n  // TODO: This ensures sync doesn't use React.lazy, but it's not ideal.\n  if (EXPO_ROUTER_IMPORT_MODE === 'lazy') {\n    ScreenComponent = React.lazy(async () => {\n      const res = value.loadRoute();\n      return fromLoadedRoute(value, res) as Promise<{\n        default: React.ComponentType<any>;\n      }>;\n    });\n\n    if (__DEV__) {\n      ScreenComponent.displayName = `AsyncRoute(${value.route})`;\n    }\n  } else {\n    const res = value.loadRoute();\n    ScreenComponent = fromImport(value, res).default!;\n  }\n  function BaseRoute({\n    // Remove these React Navigation props to\n    // enforce usage of expo-router hooks (where the query params are correct).\n    route,\n    navigation,\n\n    // Pass all other props to the component\n    ...props\n  }: any) {\n    const stateForPath = useStateForPath();\n    const isFocused = useIsFocused();\n    const store = useExpoRouterStore();\n\n    if (isFocused) {\n      const state = navigation.getState();\n      const isLeaf = !('state' in state.routes[state.index]);\n      if (isLeaf && stateForPath) store.setFocusedState(stateForPath);\n    }\n\n    return (\n      <Route node={value} route={route}>\n        <React.Suspense fallback={<SuspenseFallback route={value} />}>\n          <ScreenComponent\n            {...props}\n            // Expose the template segment path, e.g. `(home)`, `[foo]`, `index`\n            // the intention is to make it possible to deduce shared routes.\n            segment={value.route}\n          />\n        </React.Suspense>\n      </Route>\n    );\n  }\n\n  if (__DEV__) {\n    BaseRoute.displayName = `Route(${value.route})`;\n  }\n\n  qualifiedStore.set(value, BaseRoute);\n  return BaseRoute;\n}\n\nexport function screenOptionsFactory(\n  route: RouteNode,\n  options?: ScreenProps['options']\n): ScreenProps['options'] {\n  return (args) => {\n    // Only eager load generated components\n    const staticOptions = route.generated ? route.loadRoute()?.getNavOptions : null;\n    const staticResult = typeof staticOptions === 'function' ? staticOptions(args) : staticOptions;\n    const dynamicResult = typeof options === 'function' ? options?.(args) : options;\n    const output = {\n      ...staticResult,\n      ...dynamicResult,\n    };\n\n    // Prevent generated screens from showing up in the tab bar.\n    if (route.generated) {\n      output.tabBarItemStyle = { display: 'none' };\n      output.tabBarButton = () => null;\n      // TODO: React Navigation doesn't provide a way to prevent rendering the drawer item.\n      output.drawerItemStyle = { height: 0, display: 'none' };\n    }\n\n    return output;\n  };\n}\n\nexport function routeToScreen(\n  route: RouteNode,\n  { options, getId, ...props }: Partial<ScreenProps> = {}\n) {\n  return (\n    <Screen\n      {...props}\n      name={route.route}\n      key={route.route}\n      getId={getId}\n      options={screenOptionsFactory(route, options)}\n      getComponent={() => getQualifiedRouteComponent(route)}\n    />\n  );\n}\n\nexport function getSingularId(\n  name: string,\n  options: { params?: Record<string, any> | undefined } = {}\n) {\n  return name\n    .split('/')\n    .map((segment) => {\n      if (segment.startsWith('[...')) {\n        return options.params?.[segment.slice(4, -1)]?.join('/') || segment;\n      } else if (segment.startsWith('[')) {\n        return options.params?.[segment.slice(1, -1)] || segment;\n      } else {\n        return segment;\n      }\n    })\n    .join('/');\n}\n"],"mappings":"aAAA,YAAY,CAAC,IAAAA,MAAA,CAAAC,OAAA,cAAAC,gBAAA,CAAAD,OAAA,0BAAAE,6BAAA,CAAAF,OAAA,8DAAAG,SAAA,mBAAAC,UAAA,wBAAAC,UAAA,qB,wKAmJbC,OAAA,CAAAC,gBAAA,CAAAA,gBAAA,CAqEAD,OAAA,CAAAE,0BAAA,CAAAA,0BAAA,CAkEAF,OAAA,CAAAG,oBAAA,CAAAA,oBAAA,CA0BAH,OAAA,CAAAI,aAAA,CAAAA,aAAA,CAgBAJ,OAAA,CAAAK,aAAA,CAAAA,aAAA,CAlUA,MAAAC,QAAA,CAAAZ,OAAA,6BASA,MAAAa,OAAA,CAAAC,eAAA,CAAAd,OAAA,WAEA,MAAAe,OAAA,CAAAf,OAAA,YACA,MAAAgB,cAAA,CAAAhB,OAAA,gCACA,MAAAiB,aAAA,CAAAH,eAAA,CAAAd,OAAA,mBACA,MAAAkB,YAAA,CAAAlB,OAAA,iBAEA,MAAAmB,YAAA,CAAAnB,OAAA,uBACA,MAAAoB,kBAAA,CAAApB,OAAA,6BACA,MAAAqB,KAAA,CAAArB,OAAA,gBAmCA,QAAS,CAAAsB,iBAAiBA,CACxBC,QAAqB,CACrBC,KAAA,CAAuB,EAAE,CACzBC,gBAAyB,EAEzB,GAAI,CAACD,KAAK,EAAEE,MAAM,CAAE,CAClB,MAAO,CAAAH,QAAQ,CACZI,IAAI,CAAC,GAAAZ,OAAA,CAAAa,qBAAqB,EAACH,gBAAgB,CAAC,CAAC,CAC7CI,GAAG,CAAEC,KAAK,GAAM,CAAEA,KAAK,CAAEC,KAAK,CAAE,EAAE,CAAE,CAAC,CAAC,CAC3C,CACA,KAAM,CAAAC,OAAO,CAAG,CAAC,GAAGT,QAAQ,CAAC,CAE7B,KAAM,CAAAU,OAAO,CAAGT,KAAK,CAClBK,GAAG,CACF,CAAC,CACCK,IAAI,CACJC,QAAQ,CACRC,aAAa,CACbC,SAAS,CACTC,OAAO,CACPC,KAAK,CACLC,mBAAmB,CAAEC,QAAQ,CAC9B,GAAI,CACH,GAAI,CAACT,OAAO,CAACN,MAAM,CAAE,CACnBgB,OAAO,CAACC,IAAI,CACV,uDAAuDT,IAAI,kBAAkB,CAC9E,CACD,MAAO,KAAI,CACb,CACA,KAAM,CAAAU,UAAU,CAAGZ,OAAO,CAACa,SAAS,CAAEC,KAAK,EAAKA,KAAK,CAAChB,KAAK,GAAKI,IAAI,CAAC,CACrE,GAAIU,UAAU,GAAK,CAAC,CAAC,CAAE,CACrBF,OAAO,CAACC,IAAI,CACV,sCAAsCT,IAAI,8BAA8B,CACxEX,QAAQ,CAACM,GAAG,CAAC,CAAC,CAAEC,KAAK,CAAE,GAAKA,KAAK,CAAC,CACnC,CACD,MAAO,KAAI,CACb,CAAC,IAAM,CAEL,KAAM,CAAAiB,KAAK,CAAGf,OAAO,CAACY,UAAU,CAAC,CACjCZ,OAAO,CAACgB,MAAM,CAACJ,UAAU,CAAE,CAAC,CAAC,CAG7B,GAAIT,QAAQ,CAAE,CACZ,GAAI,MAAO,CAAAA,QAAQ,GAAK,QAAQ,CAAE,CAChC,KAAM,IAAI,CAAAc,KAAK,CAAC,uDAAuD,CAAC,CAC1E,CACA,MAAO,KAAI,CACb,CAEA,GAAIV,KAAK,CAAE,CACTG,OAAO,CAACC,IAAI,CACV,sCAAsCT,IAAI,iEAAiE,CAC5G,CACD,GAAIO,QAAQ,CAAE,CACZC,OAAO,CAACC,IAAI,CACV,UAAUT,IAAI,0DAA0D,CACzE,CACH,CACF,CAAC,IAAM,IAAIO,QAAQ,CAAE,CAEnB,GAAI,MAAO,CAAAA,QAAQ,GAAK,QAAQ,CAAE,CAChCF,KAAK,CAAGA,CAAA,GAAME,QAAQ,CACxB,CAAC,IAAM,IAAI,MAAO,CAAAA,QAAQ,GAAK,UAAU,EAAIP,IAAI,CAAE,CACjDK,KAAK,CAAID,OAAO,EAAKG,QAAQ,CAACP,IAAI,CAAEI,OAAO,CAACY,MAAM,EAAI,EAAE,CAAC,CAC3D,CAAC,IAAM,IAAIT,QAAQ,GAAK,IAAI,EAAIP,IAAI,CAAE,CACpCK,KAAK,CAAID,OAAO,EAAK3B,aAAa,CAACuB,IAAI,CAAEI,OAAO,CAAC,CACnD,CACF,CAEA,MAAO,CACLR,KAAK,CAAEiB,KAAK,CACZhB,KAAK,CAAE,CAAEK,aAAa,CAAEC,SAAS,CAAEC,OAAO,CAAEC,KAAK,C,CAClD,CACH,CACF,CAAC,CACF,CACAY,MAAM,CAACC,OAAO,CAGd,CAGHnB,OAAO,CAACoB,IAAI,CACV,GAAGrB,OAAO,CAACL,IAAI,CAAC,GAAAZ,OAAA,CAAAa,qBAAqB,EAACH,gBAAgB,CAAC,CAAC,CAACI,GAAG,CAAEC,KAAK,GAAM,CAAEA,KAAK,CAAEC,KAAK,CAAE,EAAE,CAAE,CAAC,CAAC,CAChG,CAED,MAAO,CAAAE,OAAO,CAChB,CAKA,QAAgB,CAAA1B,gBAAgBA,CAC9BiB,KAAoB,CACpB8B,gBAA6B,EAE7B,KAAM,CAAAC,IAAI,CAAG,GAAAxC,OAAA,CAAAyC,YAAY,GAAE,CAE3B,KAAM,CAAAC,MAAM,CAAGF,IAAI,EAAEhC,QAAQ,EAAEG,MAAM,CACjCJ,iBAAiB,CAACiC,IAAI,CAAChC,QAAQ,CAAEC,KAAK,CAAE+B,IAAI,CAAC9B,gBAAgB,CAAC,CAC9D,EAAE,CACN,MAAO,CAAAZ,OAAA,CAAA6C,OAAK,CAACC,OAAO,CAClB,IACEF,MAAM,CACHN,MAAM,CAAES,IAAI,EAAK,CAACN,gBAAgB,CAACO,GAAG,CAACD,IAAI,CAAC9B,KAAK,CAACA,KAAK,CAAC,CAAC,CACzDD,GAAG,CAAEiC,KAAK,EAAI,CACb,MAAO,CAAApD,aAAa,CAACoD,KAAK,CAAChC,KAAK,CAAEgC,KAAK,CAAC/B,KAAK,CAAC,CAChD,CAAC,CAAC,CACN,CAAC0B,MAAM,CAAEH,gBAAgB,CAAC,CAC3B,CACH,CAEA,QAAS,CAAAS,UAAUA,CAACD,KAAgB,CAAAE,IAAA,CAA8C,IAA5C,CAAEC,aAA2B,CAAe,CAAAD,IAAA,CAAxBE,SAAS,CAAAhE,6BAAA,CAAA8D,IAAA,CAAA7D,SAAA,EAEjE,GAAI+D,SAAS,EAAER,OAAO,OAAW,CAAE,CACjCQ,SAAS,CAACR,OAAO,CAACS,WAAW,GAAK,GAAGD,SAAS,CAACR,OAAO,CAACxB,IAAI,EAAI,OAAO,IAAI4B,KAAK,CAACM,UAAU,GAAG,CAC/F,CAEA,GAAIH,aAAa,CAAE,CACjB,KAAM,CAAAI,OAAO,CAAGxD,OAAA,CAAA6C,OAAK,CAACY,UAAU,CAAC,CAACvC,KAAU,CAAEwC,GAAQ,GAAI,CACxD,KAAM,CAAAhD,QAAQ,CAAGV,OAAA,CAAA6C,OAAK,CAACc,aAAa,CAACN,SAAS,CAACR,OAAO,EAAIvC,YAAA,CAAAsD,UAAU,CAAAC,MAAA,CAAAC,MAAA,IAC/D5C,KAAK,EACRwC,GAAG,EACJ,CAAC,CACF,MAAO,CAAAtE,gBAAA,CAAA2E,GAAA,CAACvD,KAAA,CAAAwD,GAAG,EAACC,KAAK,CAAEb,aAAc,CAAA1C,QAAA,CAAEA,QAAQ,CAAM,CAAC,CACpD,CAAC,CAAC,CAEF,SAAa,CACX8C,OAAO,CAACF,WAAW,CAAG,iBAAiBL,KAAK,CAACM,UAAU,GAAG,CAC5D,CAEA,MAAO,CACLV,OAAO,CAAEW,O,CACV,CACH,CACA,SAA2C,CACzC,GACE,MAAO,CAAAH,SAAS,CAACR,OAAO,GAAK,QAAQ,EACrCQ,SAAS,CAACR,OAAO,EACjBgB,MAAM,CAACK,IAAI,CAACb,SAAS,CAACR,OAAO,CAAC,CAAChC,MAAM,GAAK,CAAC,CAC3C,CACA,MAAO,CAAEgC,OAAO,CAAEvC,YAAA,CAAAsD,UAAU,CAAE,CAChC,CACF,CAEA,MAAO,CAAEf,OAAO,CAAEQ,SAAS,CAACR,OAAO,CAAE,CACvC,CAEA,QAAS,CAAAsB,eAAeA,CAAClB,KAAgB,CAAEmB,GAAgB,EACzD,GAAI,EAAEA,GAAG,WAAY,CAAAC,OAAO,CAAC,CAAE,CAC7B,MAAO,CAAAnB,UAAU,CAACD,KAAK,CAAEmB,GAAG,CAAC,CAC/B,CAEA,MAAO,CAAAA,GAAG,CAACE,IAAI,CAACpB,UAAU,CAACqB,IAAI,CAAC,IAAI,CAAEtB,KAAK,CAAC,CAAC,CAC/C,CAIA,KAAM,CAAAuB,cAAc,CAAG,GAAI,CAAAC,OAAO,EAAuC,CAGzE,QAAgB,CAAA9E,0BAA0BA,CAACsD,KAAgB,EACzD,GAAIuB,cAAc,CAACxB,GAAG,CAACC,KAAK,CAAC,CAAE,CAC7B,MAAO,CAAAuB,cAAc,CAACE,GAAG,CAACzB,KAAK,CAAE,CACnC,CAEA,GAAI,CAAA0B,eAEwB,CAG5B,GAAIvE,aAAA,CAAAyC,OAAuB,GAAK,MAAM,CAAE,CACtC8B,eAAe,CAAG3E,OAAA,CAAA6C,OAAK,CAAC+B,IAAI,CAAC,SAAW,CACtC,KAAM,CAAAR,GAAG,CAAGnB,KAAK,CAAC4B,SAAS,EAAE,CAC7B,MAAO,CAAAV,eAAe,CAAClB,KAAK,CAAEmB,GAAG,CAE/B,CACJ,CAAC,CAAC,CAEF,SAAa,CACXO,eAAe,CAACrB,WAAW,CAAG,cAAcL,KAAK,CAAChC,KAAK,GAAG,CAC5D,CACF,CAAC,IAAM,CACL,KAAM,CAAAmD,GAAG,CAAGnB,KAAK,CAAC4B,SAAS,EAAE,CAC7BF,eAAe,CAAGzB,UAAU,CAACD,KAAK,CAAEmB,GAAG,CAAC,CAACvB,OAAQ,CACnD,CACA,QAAS,CAAAiC,SAASA,CAAAC,KAAA,CAQZ,IARa,CAGjB9D,KAAK,CACL+D,UAGQ,CACJ,CAAAD,KAAA,CADD7D,KAAK,CAAA7B,6BAAA,CAAA0F,KAAA,CAAAxF,UAAA,EAER,KAAM,CAAA0F,YAAY,CAAG,GAAAlF,QAAA,CAAAmF,eAAe,GAAE,CACtC,KAAM,CAAAC,SAAS,CAAG,GAAApF,QAAA,CAAAqF,YAAY,GAAE,CAChC,KAAM,CAAAC,KAAK,CAAG,GAAAlF,cAAA,CAAAmF,kBAAkB,GAAE,CAElC,GAAIH,SAAS,CAAE,CACb,KAAM,CAAAI,KAAK,CAAGP,UAAU,CAACQ,QAAQ,EAAE,CACnC,KAAM,CAAAC,MAAM,CAAG,EAAE,OAAO,EAAI,CAAAF,KAAK,CAACG,MAAM,CAACH,KAAK,CAACI,KAAK,CAAC,CAAC,CACtD,GAAIF,MAAM,EAAIR,YAAY,CAAEI,KAAK,CAACO,eAAe,CAACX,YAAY,CAAC,CACjE,CAEA,MACE,CAAA7F,gBAAA,CAAA2E,GAAA,CAAC7D,OAAA,CAAA2F,KAAK,EAACnD,IAAI,CAAEO,KAAM,CAAChC,KAAK,CAAEA,KAAM,CAAAP,QAAA,CAC/BtB,gBAAA,CAAA2E,GAAA,CAAC/D,OAAA,CAAA6C,OAAK,CAACiD,QAAQ,EAACC,QAAQ,CAAE3G,gBAAA,CAAA2E,GAAA,CAACxD,kBAAA,CAAAyF,gBAAgB,EAAC/E,KAAK,CAAEgC,KAAM,EAAI,CAAAvC,QAAA,CAC3DtB,gBAAA,CAAA2E,GAAA,CAACY,eAAe,CAAAd,MAAA,CAAAC,MAAA,IACV5C,KAAK,EAGT+E,OAAO,CAAEhD,KAAK,CAAChC,KAAM,GAEzB,CAAgB,CAClB,CAAO,CAAC,CAEZ,CAEA,SAAa,CACX6D,SAAS,CAACxB,WAAW,CAAG,SAASL,KAAK,CAAChC,KAAK,GAAG,CACjD,CAEAuD,cAAc,CAAC0B,GAAG,CAACjD,KAAK,CAAE6B,SAAS,CAAC,CACpC,MAAO,CAAAA,SAAS,CAClB,CAEA,QAAgB,CAAAlF,oBAAoBA,CAClCqB,KAAgB,CAChBQ,OAAgC,EAEhC,MAAQ,CAAA0E,IAAI,EAAI,CAEd,KAAM,CAAAC,aAAa,CAAGnF,KAAK,CAACoF,SAAS,CAAGpF,KAAK,CAAC4D,SAAS,EAAE,EAAEyB,aAAa,CAAG,IAAI,CAC/E,KAAM,CAAAC,YAAY,CAAG,MAAO,CAAAH,aAAa,GAAK,UAAU,CAAGA,aAAa,CAACD,IAAI,CAAC,CAAGC,aAAa,CAC9F,KAAM,CAAAI,aAAa,CAAG,MAAO,CAAA/E,OAAO,GAAK,UAAU,CAAGA,OAAO,GAAG0E,IAAI,CAAC,CAAG1E,OAAO,CAC/E,KAAM,CAAAgF,MAAM,CAAA5C,MAAA,CAAAC,MAAA,IACPyC,YAAY,CACZC,aAAa,CACjB,CAGD,GAAIvF,KAAK,CAACoF,SAAS,CAAE,CACnBI,MAAM,CAACC,eAAe,CAAG,CAAEC,OAAO,CAAE,MAAM,CAAE,CAC5CF,MAAM,CAACG,YAAY,CAAG,IAAM,IAAI,CAEhCH,MAAM,CAACI,eAAe,CAAG,CAAEC,MAAM,CAAE,CAAC,CAAEH,OAAO,CAAE,MAAM,CAAE,CACzD,CAEA,MAAO,CAAAF,MAAM,CACf,CAAC,CACH,CAEA,QAAgB,CAAA5G,aAAaA,CAC3BoB,KAAgB,CAChB8F,KAAA,CAAqD,EAAE,KAAvD,CAAEtF,OAAO,CAAEC,KAAe,EAAAqF,KAAA,CAAL7F,KAAK,CAAA7B,6BAAA,CAAA0H,KAAA,CAAAvH,UAAA,EAE1B,MACE,CAAAN,MAAA,CAAAyE,aAAA,CAACtD,YAAA,CAAA2G,MAAM,CAAAnD,MAAA,CAAAC,MAAA,IACD5C,KAAK,EACTG,IAAI,CAAEJ,KAAK,CAACA,KAAM,CAClBgG,GAAG,CAAEhG,KAAK,CAACA,KAAM,CACjBS,KAAK,CAAEA,KAAM,CACbD,OAAO,CAAE7B,oBAAoB,CAACqB,KAAK,CAAEQ,OAAO,CAAE,CAC9CyF,YAAY,CAAEA,CAAA,GAAMvH,0BAA0B,CAACsB,KAAK,CAAE,GACtD,CAEN,CAEA,QAAgB,CAAAnB,aAAaA,CAC3BuB,IAAY,CACZI,OAAA,CAAwD,EAAE,EAE1D,MAAO,CAAAJ,IAAI,CACR8F,KAAK,CAAC,GAAG,CAAC,CACVnG,GAAG,CAAEiF,OAAO,EAAI,CACf,GAAIA,OAAO,CAACmB,UAAU,CAAC,MAAM,CAAC,CAAE,CAC9B,MAAO,CAAA3F,OAAO,CAACY,MAAM,GAAG4D,OAAO,CAACoB,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAAC,EAAEC,IAAI,CAAC,GAAG,CAAC,EAAIrB,OAAO,CACrE,CAAC,IAAM,IAAIA,OAAO,CAACmB,UAAU,CAAC,GAAG,CAAC,CAAE,CAClC,MAAO,CAAA3F,OAAO,CAACY,MAAM,GAAG4D,OAAO,CAACoB,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAAC,EAAIpB,OAAO,CAC1D,CAAC,IAAM,CACL,MAAO,CAAAA,OAAO,CAChB,CACF,CAAC,CAAC,CACDqB,IAAI,CAAC,GAAG,CAAC,CACd","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}