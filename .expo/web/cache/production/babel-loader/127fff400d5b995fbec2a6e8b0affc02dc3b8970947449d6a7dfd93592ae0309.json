{"ast":null,"code":"import{transformsArrayToProps}from'../../lib/extract/extractTransform';export const hasTouchableProperty=props=>props.onPress||props.onPressIn||props.onPressOut||props.onLongPress;export const camelCaseToDashed=camelCase=>{return camelCase.replace(/[A-Z]/g,m=>'-'+m.toLowerCase());};function stringifyTransformProps(transformProps){const transformArray=[];if(transformProps.translate!=null){transformArray.push(`translate(${transformProps.translate})`);}if(transformProps.translateX!=null||transformProps.translateY!=null){transformArray.push(`translate(${transformProps.translateX||0}, ${transformProps.translateY||0})`);}if(transformProps.scale!=null){transformArray.push(`scale(${transformProps.scale})`);}if(transformProps.scaleX!=null||transformProps.scaleY!=null){transformArray.push(`scale(${transformProps.scaleX||1}, ${transformProps.scaleY||1})`);}if(transformProps.rotation!=null){transformArray.push(`rotate(${transformProps.rotation})`);}if(transformProps.skewX!=null){transformArray.push(`skewX(${transformProps.skewX})`);}if(transformProps.skewY!=null){transformArray.push(`skewY(${transformProps.skewY})`);}return transformArray;}export function parseTransformProp(transform,props){const transformArray=[];props&&transformArray.push(...stringifyTransformProps(props));if(Array.isArray(transform)){if(typeof transform[0]==='number'){transformArray.push(`matrix(${transform.join(' ')})`);}else{const stringifiedProps=transformsArrayToProps(transform);transformArray.push(...stringifyTransformProps(stringifiedProps));}}else if(typeof transform==='string'){transformArray.push(transform);}return transformArray.length?transformArray.join(' '):undefined;}export const getBoundingClientRect=node=>{if(node){const isElement=node.nodeType===1;if(isElement&&typeof node.getBoundingClientRect==='function'){return node.getBoundingClientRect();}}throw new Error('Can not get boundingClientRect of '+node||'undefined');};const measureLayout=(node,callback)=>{const relativeNode=node===null||node===void 0?void 0:node.parentNode;if(relativeNode){setTimeout(()=>{const relativeRect=getBoundingClientRect(relativeNode);const{height,left,top,width}=getBoundingClientRect(node);const x=left-relativeRect.left;const y=top-relativeRect.top;callback(x,y,width,height,left,top);},0);}};export function remeasure(){const tag=this.state.touchable.responderID;if(tag===null){return;}measureLayout(tag,this._handleQueryLayout);}export function encodeSvg(svgString){return svgString.replace('<svg',~svgString.indexOf('xmlns')?'<svg':'<svg xmlns=\"http://www.w3.org/2000/svg\"').replace(/\"/g,\"'\").replace(/%/g,'%25').replace(/#/g,'%23').replace(/{/g,'%7B').replace(/}/g,'%7D').replace(/</g,'%3C').replace(/>/g,'%3E').replace(/\\s+/g,' ');}","map":{"version":3,"names":["transformsArrayToProps","hasTouchableProperty","props","onPress","onPressIn","onPressOut","onLongPress","camelCaseToDashed","camelCase","replace","m","toLowerCase","stringifyTransformProps","transformProps","transformArray","translate","push","translateX","translateY","scale","scaleX","scaleY","rotation","skewX","skewY","parseTransformProp","transform","Array","isArray","join","stringifiedProps","length","undefined","getBoundingClientRect","node","isElement","nodeType","Error","measureLayout","callback","relativeNode","parentNode","setTimeout","relativeRect","height","left","top","width","x","y","remeasure","tag","state","touchable","responderID","_handleQueryLayout","encodeSvg","svgString","indexOf"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-svg/src/web/utils/index.ts"],"sourcesContent":["import { BaseProps } from '../types';\nimport type { TransformProps } from '../../lib/extract/types';\nimport {\n  transformsArrayToProps,\n  TransformsStyleArray,\n} from '../../lib/extract/extractTransform';\n\nexport const hasTouchableProperty = (props: BaseProps) =>\n  props.onPress || props.onPressIn || props.onPressOut || props.onLongPress;\n\nexport const camelCaseToDashed = (camelCase: string) => {\n  return camelCase.replace(/[A-Z]/g, (m) => '-' + m.toLowerCase());\n};\n\nfunction stringifyTransformProps(transformProps: TransformProps) {\n  const transformArray = [];\n  if (transformProps.translate != null) {\n    transformArray.push(`translate(${transformProps.translate})`);\n  }\n  if (transformProps.translateX != null || transformProps.translateY != null) {\n    transformArray.push(\n      `translate(${transformProps.translateX || 0}, ${\n        transformProps.translateY || 0\n      })`\n    );\n  }\n  if (transformProps.scale != null) {\n    transformArray.push(`scale(${transformProps.scale})`);\n  }\n  if (transformProps.scaleX != null || transformProps.scaleY != null) {\n    transformArray.push(\n      `scale(${transformProps.scaleX || 1}, ${transformProps.scaleY || 1})`\n    );\n  }\n  // rotation maps to rotate, not to collide with the text rotate attribute (which acts per glyph rather than block)\n  if (transformProps.rotation != null) {\n    transformArray.push(`rotate(${transformProps.rotation})`);\n  }\n  if (transformProps.skewX != null) {\n    transformArray.push(`skewX(${transformProps.skewX})`);\n  }\n  if (transformProps.skewY != null) {\n    transformArray.push(`skewY(${transformProps.skewY})`);\n  }\n  return transformArray;\n}\n\nexport function parseTransformProp(\n  transform: TransformProps['transform'],\n  props?: BaseProps\n) {\n  const transformArray: string[] = [];\n\n  props && transformArray.push(...stringifyTransformProps(props));\n\n  if (Array.isArray(transform)) {\n    if (typeof transform[0] === 'number') {\n      transformArray.push(`matrix(${transform.join(' ')})`);\n    } else {\n      const stringifiedProps = transformsArrayToProps(\n        // @ts-expect-error FIXME\n        transform as TransformsStyleArray\n      );\n      transformArray.push(...stringifyTransformProps(stringifiedProps));\n    }\n  } else if (typeof transform === 'string') {\n    transformArray.push(transform);\n  }\n\n  return transformArray.length ? transformArray.join(' ') : undefined;\n}\n\nexport const getBoundingClientRect = (node: SVGElement) => {\n  if (node) {\n    const isElement = node.nodeType === 1; /* Node.ELEMENT_NODE */\n    if (isElement && typeof node.getBoundingClientRect === 'function') {\n      return node.getBoundingClientRect();\n    }\n  }\n  throw new Error('Can not get boundingClientRect of ' + node || 'undefined');\n};\n\nconst measureLayout = (\n  node: SVGElement,\n  callback: (\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    left: number,\n    top: number\n  ) => void\n) => {\n  const relativeNode = node?.parentNode;\n  if (relativeNode) {\n    setTimeout(() => {\n      // @ts-expect-error TODO: handle it better\n      const relativeRect = getBoundingClientRect(relativeNode);\n      const { height, left, top, width } = getBoundingClientRect(node);\n      const x = left - relativeRect.left;\n      const y = top - relativeRect.top;\n      callback(x, y, width, height, left, top);\n    }, 0);\n  }\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function remeasure(this: any) {\n  const tag = this.state.touchable.responderID;\n  if (tag === null) {\n    return;\n  }\n  measureLayout(tag, this._handleQueryLayout);\n}\n\n/* Taken from here: https://gist.github.com/jennyknuth/222825e315d45a738ed9d6e04c7a88d0 */\nexport function encodeSvg(svgString: string) {\n  return svgString\n    .replace(\n      '<svg',\n      ~svgString.indexOf('xmlns')\n        ? '<svg'\n        : '<svg xmlns=\"http://www.w3.org/2000/svg\"'\n    )\n    .replace(/\"/g, \"'\")\n    .replace(/%/g, '%25')\n    .replace(/#/g, '%23')\n    .replace(/{/g, '%7B')\n    .replace(/}/g, '%7D')\n    .replace(/</g, '%3C')\n    .replace(/>/g, '%3E')\n    .replace(/\\s+/g, ' ');\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}