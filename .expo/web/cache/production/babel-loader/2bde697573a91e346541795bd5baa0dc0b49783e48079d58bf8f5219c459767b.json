{"ast":null,"code":"import createHandler from'./createHandler';import{baseGestureHandlerProps}from'./gestureHandlerCommon';export const flingGestureHandlerProps=['numberOfPointers','direction'];export const flingHandlerName='FlingGestureHandler';export const FlingGestureHandler=createHandler({name:flingHandlerName,allowedProps:[...baseGestureHandlerProps,...flingGestureHandlerProps],config:{}});","map":{"version":3,"names":["createHandler","baseGestureHandlerProps","flingGestureHandlerProps","flingHandlerName","FlingGestureHandler","name","allowedProps","config"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-gesture-handler/lib/module/handlers/FlingGestureHandler.ts"],"sourcesContent":["import type { FlingGestureHandlerEventPayload } from './GestureHandlerEventPayload';\nimport createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const flingGestureHandlerProps = [\n  'numberOfPointers',\n  'direction',\n] as const;\n\nexport interface FlingGestureConfig {\n  /**\n   * Expressed allowed direction of movement. It's possible to pass one or many\n   * directions in one parameter:\n   *\n   * ```js\n   * direction={Directions.RIGHT | Directions.LEFT}\n   * ```\n   *\n   * or\n   *\n   * ```js\n   * direction={Directions.DOWN}\n   * ```\n   */\n  direction?: number;\n\n  /**\n   * Determine exact number of points required to handle the fling gesture.\n   */\n  numberOfPointers?: number;\n}\n\n/**\n * @deprecated FlingGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Fling()` instead.\n */\nexport interface FlingGestureHandlerProps\n  extends BaseGestureHandlerProps<FlingGestureHandlerEventPayload>,\n    FlingGestureConfig {}\n\nexport const flingHandlerName = 'FlingGestureHandler';\n\n/**\n * @deprecated FlingGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Fling()` instead.\n */\nexport type FlingGestureHandler = typeof FlingGestureHandler;\n\n/**\n * @deprecated FlingGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Fling()` instead.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const FlingGestureHandler = createHandler<\n  FlingGestureHandlerProps,\n  FlingGestureHandlerEventPayload\n>({\n  name: flingHandlerName,\n  allowedProps: [\n    ...baseGestureHandlerProps,\n    ...flingGestureHandlerProps,\n  ] as const,\n  config: {},\n});\n"],"mappings":"AACA,MAAO,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAEEC,uBAFF,KAGO,wBAHP,CAKA,MAAO,MAAM,CAAAC,wBAAwB,CAAG,CACtC,kBADsC,CAEtC,WAFsC,CAAjC,CAmCP,MAAO,MAAM,CAAAC,gBAAgB,CAAG,qBAAzB,CAWP,MAAO,MAAM,CAAAC,mBAAmB,CAAGJ,aAAa,CAG9C,CACAK,IAAI,CAAEF,gBADN,CAEAG,YAAY,CAAE,CACZ,GAAGL,uBADS,CAEZ,GAAGC,wBAFS,CAFd,CAMAK,MAAM,CAAE,EANR,CAH8C,CAAzC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}