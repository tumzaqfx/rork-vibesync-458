{"ast":null,"code":"import React from'react';import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{router}from'expo-router';import{useTheme}from'@/hooks/theme-store';import{jsx as _jsx}from\"react/jsx-runtime\";export const HashtagText=({text,style,onUserPress,onHashtagPress})=>{const{colors}=useTheme();const parseTextWithLinks=inputText=>{const parts=[];const regex=/(#\\w+|@\\w+)/g;let lastIndex=0;let match;while((match=regex.exec(inputText))!==null){if(match.index>lastIndex){parts.push(_jsx(Text,{style:[styles.normalText,{color:colors.text},style],children:inputText.slice(lastIndex,match.index)},`text-${lastIndex}`));}const isHashtag=match[0].startsWith('#');const isUsername=match[0].startsWith('@');parts.push(_jsx(TouchableOpacity,{onPress:()=>{if(match&&isHashtag){const hashtag=match[0].slice(1);if(onHashtagPress){onHashtagPress(hashtag);}else{router.push(`/hashtag/${hashtag}`);}}else if(match&&isUsername){const username=match[0].slice(1);if(onUserPress){onUserPress(username);}else{router.push(`/user/${username}`);}}},children:_jsx(Text,{style:[styles.linkText,{color:isHashtag?'#1DA1F2':colors.primary},style],children:match[0]})},`link-${match.index}`));lastIndex=regex.lastIndex;}if(lastIndex<inputText.length){parts.push(_jsx(Text,{style:[styles.normalText,{color:colors.text},style],children:inputText.slice(lastIndex)},`text-${lastIndex}`));}return parts.length>0?parts:[_jsx(Text,{style:[styles.normalText,{color:colors.text},style],children:inputText},\"full-text\")];};return _jsx(Text,{style:styles.container,children:parseTextWithLinks(text)});};const styles=StyleSheet.create({container:{flexDirection:'row',flexWrap:'wrap'},normalText:{fontSize:14,lineHeight:20},linkText:{fontSize:14,lineHeight:20,fontWeight:'600'}});","map":{"version":3,"names":["React","Text","TouchableOpacity","StyleSheet","router","useTheme","jsx","_jsx","HashtagText","text","style","onUserPress","onHashtagPress","colors","parseTextWithLinks","inputText","parts","regex","lastIndex","match","exec","index","push","styles","normalText","color","children","slice","isHashtag","startsWith","isUsername","onPress","hashtag","username","linkText","primary","length","container","create","flexDirection","flexWrap","fontSize","lineHeight","fontWeight"],"sources":["/home/user/rork-vibesync-458/components/hashtag/HashtagText.tsx"],"sourcesContent":["import React from 'react';\nimport { Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { router } from 'expo-router';\nimport { useTheme } from '@/hooks/theme-store';\n\ninterface HashtagTextProps {\n  text: string;\n  style?: any;\n  onUserPress?: (username: string) => void;\n  onHashtagPress?: (hashtag: string) => void;\n}\n\nexport const HashtagText: React.FC<HashtagTextProps> = ({\n  text,\n  style,\n  onUserPress,\n  onHashtagPress,\n}) => {\n  const { colors } = useTheme();\n\n  const parseTextWithLinks = (inputText: string) => {\n    const parts: React.ReactNode[] = [];\n    const regex = /(#\\w+|@\\w+)/g;\n    let lastIndex = 0;\n    let match: RegExpExecArray | null;\n\n    while ((match = regex.exec(inputText)) !== null) {\n      if (match.index > lastIndex) {\n        parts.push(\n          <Text key={`text-${lastIndex}`} style={[styles.normalText, { color: colors.text }, style]}>\n            {inputText.slice(lastIndex, match.index)}\n          </Text>\n        );\n      }\n\n      const isHashtag = match[0].startsWith('#');\n      const isUsername = match[0].startsWith('@');\n\n      parts.push(\n        <TouchableOpacity\n          key={`link-${match.index}`}\n          onPress={() => {\n            if (match && isHashtag) {\n              const hashtag = match[0].slice(1);\n              if (onHashtagPress) {\n                onHashtagPress(hashtag);\n              } else {\n                router.push(`/hashtag/${hashtag}`);\n              }\n            } else if (match && isUsername) {\n              const username = match[0].slice(1);\n              if (onUserPress) {\n                onUserPress(username);\n              } else {\n                router.push(`/user/${username}`);\n              }\n            }\n          }}\n        >\n          <Text\n            style={[\n              styles.linkText,\n              {\n                color: isHashtag ? '#1DA1F2' : colors.primary,\n              },\n              style,\n            ]}\n          >\n            {match[0]}\n          </Text>\n        </TouchableOpacity>\n      );\n\n      lastIndex = regex.lastIndex;\n    }\n\n    if (lastIndex < inputText.length) {\n      parts.push(\n        <Text key={`text-${lastIndex}`} style={[styles.normalText, { color: colors.text }, style]}>\n          {inputText.slice(lastIndex)}\n        </Text>\n      );\n    }\n\n    return parts.length > 0 ? parts : [\n      <Text key=\"full-text\" style={[styles.normalText, { color: colors.text }, style]}>\n        {inputText}\n      </Text>\n    ];\n  };\n\n  return <Text style={styles.container}>{parseTextWithLinks(text)}</Text>;\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  normalText: {\n    fontSize: 14,\n    lineHeight: 20,\n  },\n  linkText: {\n    fontSize: 14,\n    lineHeight: 20,\n    fontWeight: '600',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}