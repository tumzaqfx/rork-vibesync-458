{"ast":null,"code":"import*as React from'react';import createElement from'react-native-web/dist/exports/createElement';import ExponentAV from'./ExponentAV';import{addFullscreenListener}from'./FullscreenUtils.web';import{VideoFullscreenUpdate}from'./Video.types';import{jsx as _jsx}from\"react/jsx-runtime\";const Video=React.forwardRef((props,ref)=>createElement('video',Object.assign({},props,{ref})));export default class ExponentVideo extends React.Component{componentWillUnmount(){this._removeFullscreenListener?.();}getVideoElement=()=>{return this._video;};onFullscreenChange=isFullscreen=>{if(!this.props.onFullscreenUpdate)return;if(isFullscreen){this.props.onFullscreenUpdate({nativeEvent:{fullscreenUpdate:VideoFullscreenUpdate.PLAYER_DID_PRESENT}});}else{this.props.onFullscreenUpdate({nativeEvent:{fullscreenUpdate:VideoFullscreenUpdate.PLAYER_DID_DISMISS}});}};onStatusUpdate=async()=>{if(!this.props.onStatusUpdate){return;}const nativeEvent=await ExponentAV.getStatusForVideo(this._video);this.props.onStatusUpdate({nativeEvent});};onLoadStart=()=>{if(!this.props.onLoadStart){return;}this.props.onLoadStart();this.onStatusUpdate();};onLoadedData=event=>{if(!this.props.onLoad){return;}this.props.onLoad(event);this.onStatusUpdate();};onError=event=>{if(!this.props.onError){return;}this.props.onError(event);this.onStatusUpdate();};onProgress=()=>{this.onStatusUpdate();};onSeeking=()=>{this.onStatusUpdate();};onEnded=()=>{this.onStatusUpdate();};onLoadedMetadata=()=>{this.onStatusUpdate();};onCanPlay=event=>{if(!this.props.onReadyForDisplay){return;}this.props.onReadyForDisplay(event);this.onStatusUpdate();};onStalled=()=>{this.onStatusUpdate();};onRef=ref=>{this._removeFullscreenListener?.();if(ref){this._video=ref;this._removeFullscreenListener=addFullscreenListener(this._video,this.onFullscreenChange);this.onStatusUpdate();}else{this._removeFullscreenListener=undefined;}};render(){const{source,status={},resizeMode:objectFit,useNativeControls,style}=this.props;const customStyle={position:undefined,objectFit,overflow:'hidden'};return _jsx(Video,{ref:this.onRef,onLoadStart:this.onLoadStart,onLoadedData:this.onLoadedData,onError:this.onError,onTimeUpdate:this.onProgress,onSeeking:this.onSeeking,onEnded:this.onEnded,onLoadedMetadata:this.onLoadedMetadata,onCanPlay:this.onCanPlay,onStalled:this.onStalled,src:source?.uri||undefined,muted:status.isMuted,loop:status.isLooping,autoPlay:status.shouldPlay,controls:useNativeControls,style:[style,customStyle],playsInline:true});}}","map":{"version":3,"names":["React","createElement","ExponentAV","addFullscreenListener","VideoFullscreenUpdate","jsx","_jsx","Video","forwardRef","props","ref","Object","assign","ExponentVideo","Component","componentWillUnmount","_removeFullscreenListener","getVideoElement","_video","onFullscreenChange","isFullscreen","onFullscreenUpdate","nativeEvent","fullscreenUpdate","PLAYER_DID_PRESENT","PLAYER_DID_DISMISS","onStatusUpdate","getStatusForVideo","onLoadStart","onLoadedData","event","onLoad","onError","onProgress","onSeeking","onEnded","onLoadedMetadata","onCanPlay","onReadyForDisplay","onStalled","onRef","undefined","render","source","status","resizeMode","objectFit","useNativeControls","style","customStyle","position","overflow","onTimeUpdate","src","uri","muted","isMuted","loop","isLooping","autoPlay","shouldPlay","controls","playsInline"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-av/src/ExponentVideo.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ViewProps } from 'react-native';\nimport createElement from 'react-native-web/dist/exports/createElement';\n\nimport { AVPlaybackNativeSource, AVPlaybackStatus, AVPlaybackStatusToSet } from './AV';\nimport ExponentAV from './ExponentAV';\nimport { addFullscreenListener } from './FullscreenUtils.web';\nimport {\n  VideoFullscreenUpdate,\n  VideoFullscreenUpdateEvent,\n  VideoReadyForDisplayEvent,\n} from './Video.types';\n\ntype ExponentVideoProps = {\n  source: AVPlaybackNativeSource | null;\n  resizeMode?: object;\n  status?: AVPlaybackStatusToSet;\n  useNativeControls?: boolean;\n  onStatusUpdate?: (event: { nativeEvent: AVPlaybackStatus }) => void;\n  onReadyForDisplay?: (event: { nativeEvent: VideoReadyForDisplayEvent }) => void;\n  onFullscreenUpdate?: (event: { nativeEvent: VideoFullscreenUpdateEvent }) => void;\n  onLoadStart: () => void;\n  onLoad: (event: { nativeEvent: AVPlaybackStatus }) => void;\n  onError: (event: { nativeEvent: { error: string } }) => void;\n  // Required by react-native\n  scaleX?: number;\n  scaleY?: number;\n  translateX?: number;\n  translateY?: number;\n  rotation?: number;\n} & ViewProps;\n\nexport type NaturalSize = {\n  width: number;\n  height: number;\n  orientation: 'portrait' | 'landscape';\n};\n\nconst Video: any = React.forwardRef<HTMLVideoElement, ExponentVideoProps>((props, ref) =>\n  createElement('video', { ...props, ref })\n);\n\nexport default class ExponentVideo extends React.Component<ExponentVideoProps> {\n  _video?: HTMLVideoElement;\n  _removeFullscreenListener?: () => any;\n\n  componentWillUnmount() {\n    this._removeFullscreenListener?.();\n  }\n\n  getVideoElement = () => {\n    return this._video;\n  };\n\n  onFullscreenChange = (isFullscreen: boolean) => {\n    if (!this.props.onFullscreenUpdate) return;\n    if (isFullscreen) {\n      this.props.onFullscreenUpdate({\n        nativeEvent: { fullscreenUpdate: VideoFullscreenUpdate.PLAYER_DID_PRESENT },\n      });\n    } else {\n      this.props.onFullscreenUpdate({\n        nativeEvent: { fullscreenUpdate: VideoFullscreenUpdate.PLAYER_DID_DISMISS },\n      });\n    }\n  };\n\n  onStatusUpdate = async () => {\n    if (!this.props.onStatusUpdate) {\n      return;\n    }\n    const nativeEvent = await ExponentAV.getStatusForVideo(this._video);\n    this.props.onStatusUpdate({ nativeEvent });\n  };\n\n  onLoadStart = () => {\n    if (!this.props.onLoadStart) {\n      return;\n    }\n    this.props.onLoadStart();\n    this.onStatusUpdate();\n  };\n\n  onLoadedData = (event: { nativeEvent: AVPlaybackStatus }) => {\n    if (!this.props.onLoad) {\n      return;\n    }\n    this.props.onLoad(event);\n    this.onStatusUpdate();\n  };\n\n  onError = (event: { nativeEvent: { error: string } }) => {\n    if (!this.props.onError) {\n      return;\n    }\n    this.props.onError(event);\n    this.onStatusUpdate();\n  };\n\n  onProgress = () => {\n    this.onStatusUpdate();\n  };\n\n  onSeeking = () => {\n    this.onStatusUpdate();\n  };\n\n  onEnded = () => {\n    this.onStatusUpdate();\n  };\n\n  onLoadedMetadata = () => {\n    this.onStatusUpdate();\n  };\n\n  onCanPlay = (event: { nativeEvent: VideoReadyForDisplayEvent }) => {\n    if (!this.props.onReadyForDisplay) {\n      return;\n    }\n    this.props.onReadyForDisplay(event);\n    this.onStatusUpdate();\n  };\n\n  onStalled = () => {\n    this.onStatusUpdate();\n  };\n\n  onRef = (ref: HTMLVideoElement | null) => {\n    this._removeFullscreenListener?.();\n    if (ref) {\n      this._video = ref;\n      this._removeFullscreenListener = addFullscreenListener(this._video, this.onFullscreenChange);\n      this.onStatusUpdate();\n    } else {\n      this._removeFullscreenListener = undefined;\n    }\n  };\n\n  render() {\n    const { source, status = {}, resizeMode: objectFit, useNativeControls, style } = this.props;\n\n    const customStyle = {\n      position: undefined,\n      objectFit,\n      overflow: 'hidden',\n    };\n    return (\n      <Video\n        ref={this.onRef}\n        onLoadStart={this.onLoadStart}\n        onLoadedData={this.onLoadedData}\n        onError={this.onError}\n        onTimeUpdate={this.onProgress}\n        onSeeking={this.onSeeking}\n        onEnded={this.onEnded}\n        onLoadedMetadata={this.onLoadedMetadata}\n        onCanPlay={this.onCanPlay}\n        onStalled={this.onStalled}\n        src={source?.uri || undefined}\n        muted={status.isMuted}\n        loop={status.isLooping}\n        autoPlay={status.shouldPlay}\n        controls={useNativeControls}\n        style={[style, customStyle]}\n        playsInline\n      />\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}