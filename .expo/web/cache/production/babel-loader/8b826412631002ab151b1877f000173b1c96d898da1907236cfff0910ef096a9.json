{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"transform\",\"origin\",\"originX\",\"originY\",\"fontFamily\",\"fontSize\",\"fontWeight\",\"fontStyle\",\"style\",\"forwardedRef\",\"gradientTransform\",\"patternTransform\",\"onPress\"];import{hasTouchableProperty,parseTransformProp}from'.';import{resolve}from'../../lib/resolve';import{resolveAssetUri}from'../../lib/resolveAssetUri';export const prepare=(self,props=self.props)=>{const{transform,origin,originX,originY,fontFamily,fontSize,fontWeight,fontStyle,style,forwardedRef,gradientTransform,patternTransform,onPress}=props,rest=_objectWithoutPropertiesLoose(props,_excluded);const clean=Object.assign({},hasTouchableProperty(props)?{onStartShouldSetResponder:self.touchableHandleStartShouldSetResponder,onResponderTerminationRequest:self.touchableHandleResponderTerminationRequest,onResponderGrant:self.touchableHandleResponderGrant,onResponderMove:self.touchableHandleResponderMove,onResponderRelease:self.touchableHandleResponderRelease,onResponderTerminate:self.touchableHandleResponderTerminate}:null,rest);if(origin!=null){clean['transform-origin']=origin.toString().replace(',',' ');}else if(originX!=null||originY!=null){clean['transform-origin']=`${originX||0} ${originY||0}`;}const parsedTransform=parseTransformProp(transform,props);if(parsedTransform){clean.transform=parsedTransform;}const parsedGradientTransform=parseTransformProp(gradientTransform);if(parsedGradientTransform){clean.gradientTransform=parsedGradientTransform;}const parsedPatternTransform=parseTransformProp(patternTransform);if(parsedPatternTransform){clean.patternTransform=parsedPatternTransform;}clean.ref=el=>{self.elementRef.current=el;if(typeof forwardedRef==='function'){forwardedRef(el);}else if(forwardedRef){forwardedRef.current=el;}};const styles={};if(fontFamily!=null){styles.fontFamily=fontFamily;}if(fontSize!=null){styles.fontSize=fontSize;}if(fontWeight!=null){styles.fontWeight=fontWeight;}if(fontStyle!=null){styles.fontStyle=fontStyle;}clean.style=resolve(style,styles);if(onPress!==null){clean.onClick=props.onPress;}if(props.href!==null&&props.href!==undefined){var _resolveAssetUri;clean.href=(_resolveAssetUri=resolveAssetUri(props.href))===null||_resolveAssetUri===void 0?void 0:_resolveAssetUri.uri;}return clean;};","map":{"version":3,"names":["hasTouchableProperty","parseTransformProp","resolve","resolveAssetUri","prepare","self","props","transform","origin","originX","originY","fontFamily","fontSize","fontWeight","fontStyle","style","forwardedRef","gradientTransform","patternTransform","onPress","rest","_objectWithoutPropertiesLoose","_excluded","clean","Object","assign","onStartShouldSetResponder","touchableHandleStartShouldSetResponder","onResponderTerminationRequest","touchableHandleResponderTerminationRequest","onResponderGrant","touchableHandleResponderGrant","onResponderMove","touchableHandleResponderMove","onResponderRelease","touchableHandleResponderRelease","onResponderTerminate","touchableHandleResponderTerminate","toString","replace","parsedTransform","parsedGradientTransform","parsedPatternTransform","ref","el","elementRef","current","styles","onClick","href","undefined","_resolveAssetUri","uri"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-svg/src/web/utils/prepare.ts"],"sourcesContent":["import {\n  GestureResponderEvent,\n  type ImageProps as RNImageProps,\n} from 'react-native';\nimport { BaseProps } from '../types';\nimport { WebShape } from '../WebShape';\nimport { hasTouchableProperty, parseTransformProp } from '.';\nimport { resolve } from '../../lib/resolve';\nimport { NumberProp } from '../../lib/extract/types';\nimport { resolveAssetUri } from '../../lib/resolveAssetUri';\n/**\n * `react-native-svg` supports additional props that aren't defined in the spec.\n * This function replaces them in a spec conforming manner.\n *\n * @param {WebShape} self Instance given to us.\n * @param {Object?} props Optional overridden props given to us.\n * @returns {Object} Cleaned props object.\n * @private\n */\nexport const prepare = <T extends BaseProps>(\n  self: WebShape<T>,\n  props = self.props\n) => {\n  const {\n    transform,\n    origin,\n    originX,\n    originY,\n    fontFamily,\n    fontSize,\n    fontWeight,\n    fontStyle,\n    style,\n    forwardedRef,\n    gradientTransform,\n    patternTransform,\n    onPress,\n    ...rest\n  } = props;\n\n  const clean: {\n    onStartShouldSetResponder?: (e: GestureResponderEvent) => boolean;\n    onResponderMove?: (e: GestureResponderEvent) => void;\n    onResponderGrant?: (e: GestureResponderEvent) => void;\n    onResponderRelease?: (e: GestureResponderEvent) => void;\n    onResponderTerminate?: (e: GestureResponderEvent) => void;\n    onResponderTerminationRequest?: (e: GestureResponderEvent) => boolean;\n    onClick?: (e: GestureResponderEvent) => void;\n    transform?: string;\n    gradientTransform?: string;\n    patternTransform?: string;\n    'transform-origin'?: string;\n    href?: RNImageProps['source'] | string | null;\n    style?: object;\n    ref?: unknown;\n  } = {\n    ...(hasTouchableProperty(props)\n      ? {\n          onStartShouldSetResponder:\n            self.touchableHandleStartShouldSetResponder,\n          onResponderTerminationRequest:\n            self.touchableHandleResponderTerminationRequest,\n          onResponderGrant: self.touchableHandleResponderGrant,\n          onResponderMove: self.touchableHandleResponderMove,\n          onResponderRelease: self.touchableHandleResponderRelease,\n          onResponderTerminate: self.touchableHandleResponderTerminate,\n        }\n      : null),\n    ...rest,\n  };\n\n  if (origin != null) {\n    clean['transform-origin'] = origin.toString().replace(',', ' ');\n  } else if (originX != null || originY != null) {\n    clean['transform-origin'] = `${originX || 0} ${originY || 0}`;\n  }\n\n  // we do it like this because setting transform as undefined causes error in web\n  const parsedTransform = parseTransformProp(transform, props);\n  if (parsedTransform) {\n    clean.transform = parsedTransform;\n  }\n  const parsedGradientTransform = parseTransformProp(gradientTransform);\n  if (parsedGradientTransform) {\n    clean.gradientTransform = parsedGradientTransform;\n  }\n  const parsedPatternTransform = parseTransformProp(patternTransform);\n  if (parsedPatternTransform) {\n    clean.patternTransform = parsedPatternTransform;\n  }\n\n  clean.ref = (el: SVGElement | null) => {\n    self.elementRef.current = el;\n    if (typeof forwardedRef === 'function') {\n      forwardedRef(el);\n    } else if (forwardedRef) {\n      forwardedRef.current = el;\n    }\n  };\n\n  const styles: {\n    fontStyle?: string;\n    fontFamily?: string;\n    fontSize?: NumberProp;\n    fontWeight?: NumberProp;\n  } = {};\n\n  if (fontFamily != null) {\n    styles.fontFamily = fontFamily;\n  }\n  if (fontSize != null) {\n    styles.fontSize = fontSize;\n  }\n  if (fontWeight != null) {\n    styles.fontWeight = fontWeight;\n  }\n  if (fontStyle != null) {\n    styles.fontStyle = fontStyle;\n  }\n  clean.style = resolve(style, styles);\n  if (onPress !== null) {\n    clean.onClick = props.onPress;\n  }\n  if (props.href !== null && props.href !== undefined) {\n    clean.href = resolveAssetUri(props.href)?.uri;\n  }\n  return clean;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}