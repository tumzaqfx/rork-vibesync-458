{"ast":null,"code":"import{PermissionStatus,UnavailabilityError}from'expo-modules-core';import{LocationAccuracy}from'./Location.types';import{LocationEventEmitter}from'./LocationEventEmitter';class GeocoderError extends Error{constructor(){super('Geocoder service is not available for this device.');this.code='E_NO_GEOCODER';}}function geolocationPositionToJSON(position){const{coords,timestamp}=position;return{coords:{latitude:coords.latitude,longitude:coords.longitude,altitude:coords.altitude,accuracy:coords.accuracy,altitudeAccuracy:coords.altitudeAccuracy,heading:coords.heading,speed:coords.speed},timestamp};}function isLocationValid(location,options){const maxAge=typeof options.maxAge==='number'?options.maxAge:Infinity;const requiredAccuracy=typeof options.requiredAccuracy==='number'?options.requiredAccuracy:Infinity;const locationAccuracy=location.coords.accuracy??Infinity;return Date.now()-location.timestamp<=maxAge&&locationAccuracy<=requiredAccuracy;}async function getPermissionsAsync(shouldAsk=false){if(!navigator?.permissions?.query){throw new UnavailabilityError('expo-location','navigator.permissions API is not available');}const permission=await navigator.permissions.query({name:'geolocation'});if(permission.state==='granted'){return{status:PermissionStatus.GRANTED,granted:true,canAskAgain:true,expires:0};}if(permission.state==='denied'){return{status:PermissionStatus.DENIED,granted:false,canAskAgain:true,expires:0};}if(shouldAsk){return new Promise(resolve=>{navigator.geolocation.getCurrentPosition(()=>{resolve({status:PermissionStatus.GRANTED,granted:true,canAskAgain:true,expires:0});},positionError=>{if(positionError.code===positionError.PERMISSION_DENIED){resolve({status:PermissionStatus.DENIED,granted:false,canAskAgain:true,expires:0});return;}resolve({status:PermissionStatus.GRANTED,granted:false,canAskAgain:true,expires:0});});});}return{status:PermissionStatus.UNDETERMINED,granted:false,canAskAgain:true,expires:0};}let lastKnownPosition=null;export default{async getProviderStatusAsync(){return{locationServicesEnabled:'geolocation'in navigator};},async getLastKnownPositionAsync(options={}){if(lastKnownPosition&&isLocationValid(lastKnownPosition,options)){return lastKnownPosition;}return null;},async getCurrentPositionAsync(options){return new Promise((resolve,reject)=>{const resolver=position=>{lastKnownPosition=geolocationPositionToJSON(position);resolve(lastKnownPosition);};navigator.geolocation.getCurrentPosition(resolver,reject,Object.assign({maximumAge:Infinity,enableHighAccuracy:(options.accuracy??0)>LocationAccuracy.Balanced},options));});},async removeWatchAsync(watchId){navigator.geolocation.clearWatch(watchId);},async watchDeviceHeading(_headingId){console.warn('Location.watchDeviceHeading: is not supported on web');},async hasServicesEnabledAsync(){return'geolocation'in navigator;},async geocodeAsync(){throw new GeocoderError();},async reverseGeocodeAsync(){throw new GeocoderError();},async watchPositionImplAsync(watchId,options){return new Promise(resolve=>{watchId=navigator.geolocation.watchPosition(position=>{lastKnownPosition=geolocationPositionToJSON(position);LocationEventEmitter.emit('Expo.locationChanged',{watchId,location:lastKnownPosition});},undefined,options);resolve(watchId);});},async requestForegroundPermissionsAsync(){return getPermissionsAsync(true);},async requestBackgroundPermissionsAsync(){return getPermissionsAsync(true);},async getForegroundPermissionsAsync(){return getPermissionsAsync();},async getBackgroundPermissionsAsync(){return getPermissionsAsync();}};","map":{"version":3,"names":["PermissionStatus","UnavailabilityError","LocationAccuracy","LocationEventEmitter","GeocoderError","Error","constructor","code","geolocationPositionToJSON","position","coords","timestamp","latitude","longitude","altitude","accuracy","altitudeAccuracy","heading","speed","isLocationValid","location","options","maxAge","Infinity","requiredAccuracy","locationAccuracy","Date","now","getPermissionsAsync","shouldAsk","navigator","permissions","query","permission","name","state","status","GRANTED","granted","canAskAgain","expires","DENIED","Promise","resolve","geolocation","getCurrentPosition","positionError","PERMISSION_DENIED","UNDETERMINED","lastKnownPosition","getProviderStatusAsync","locationServicesEnabled","getLastKnownPositionAsync","getCurrentPositionAsync","reject","resolver","Object","assign","maximumAge","enableHighAccuracy","Balanced","removeWatchAsync","watchId","clearWatch","watchDeviceHeading","_headingId","console","warn","hasServicesEnabledAsync","geocodeAsync","reverseGeocodeAsync","watchPositionImplAsync","watchPosition","emit","undefined","requestForegroundPermissionsAsync","requestBackgroundPermissionsAsync","getForegroundPermissionsAsync","getBackgroundPermissionsAsync"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-location/src/ExpoLocation.web.ts"],"sourcesContent":["import { PermissionResponse, PermissionStatus, UnavailabilityError } from 'expo-modules-core';\n\nimport {\n  LocationAccuracy,\n  LocationLastKnownOptions,\n  LocationObject,\n  LocationOptions,\n} from './Location.types';\nimport { LocationEventEmitter } from './LocationEventEmitter';\n\nclass GeocoderError extends Error {\n  code: string;\n\n  constructor() {\n    super('Geocoder service is not available for this device.');\n    this.code = 'E_NO_GEOCODER';\n  }\n}\n\n/**\n * Converts `GeolocationPosition` to JavaScript object.\n */\nfunction geolocationPositionToJSON(position: LocationObject): LocationObject {\n  const { coords, timestamp } = position;\n  return {\n    coords: {\n      latitude: coords.latitude,\n      longitude: coords.longitude,\n      altitude: coords.altitude,\n      accuracy: coords.accuracy,\n      altitudeAccuracy: coords.altitudeAccuracy,\n      heading: coords.heading,\n      speed: coords.speed,\n    },\n    timestamp,\n  };\n}\n\n/**\n * Checks whether given location didn't exceed given `maxAge` and fits in the required accuracy.\n */\nfunction isLocationValid(location: LocationObject, options: LocationLastKnownOptions): boolean {\n  const maxAge = typeof options.maxAge === 'number' ? options.maxAge : Infinity;\n  const requiredAccuracy =\n    typeof options.requiredAccuracy === 'number' ? options.requiredAccuracy : Infinity;\n  const locationAccuracy = location.coords.accuracy ?? Infinity;\n\n  return Date.now() - location.timestamp <= maxAge && locationAccuracy <= requiredAccuracy;\n}\n\n/**\n * Gets the permission details. The implementation is not very good as it's not\n * possible to query for permission on all browsers, apparently only the\n * latest versions will support this.\n */\nasync function getPermissionsAsync(shouldAsk = false): Promise<PermissionResponse> {\n  if (!navigator?.permissions?.query) {\n    throw new UnavailabilityError('expo-location', 'navigator.permissions API is not available');\n  }\n\n  const permission = await navigator.permissions.query({ name: 'geolocation' });\n\n  if (permission.state === 'granted') {\n    return {\n      status: PermissionStatus.GRANTED,\n      granted: true,\n      canAskAgain: true,\n      expires: 0,\n    };\n  }\n\n  if (permission.state === 'denied') {\n    return {\n      status: PermissionStatus.DENIED,\n      granted: false,\n      canAskAgain: true,\n      expires: 0,\n    };\n  }\n\n  if (shouldAsk) {\n    return new Promise((resolve) => {\n      navigator.geolocation.getCurrentPosition(\n        () => {\n          resolve({\n            status: PermissionStatus.GRANTED,\n            granted: true,\n            canAskAgain: true,\n            expires: 0,\n          });\n        },\n        (positionError: GeolocationPositionError) => {\n          if (positionError.code === positionError.PERMISSION_DENIED) {\n            resolve({\n              status: PermissionStatus.DENIED,\n              granted: false,\n              canAskAgain: true,\n              expires: 0,\n            });\n            return;\n          }\n\n          resolve({\n            status: PermissionStatus.GRANTED,\n            granted: false,\n            canAskAgain: true,\n            expires: 0,\n          });\n        }\n      );\n    });\n  }\n\n  // The permission state is 'prompt' when the permission has not been requested\n  // yet, tested on Chrome.\n  return {\n    status: PermissionStatus.UNDETERMINED,\n    granted: false,\n    canAskAgain: true,\n    expires: 0,\n  };\n}\n\nlet lastKnownPosition: LocationObject | null = null;\n\nexport default {\n  async getProviderStatusAsync(): Promise<{ locationServicesEnabled: boolean }> {\n    return {\n      locationServicesEnabled: 'geolocation' in navigator,\n    };\n  },\n  async getLastKnownPositionAsync(\n    options: LocationLastKnownOptions = {}\n  ): Promise<LocationObject | null> {\n    if (lastKnownPosition && isLocationValid(lastKnownPosition, options)) {\n      return lastKnownPosition;\n    }\n    return null;\n  },\n  async getCurrentPositionAsync(options: LocationOptions): Promise<LocationObject> {\n    return new Promise<LocationObject>((resolve, reject) => {\n      const resolver: PositionCallback = (position) => {\n        lastKnownPosition = geolocationPositionToJSON(position);\n        resolve(lastKnownPosition);\n      };\n      navigator.geolocation.getCurrentPosition(resolver, reject, {\n        maximumAge: Infinity,\n        enableHighAccuracy: (options.accuracy ?? 0) > LocationAccuracy.Balanced,\n        ...options,\n      });\n    });\n  },\n  async removeWatchAsync(watchId: number): Promise<void> {\n    navigator.geolocation.clearWatch(watchId);\n  },\n  async watchDeviceHeading(_headingId: number): Promise<void> {\n    console.warn('Location.watchDeviceHeading: is not supported on web');\n  },\n  async hasServicesEnabledAsync(): Promise<boolean> {\n    return 'geolocation' in navigator;\n  },\n  async geocodeAsync(): Promise<any[]> {\n    throw new GeocoderError();\n  },\n  async reverseGeocodeAsync(): Promise<any[]> {\n    throw new GeocoderError();\n  },\n  async watchPositionImplAsync(watchId: number, options: PositionOptions): Promise<number> {\n    return new Promise((resolve) => {\n      watchId = navigator.geolocation.watchPosition(\n        (position) => {\n          lastKnownPosition = geolocationPositionToJSON(position);\n          LocationEventEmitter.emit('Expo.locationChanged', {\n            watchId,\n            location: lastKnownPosition,\n          });\n        },\n        undefined,\n        options\n      );\n      resolve(watchId);\n    });\n  },\n\n  async requestForegroundPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync(true);\n  },\n  async requestBackgroundPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync(true);\n  },\n  async getForegroundPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n  async getBackgroundPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}