{"ast":null,"code":"const DEG_TO_RAD=Math.PI/180;export const identity=[1,0,0,1,0,0];let a=1;let b=0;let c=0;let d=1;let tx=0;let ty=0;let hasInitialState=true;export function reset(){if(hasInitialState){return;}a=d=1;b=c=tx=ty=0;hasInitialState=true;}export function toArray(){if(hasInitialState){return identity;}return[a,b,c,d,tx,ty];}export function append(a2,b2,c2,d2,tx2,ty2){const change=a2!==1||b2!==0||c2!==0||d2!==1;const translate=tx2!==0||ty2!==0;if(!change&&!translate){return;}if(hasInitialState){hasInitialState=false;a=a2;b=b2;c=c2;d=d2;tx=tx2;ty=ty2;return;}const a1=a;const b1=b;const c1=c;const d1=d;if(change){a=a1*a2+c1*b2;b=b1*a2+d1*b2;c=a1*c2+c1*d2;d=b1*c2+d1*d2;}if(translate){tx=a1*tx2+c1*ty2+tx;ty=b1*tx2+d1*ty2+ty;}}export function appendTransform(x,y,scaleX,scaleY,rotation,skewX,skewY,regX,regY){if(x===0&&y===0&&scaleX===1&&scaleY===1&&rotation===0&&skewX===0&&skewY===0&&regX===0&&regY===0){return;}let cos,sin;if(rotation%360){const r=rotation*DEG_TO_RAD;cos=Math.cos(r);sin=Math.sin(r);}else{cos=1;sin=0;}const a2=cos*scaleX;const b2=sin*scaleX;const c2=-sin*scaleY;const d2=cos*scaleY;if(skewX||skewY){const b1=Math.tan(skewY*DEG_TO_RAD);const c1=Math.tan(skewX*DEG_TO_RAD);append(a2+c1*b2,b1*a2+b2,c2+c1*d2,b1*c2+d2,x,y);}else{append(a2,b2,c2,d2,x,y);}if(regX||regY){tx-=regX*a+regY*c;ty-=regX*b+regY*d;hasInitialState=false;}}","map":{"version":3,"names":["DEG_TO_RAD","Math","PI","identity","a","b","c","d","tx","ty","hasInitialState","reset","toArray","append","a2","b2","c2","d2","tx2","ty2","change","translate","a1","b1","c1","d1","appendTransform","x","y","scaleX","scaleY","rotation","skewX","skewY","regX","regY","cos","sin","r","tan"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-svg/src/lib/Matrix2D.ts"],"sourcesContent":["/**\n * based on\n * https://github.com/CreateJS/EaselJS/blob/631cdffb85eff9413dab43b4676f059b4232d291/src/easeljs/geom/Matrix2D.js\n */\nconst DEG_TO_RAD = Math.PI / 180;\n\nexport const identity: [number, number, number, number, number, number] = [\n  1, 0, 0, 1, 0, 0,\n];\n\nlet a = 1;\nlet b = 0;\nlet c = 0;\nlet d = 1;\nlet tx = 0;\nlet ty = 0;\nlet hasInitialState = true;\n\n/**\n * Represents an affine transformation matrix, and provides tools for concatenating transforms.\n *\n * This matrix can be visualized as:\n *\n * \t[ a  c  tx\n * \t  b  d  ty\n * \t  0  0  1  ]\n *\n * Note the locations of b and c.\n **/\n\n/**\n * Reset current matrix to an identity matrix.\n * @method reset\n **/\nexport function reset() {\n  if (hasInitialState) {\n    return;\n  }\n  a = d = 1;\n  b = c = tx = ty = 0;\n  hasInitialState = true;\n}\n\n/**\n * Returns an array with current matrix values.\n * @method toArray\n * @return {Array} an array with current matrix values.\n **/\nexport function toArray(): [number, number, number, number, number, number] {\n  if (hasInitialState) {\n    return identity;\n  }\n  return [a, b, c, d, tx, ty];\n}\n\n/**\n * Appends the specified matrix properties to this matrix. All parameters are required.\n * This is the equivalent of multiplying `(this matrix) * (specified matrix)`.\n * @method append\n * @param {Number} a2\n * @param {Number} b2\n * @param {Number} c2\n * @param {Number} d2\n * @param {Number} tx2\n * @param {Number} ty2\n **/\nexport function append(\n  a2: number,\n  b2: number,\n  c2: number,\n  d2: number,\n  tx2: number,\n  ty2: number\n) {\n  const change = a2 !== 1 || b2 !== 0 || c2 !== 0 || d2 !== 1;\n  const translate = tx2 !== 0 || ty2 !== 0;\n  if (!change && !translate) {\n    return;\n  }\n  if (hasInitialState) {\n    hasInitialState = false;\n    a = a2;\n    b = b2;\n    c = c2;\n    d = d2;\n    tx = tx2;\n    ty = ty2;\n    return;\n  }\n  const a1 = a;\n  const b1 = b;\n  const c1 = c;\n  const d1 = d;\n  if (change) {\n    a = a1 * a2 + c1 * b2;\n    b = b1 * a2 + d1 * b2;\n    c = a1 * c2 + c1 * d2;\n    d = b1 * c2 + d1 * d2;\n  }\n  if (translate) {\n    tx = a1 * tx2 + c1 * ty2 + tx;\n    ty = b1 * tx2 + d1 * ty2 + ty;\n  }\n}\n\n/**\n * Generates matrix properties from the specified display object transform properties, and appends them to this matrix.\n * For example, you can use this to generate a matrix representing the transformations of a display object:\n *\n * \treset();\n * \tappendTransform(o.x, o.y, o.scaleX, o.scaleY, o.rotation);\n * \tvar matrix = toArray()\n *\n * @method appendTransform\n * @param {Number} x\n * @param {Number} y\n * @param {Number} scaleX\n * @param {Number} scaleY\n * @param {Number} rotation\n * @param {Number} skewX\n * @param {Number} skewY\n * @param {Number} regX Optional.\n * @param {Number} regY Optional.\n **/\nexport function appendTransform(\n  x: number,\n  y: number,\n  scaleX: number,\n  scaleY: number,\n  rotation: number,\n  skewX: number,\n  skewY: number,\n  regX: number,\n  regY: number\n) {\n  if (\n    x === 0 &&\n    y === 0 &&\n    scaleX === 1 &&\n    scaleY === 1 &&\n    rotation === 0 &&\n    skewX === 0 &&\n    skewY === 0 &&\n    regX === 0 &&\n    regY === 0\n  ) {\n    return;\n  }\n  let cos, sin;\n  if (rotation % 360) {\n    const r = rotation * DEG_TO_RAD;\n    cos = Math.cos(r);\n    sin = Math.sin(r);\n  } else {\n    cos = 1;\n    sin = 0;\n  }\n\n  const a2 = cos * scaleX;\n  const b2 = sin * scaleX;\n  const c2 = -sin * scaleY;\n  const d2 = cos * scaleY;\n\n  if (skewX || skewY) {\n    const b1 = Math.tan(skewY * DEG_TO_RAD);\n    const c1 = Math.tan(skewX * DEG_TO_RAD);\n    append(a2 + c1 * b2, b1 * a2 + b2, c2 + c1 * d2, b1 * c2 + d2, x, y);\n  } else {\n    append(a2, b2, c2, d2, x, y);\n  }\n\n  if (regX || regY) {\n    // append the registration offset:\n    tx -= regX * a + regY * c;\n    ty -= regX * b + regY * d;\n    hasInitialState = false;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}