{"ast":null,"code":"import React,{useState}from'react';import{isImageRef}from'../utils';import{isBlurhashString,isThumbhashString}from'../utils/resolveSources';function findBestSourceForSize(sources,size){if(sources?.length===1){return sources[0];}return[...(sources||[])]?.map(source=>{if(!size){return{source,penalty:0,covers:false};}const{width,height}=typeof source==='object'?source:{width:null,height:null};if(width==null||height==null){return{source,penalty:0,covers:false};}if(width<size.width||height<size.height){return{source,penalty:Math.max(size.width-width,size.height-height),covers:false};}return{source,penalty:(width-size.width)*(height-size.height),covers:true};}).sort((a,b)=>a.penalty-b.penalty).sort((a,b)=>Number(b.covers)-Number(a.covers))[0]?.source??null;}function getCSSMediaQueryForSource(source){return`(max-width: ${source.webMaxViewportWidth??source.width}px) ${source.width}px`;}function selectSource(sources,size,responsivePolicy){if(sources==null||sources.length===0){return null;}if(sources.length===1){return sources[0];}if(responsivePolicy!=='static'){return findBestSourceForSize(sources,size);}const staticSupportedSources=sources.filter(s=>s.uri&&s.width!=null&&!isBlurhashString(s.uri)&&!isThumbhashString(s.uri)).sort((a,b)=>(a.webMaxViewportWidth??a.width??0)-(b.webMaxViewportWidth??b.width??0));if(staticSupportedSources.length===0){console.warn(\"You've set the `static` responsivePolicy but none of the sources have the `width` properties set. Make sure you set both `width` and `webMaxViewportWidth` for best results when using static responsiveness. Falling back to the `initial` policy.\");return findBestSourceForSize(sources,size);}const srcset=staticSupportedSources?.map(source=>`${source.uri} ${source.width}w`).join(', ');const sizes=`${staticSupportedSources?.map(getCSSMediaQueryForSource).join(', ')}, ${staticSupportedSources[staticSupportedSources.length-1]?.width}px`;return{srcset,sizes,uri:staticSupportedSources[staticSupportedSources.length-1]?.uri??'',type:'srcset'};}export default function useSourceSelection(sources,responsivePolicy='static',containerRef,measurementCallback=null){const hasMoreThanOneSource=(Array.isArray(sources)?sources.length:0)>1;const[size,setSize]=useState(containerRef.current?.getBoundingClientRect()??null);if(size&&containerRef.current){measurementCallback?.(containerRef.current,size);}React.useEffect(()=>{if(!hasMoreThanOneSource&&!measurementCallback||!containerRef.current){return()=>{};}if(responsivePolicy==='live'){const resizeObserver=new ResizeObserver(entries=>{setSize(entries[0].contentRect);measurementCallback?.(entries[0].target,entries[0].contentRect);});resizeObserver.observe(containerRef.current);return()=>{resizeObserver.disconnect();};}return()=>{};},[responsivePolicy,hasMoreThanOneSource,containerRef.current,measurementCallback]);if(isImageRef(sources)){return sources;}return selectSource(sources,size,responsivePolicy);}","map":{"version":3,"names":["React","useState","isImageRef","isBlurhashString","isThumbhashString","findBestSourceForSize","sources","size","length","map","source","penalty","covers","width","height","Math","max","sort","a","b","Number","getCSSMediaQueryForSource","webMaxViewportWidth","selectSource","responsivePolicy","staticSupportedSources","filter","s","uri","console","warn","srcset","join","sizes","type","useSourceSelection","containerRef","measurementCallback","hasMoreThanOneSource","Array","isArray","setSize","current","getBoundingClientRect","useEffect","resizeObserver","ResizeObserver","entries","contentRect","target","observe","disconnect"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-image/src/web/useSourceSelection.ts"],"sourcesContent":["import type { SharedRefType } from 'expo';\nimport React, { useState } from 'react';\n\nimport { ImageProps, ImageSource } from '../Image.types';\nimport { isImageRef } from '../utils';\nimport { isBlurhashString, isThumbhashString } from '../utils/resolveSources';\n\nfunction findBestSourceForSize(\n  sources: ImageSource[] | undefined,\n  size: DOMRect | null\n): ImageSource | null {\n  if (sources?.length === 1) {\n    return sources[0];\n  }\n  return (\n    [...(sources || [])]\n      // look for the smallest image that's still larger then a container\n      ?.map((source) => {\n        if (!size) {\n          return { source, penalty: 0, covers: false };\n        }\n        const { width, height } =\n          typeof source === 'object' ? source : { width: null, height: null };\n        if (width == null || height == null) {\n          return { source, penalty: 0, covers: false };\n        }\n        if (width < size.width || height < size.height) {\n          return {\n            source,\n            penalty: Math.max(size.width - width, size.height - height),\n            covers: false,\n          };\n        }\n        return { source, penalty: (width - size.width) * (height - size.height), covers: true };\n      })\n      .sort((a, b) => a.penalty - b.penalty)\n      .sort((a, b) => Number(b.covers) - Number(a.covers))[0]?.source ?? null\n  );\n}\n\nexport interface SrcSetSource extends ImageSource {\n  srcset: string;\n  sizes: string;\n  // used as key and a fallback in case srcset is not supported\n  uri: string;\n  type: 'srcset';\n}\n\nfunction getCSSMediaQueryForSource(source: ImageSource) {\n  return `(max-width: ${source.webMaxViewportWidth ?? source.width}px) ${source.width}px`;\n}\n\nfunction selectSource(\n  sources: ImageSource[] | undefined,\n  size: DOMRect | null,\n  responsivePolicy: ImageProps['responsivePolicy']\n): ImageSource | SrcSetSource | null {\n  if (sources == null || sources.length === 0) {\n    return null;\n  }\n\n  if (sources.length === 1) {\n    return sources[0];\n  }\n\n  if (responsivePolicy !== 'static') {\n    return findBestSourceForSize(sources, size);\n  }\n  const staticSupportedSources = sources\n    .filter(\n      (s) => s.uri && s.width != null && !isBlurhashString(s.uri) && !isThumbhashString(s.uri)\n    )\n    .sort(\n      (a, b) => (a.webMaxViewportWidth ?? a.width ?? 0) - (b.webMaxViewportWidth ?? b.width ?? 0)\n    );\n\n  if (staticSupportedSources.length === 0) {\n    console.warn(\n      \"You've set the `static` responsivePolicy but none of the sources have the `width` properties set. Make sure you set both `width` and `webMaxViewportWidth` for best results when using static responsiveness. Falling back to the `initial` policy.\"\n    );\n    return findBestSourceForSize(sources, size);\n  }\n\n  const srcset = staticSupportedSources\n    ?.map((source) => `${source.uri} ${source.width}w`)\n    .join(', ');\n  const sizes = `${staticSupportedSources\n    ?.map(getCSSMediaQueryForSource)\n    .join(', ')}, ${staticSupportedSources[staticSupportedSources.length - 1]?.width}px`;\n  return {\n    srcset,\n    sizes,\n    uri: staticSupportedSources[staticSupportedSources.length - 1]?.uri ?? '',\n    type: 'srcset',\n  };\n}\n\nexport default function useSourceSelection(\n  sources: ImageSource[] | SharedRefType<'image'> | undefined,\n  responsivePolicy: ImageProps['responsivePolicy'] = 'static',\n  containerRef: React.RefObject<HTMLDivElement | null>,\n  measurementCallback: ((target: HTMLElement, size: DOMRect) => void) | null = null\n): ImageSource | SrcSetSource | SharedRefType<'image'> | null {\n  const hasMoreThanOneSource = (Array.isArray(sources) ? sources.length : 0) > 1;\n  const [size, setSize] = useState<null | DOMRect>(\n    containerRef.current?.getBoundingClientRect() ?? null\n  );\n  if (size && containerRef.current) {\n    measurementCallback?.(containerRef.current, size);\n  }\n\n  React.useEffect(() => {\n    if ((!hasMoreThanOneSource && !measurementCallback) || !containerRef.current) {\n      return () => {};\n    }\n    if (responsivePolicy === 'live') {\n      const resizeObserver = new ResizeObserver((entries) => {\n        setSize(entries[0].contentRect);\n        measurementCallback?.(entries[0].target as any, entries[0].contentRect);\n      });\n      resizeObserver.observe(containerRef.current);\n      return () => {\n        resizeObserver.disconnect();\n      };\n    }\n    return () => {};\n  }, [responsivePolicy, hasMoreThanOneSource, containerRef.current, measurementCallback]);\n\n  if (isImageRef(sources)) {\n    // There is always only one image ref, so there is nothing else to select from.\n    return sources;\n  }\n  return selectSource(sources, size, responsivePolicy);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}