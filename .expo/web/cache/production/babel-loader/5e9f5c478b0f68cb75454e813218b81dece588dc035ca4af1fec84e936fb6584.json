{"ast":null,"code":"import{FlingGesture}from'./flingGesture';import{ForceTouchGesture}from'./forceTouchGesture';import{ComposedGesture,ExclusiveGesture,SimultaneousGesture}from'./gestureComposition';import{LongPressGesture}from'./longPressGesture';import{PanGesture}from'./panGesture';import{PinchGesture}from'./pinchGesture';import{RotationGesture}from'./rotationGesture';import{TapGesture}from'./tapGesture';import{NativeGesture}from'./nativeGesture';import{ManualGesture}from'./manualGesture';import{HoverGesture}from'./hoverGesture';export const GestureObjects={Tap:()=>{return new TapGesture();},Pan:()=>{return new PanGesture();},Pinch:()=>{return new PinchGesture();},Rotation:()=>{return new RotationGesture();},Fling:()=>{return new FlingGesture();},LongPress:()=>{return new LongPressGesture();},ForceTouch:()=>{return new ForceTouchGesture();},Native:()=>{return new NativeGesture();},Manual:()=>{return new ManualGesture();},Hover:()=>{return new HoverGesture();},Race:(...gestures)=>{return new ComposedGesture(...gestures);},Simultaneous(...gestures){return new SimultaneousGesture(...gestures);},Exclusive(...gestures){return new ExclusiveGesture(...gestures);}};","map":{"version":3,"names":["FlingGesture","ForceTouchGesture","ComposedGesture","ExclusiveGesture","SimultaneousGesture","LongPressGesture","PanGesture","PinchGesture","RotationGesture","TapGesture","NativeGesture","ManualGesture","HoverGesture","GestureObjects","Tap","Pan","Pinch","Rotation","Fling","LongPress","ForceTouch","Native","Manual","Hover","Race","gestures","Simultaneous","Exclusive"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/gestureObjects.ts"],"sourcesContent":["import { FlingGesture } from './flingGesture';\nimport { ForceTouchGesture } from './forceTouchGesture';\nimport { Gesture } from './gesture';\nimport {\n  ComposedGesture,\n  ExclusiveGesture,\n  SimultaneousGesture,\n} from './gestureComposition';\nimport { LongPressGesture } from './longPressGesture';\nimport { PanGesture } from './panGesture';\nimport { PinchGesture } from './pinchGesture';\nimport { RotationGesture } from './rotationGesture';\nimport { TapGesture } from './tapGesture';\nimport { NativeGesture } from './nativeGesture';\nimport { ManualGesture } from './manualGesture';\nimport { HoverGesture } from './hoverGesture';\n\n/**\n * `Gesture` is the object that allows you to create and compose gestures.\n *\n * ### Remarks\n * - Consider wrapping your gesture configurations with `useMemo`, as it will reduce the amount of work Gesture Handler has to do under the hood when updating gestures.\n *\n * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/gesture\n */\nexport const GestureObjects = {\n  /**\n   * A discrete gesture that recognizes one or many taps.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/tap-gesture\n   */\n  Tap: () => {\n    return new TapGesture();\n  },\n\n  /**\n   * A continuous gesture that can recognize a panning (dragging) gesture and track its movement.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture\n   */\n  Pan: () => {\n    return new PanGesture();\n  },\n\n  /**\n   * A continuous gesture that recognizes pinch gesture. It allows for tracking the distance between two fingers and use that information to scale or zoom your content.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pinch-gesture\n   */\n  Pinch: () => {\n    return new PinchGesture();\n  },\n\n  /**\n   * A continuous gesture that can recognize rotation and track its movement.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/rotation-gesture\n   */\n  Rotation: () => {\n    return new RotationGesture();\n  },\n\n  /**\n   * A discrete gesture that activates when the movement is sufficiently fast.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/fling-gesture\n   */\n  Fling: () => {\n    return new FlingGesture();\n  },\n\n  /**\n   * A discrete gesture that activates when the corresponding view is pressed for a sufficiently long time.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/long-press-gesture\n   */\n  LongPress: () => {\n    return new LongPressGesture();\n  },\n\n  /**\n   * #### iOS only\n   * A continuous gesture that recognizes force of a touch. It allows for tracking pressure of touch on some iOS devices.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/force-touch-gesture\n   */\n  ForceTouch: () => {\n    return new ForceTouchGesture();\n  },\n\n  /**\n   * A gesture that allows other touch handling components to participate in RNGH's gesture system.\n   * When used, the other component should be the direct child of a `GestureDetector`.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/native-gesture\n   */\n  Native: () => {\n    return new NativeGesture();\n  },\n\n  /**\n   * A plain gesture that has no specific activation criteria nor event data set.\n   * Its state has to be controlled manually using a state manager.\n   * It will not fail when all the pointers are lifted from the screen.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/manual-gesture\n   */\n  Manual: () => {\n    return new ManualGesture();\n  },\n\n  /**\n   * A continuous gesture that can recognize hovering above the view it's attached to.\n   * The hover effect may be activated by moving a mouse or a stylus over the view.\n   *\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/hover-gesture\n   */\n  Hover: () => {\n    return new HoverGesture();\n  },\n\n  /**\n   * Builds a composed gesture consisting of gestures provided as parameters.\n   * The first one that becomes active cancels the rest of gestures.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#race\n   */\n  Race: (...gestures: Gesture[]) => {\n    return new ComposedGesture(...gestures);\n  },\n\n  /**\n   * Builds a composed gesture that allows all base gestures to run simultaneously.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#simultaneous\n   */\n  Simultaneous(...gestures: Gesture[]) {\n    return new SimultaneousGesture(...gestures);\n  },\n\n  /**\n   * Builds a composed gesture where only one of the provided gestures can become active.\n   * Priority is decided through the order of gestures: the first one has higher priority\n   * than the second one, second one has higher priority than the third one, and so on.\n   * For example, to make a gesture that recognizes both single and double tap you need\n   * to call Exclusive(doubleTap, singleTap).\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#exclusive\n   */\n  Exclusive(...gestures: Gesture[]) {\n    return new ExclusiveGesture(...gestures);\n  },\n};\n"],"mappings":"AAAA,OAASA,YAAT,KAA6B,gBAA7B,CACA,OAASC,iBAAT,KAAkC,qBAAlC,CAEA,OACEC,eADF,CAEEC,gBAFF,CAGEC,mBAHF,KAIO,sBAJP,CAKA,OAASC,gBAAT,KAAiC,oBAAjC,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,OAASC,YAAT,KAA6B,gBAA7B,CACA,OAASC,eAAT,KAAgC,mBAAhC,CACA,OAASC,UAAT,KAA2B,cAA3B,CACA,OAASC,aAAT,KAA8B,iBAA9B,CACA,OAASC,aAAT,KAA8B,iBAA9B,CACA,OAASC,YAAT,KAA6B,gBAA7B,CAUA,MAAO,MAAM,CAAAC,cAAc,CAAG,CAK5BC,GAAG,CAAEA,CAAA,GAAM,CACT,MAAO,IAAI,CAAAL,UAAJ,EAAP,CACD,CAP2B,CAa5BM,GAAG,CAAEA,CAAA,GAAM,CACT,MAAO,IAAI,CAAAT,UAAJ,EAAP,CACD,CAf2B,CAqB5BU,KAAK,CAAEA,CAAA,GAAM,CACX,MAAO,IAAI,CAAAT,YAAJ,EAAP,CACD,CAvB2B,CA6B5BU,QAAQ,CAAEA,CAAA,GAAM,CACd,MAAO,IAAI,CAAAT,eAAJ,EAAP,CACD,CA/B2B,CAqC5BU,KAAK,CAAEA,CAAA,GAAM,CACX,MAAO,IAAI,CAAAlB,YAAJ,EAAP,CACD,CAvC2B,CA6C5BmB,SAAS,CAAEA,CAAA,GAAM,CACf,MAAO,IAAI,CAAAd,gBAAJ,EAAP,CACD,CA/C2B,CAsD5Be,UAAU,CAAEA,CAAA,GAAM,CAChB,MAAO,IAAI,CAAAnB,iBAAJ,EAAP,CACD,CAxD2B,CA+D5BoB,MAAM,CAAEA,CAAA,GAAM,CACZ,MAAO,IAAI,CAAAX,aAAJ,EAAP,CACD,CAjE2B,CAyE5BY,MAAM,CAAEA,CAAA,GAAM,CACZ,MAAO,IAAI,CAAAX,aAAJ,EAAP,CACD,CA3E2B,CAmF5BY,KAAK,CAAEA,CAAA,GAAM,CACX,MAAO,IAAI,CAAAX,YAAJ,EAAP,CACD,CArF2B,CA4F5BY,IAAI,CAAEA,CAAC,GAAGC,QAAJ,GAA4B,CAChC,MAAO,IAAI,CAAAvB,eAAJ,CAAoB,GAAGuB,QAAvB,CAAP,CACD,CA9F2B,CAoG5BC,YAAYA,CAAC,GAAGD,QAAJ,CAAyB,CACnC,MAAO,IAAI,CAAArB,mBAAJ,CAAwB,GAAGqB,QAA3B,CAAP,CACD,CAtG2B,CAgH5BE,SAASA,CAAC,GAAGF,QAAJ,CAAyB,CAChC,MAAO,IAAI,CAAAtB,gBAAJ,CAAqB,GAAGsB,QAAxB,CAAP,CACD,CAlH2B,CAAvB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}