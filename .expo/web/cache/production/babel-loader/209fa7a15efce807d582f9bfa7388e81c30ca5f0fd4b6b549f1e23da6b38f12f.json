{"ast":null,"code":"\"use strict\";'use client';var _reactJsxRuntime=require(\"react/jsx-runtime\");var _objectWithoutPropertiesLoose=require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");const _excluded=[\"wrapper\"];var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||(\"get\"in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function(){return m[k];}};}Object.defineProperty(o,k2,desc);}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,\"default\",{enumerable:true,value:v});}:function(o,v){o[\"default\"]=v;});var __importStar=this&&this.__importStar||function(){var ownKeys=function(o){ownKeys=Object.getOwnPropertyNames||function(o){var ar=[];for(var k in o)if(Object.prototype.hasOwnProperty.call(o,k))ar[ar.length]=k;return ar;};return ownKeys(o);};return function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k=ownKeys(mod),i=0;i<k.length;i++)if(k[i]!==\"default\")__createBinding(result,mod,k[i]);__setModuleDefault(result,mod);return result;};}();Object.defineProperty(exports,\"__esModule\",{value:true});exports.ExpoRoot=ExpoRoot;const native_1=require(\"@react-navigation/native\");const react_1=__importStar(require(\"react\"));const react_native_1=require(\"react-native-web/dist/index\");const react_native_safe_area_context_1=require(\"react-native-safe-area-context\");const constants_1=require(\"./constants\");const useDomComponentNavigation_1=require(\"./domComponents/useDomComponentNavigation\");const NavigationContainer_1=require(\"./fork/NavigationContainer\");const router_store_1=require(\"./global-state/router-store\");const serverLocationContext_1=require(\"./global-state/serverLocationContext\");const storeContext_1=require(\"./global-state/storeContext\");const primitives_1=require(\"./primitives\");const statusbar_1=require(\"./utils/statusbar\");const SplashScreen=__importStar(require(\"./views/Splash\"));const isTestEnv=false;const INITIAL_METRICS=react_native_1.Platform.OS==='web'||isTestEnv?{frame:{x:0,y:0,width:0,height:0},insets:{top:0,left:0,right:0,bottom:0}}:undefined;const documentTitle={enabled:false};function ExpoRoot(_ref){let{wrapper:ParentWrapper=react_1.Fragment}=_ref,props=_objectWithoutPropertiesLoose(_ref,_excluded);const wrapper=({children})=>{return _reactJsxRuntime.jsx(ParentWrapper,{children:_reactJsxRuntime.jsxs(react_native_safe_area_context_1.SafeAreaProvider,{initialMetrics:INITIAL_METRICS,children:[statusbar_1.canOverrideStatusBarBehavior&&_reactJsxRuntime.jsx(AutoStatusBar,{}),children]})});};return _reactJsxRuntime.jsx(ContextNavigator,Object.assign({},props,{wrapper:wrapper}));}function AutoStatusBar(){return _reactJsxRuntime.jsx(react_native_1.StatusBar,{barStyle:(0,react_native_1.useColorScheme)()==='light'?'dark-content':'light-content'});}const initialUrl=react_native_1.Platform.OS==='web'&&true?new URL(window.location.href):undefined;function ContextNavigator({context,location:initialLocation=initialUrl,wrapper:WrapperComponent=react_1.Fragment,linking={}}){const serverContext=(0,react_1.useMemo)(()=>{let contextType={};if(initialLocation instanceof URL){contextType={location:{pathname:initialLocation.pathname+initialLocation.hash,search:initialLocation.search}};}else if(typeof initialLocation==='string'){const url=new URL(initialLocation,'http://placeholder.base');contextType={location:{pathname:url.pathname,search:url.search}};}return contextType;},[]);const serverUrl=serverContext.location?`${serverContext.location.pathname}${serverContext.location.search}`:undefined;const store=(0,router_store_1.useStore)(context,linking,serverUrl);(0,useDomComponentNavigation_1.useDomComponentNavigation)();if(store.shouldShowTutorial()){SplashScreen.hideAsync();if(false){const Tutorial=require('./onboard/Tutorial').Tutorial;return _reactJsxRuntime.jsx(WrapperComponent,{children:_reactJsxRuntime.jsx(Tutorial,{})});}else{return null;}}return _reactJsxRuntime.jsx(storeContext_1.StoreContext.Provider,{value:store,children:_reactJsxRuntime.jsx(NavigationContainer_1.NavigationContainer,{ref:store.navigationRef,initialState:store.state,linking:store.linking,onUnhandledAction:onUnhandledAction,documentTitle:documentTitle,onReady:store.onReady,children:_reactJsxRuntime.jsx(serverLocationContext_1.ServerContext.Provider,{value:serverContext,children:_reactJsxRuntime.jsx(WrapperComponent,{children:_reactJsxRuntime.jsx(Content,{})})})})});}function Content(){const{state,descriptors,NavigationContent}=(0,native_1.useNavigationBuilder)(native_1.StackRouter,{children:_reactJsxRuntime.jsx(primitives_1.Screen,{name:constants_1.INTERNAL_SLOT_NAME,component:router_store_1.store.rootComponent})});return _reactJsxRuntime.jsx(NavigationContent,{children:descriptors[state.routes[0].key].render()});}let onUnhandledAction;if(false){onUnhandledAction=action=>{const payload=action.payload;let message=`The action '${action.type}'${payload?` with payload ${JSON.stringify(action.payload)}`:''} was not handled by any navigator.`;switch(action.type){case'NAVIGATE':case'PUSH':case'REPLACE':case'JUMP_TO':if(payload?.name){message+=`\\n\\nDo you have a route named '${payload.name}'?`;}else{message+=`\\n\\nYou need to pass the name of the screen to navigate to. This may be a bug.`;}break;case'GO_BACK':case'POP':case'POP_TO_TOP':message+=`\\n\\nIs there any screen to go back to?`;break;case'OPEN_DRAWER':case'CLOSE_DRAWER':case'TOGGLE_DRAWER':message+=`\\n\\nIs your screen inside a Drawer navigator?`;break;}message+=`\\n\\nThis is a development-only warning and won't be shown in production.`;if(false){throw new Error(message);}console.error(message);};}else{onUnhandledAction=function(){};}","map":{"version":3,"names":["_reactJsxRuntime","require","_objectWithoutPropertiesLoose","_excluded","exports","ExpoRoot","native_1","react_1","__importStar","react_native_1","react_native_safe_area_context_1","constants_1","useDomComponentNavigation_1","NavigationContainer_1","router_store_1","serverLocationContext_1","storeContext_1","primitives_1","statusbar_1","SplashScreen","isTestEnv","INITIAL_METRICS","Platform","OS","frame","x","y","width","height","insets","top","left","right","bottom","undefined","documentTitle","enabled","_ref","wrapper","ParentWrapper","Fragment","props","children","jsx","jsxs","SafeAreaProvider","initialMetrics","canOverrideStatusBarBehavior","AutoStatusBar","ContextNavigator","Object","assign","StatusBar","barStyle","useColorScheme","initialUrl","URL","window","location","href","context","initialLocation","WrapperComponent","linking","serverContext","useMemo","contextType","pathname","hash","search","url","serverUrl","store","useStore","useDomComponentNavigation","shouldShowTutorial","hideAsync","Tutorial","StoreContext","Provider","value","NavigationContainer","ref","navigationRef","initialState","state","onUnhandledAction","onReady","ServerContext","Content","descriptors","NavigationContent","useNavigationBuilder","StackRouter","Screen","name","INTERNAL_SLOT_NAME","component","rootComponent","routes","key","render","action","payload","message","type","JSON","stringify","Error","console","error"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-router/src/ExpoRoot.tsx"],"sourcesContent":["'use client';\n\nimport {\n  LinkingOptions,\n  NavigationAction,\n  StackRouter,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport React, { type PropsWithChildren, Fragment, type ComponentType, useMemo } from 'react';\nimport { StatusBar, useColorScheme, Platform } from 'react-native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport { INTERNAL_SLOT_NAME } from './constants';\nimport { useDomComponentNavigation } from './domComponents/useDomComponentNavigation';\nimport { NavigationContainer as UpstreamNavigationContainer } from './fork/NavigationContainer';\nimport { ExpoLinkingOptions } from './getLinkingConfig';\nimport { store, useStore } from './global-state/router-store';\nimport { ServerContext, ServerContextType } from './global-state/serverLocationContext';\nimport { StoreContext } from './global-state/storeContext';\nimport { Screen } from './primitives';\nimport { RequireContext } from './types';\nimport { canOverrideStatusBarBehavior } from './utils/statusbar';\nimport * as SplashScreen from './views/Splash';\n\nexport type ExpoRootProps = {\n  context: RequireContext;\n  location?: URL | string;\n  wrapper?: ComponentType<PropsWithChildren>;\n  linking?: Partial<ExpoLinkingOptions>;\n};\n\nexport type NativeIntent = {\n  redirectSystemPath?: (event: {\n    path: string | null;\n    initial: boolean;\n  }) => Promise<string | null | undefined> | string | null | undefined;\n};\n\nconst isTestEnv = process.env.NODE_ENV === 'test';\n\nconst INITIAL_METRICS =\n  Platform.OS === 'web' || isTestEnv\n    ? {\n        frame: { x: 0, y: 0, width: 0, height: 0 },\n        insets: { top: 0, left: 0, right: 0, bottom: 0 },\n      }\n    : undefined;\n\nconst documentTitle = {\n  enabled: false,\n};\n\n/**\n * @hidden\n */\nexport function ExpoRoot({ wrapper: ParentWrapper = Fragment, ...props }: ExpoRootProps) {\n  /*\n   * Due to static rendering we need to wrap these top level views in second wrapper\n   * View's like <SafeAreaProvider /> generate a <div> so if the parent wrapper\n   * is a HTML document, we need to ensure its inside the <body>\n   */\n  const wrapper = ({ children }: PropsWithChildren) => {\n    return (\n      <ParentWrapper>\n        <SafeAreaProvider\n          // SSR support\n          initialMetrics={INITIAL_METRICS}>\n          {/* Users can override this by adding another StatusBar element anywhere higher in the component tree. */}\n          {canOverrideStatusBarBehavior && <AutoStatusBar />}\n          {children}\n        </SafeAreaProvider>\n      </ParentWrapper>\n    );\n  };\n\n  return <ContextNavigator {...props} wrapper={wrapper} />;\n}\n\nfunction AutoStatusBar() {\n  return <StatusBar barStyle={useColorScheme() === 'light' ? 'dark-content' : 'light-content'} />;\n}\n\nconst initialUrl =\n  Platform.OS === 'web' && typeof window !== 'undefined'\n    ? new URL(window.location.href)\n    : undefined;\n\nfunction ContextNavigator({\n  context,\n  location: initialLocation = initialUrl,\n  wrapper: WrapperComponent = Fragment,\n  linking = {},\n}: ExpoRootProps) {\n  // location and linking.getInitialURL are both used to initialize the router state\n  //  - location is used on web and during static rendering\n  //  - linking.getInitialURL is used on native\n  const serverContext = useMemo(() => {\n    let contextType: ServerContextType = {};\n\n    if (initialLocation instanceof URL) {\n      contextType = {\n        location: {\n          pathname: initialLocation.pathname + initialLocation.hash,\n          search: initialLocation.search,\n        },\n      };\n    } else if (typeof initialLocation === 'string') {\n      // The initial location is a string, so we need to parse it into a URL.\n      const url = new URL(initialLocation, 'http://placeholder.base');\n      contextType = {\n        location: {\n          pathname: url.pathname,\n          search: url.search,\n        },\n      };\n    }\n\n    return contextType;\n  }, []);\n\n  /*\n   * The serverUrl is an initial URL used in server rendering environments.\n   * e.g Static renders, units tests, etc\n   */\n  const serverUrl = serverContext.location\n    ? `${serverContext.location.pathname}${serverContext.location.search}`\n    : undefined;\n\n  const store = useStore(context, linking, serverUrl);\n\n  useDomComponentNavigation();\n\n  if (store.shouldShowTutorial()) {\n    SplashScreen.hideAsync();\n    if (process.env.NODE_ENV === 'development') {\n      const Tutorial = require('./onboard/Tutorial').Tutorial;\n      return (\n        <WrapperComponent>\n          <Tutorial />\n        </WrapperComponent>\n      );\n    } else {\n      // Ensure tutorial styles are stripped in production.\n      return null;\n    }\n  }\n\n  return (\n    <StoreContext.Provider value={store}>\n      <UpstreamNavigationContainer\n        ref={store.navigationRef}\n        initialState={store.state}\n        linking={store.linking as LinkingOptions<any>}\n        onUnhandledAction={onUnhandledAction}\n        documentTitle={documentTitle}\n        onReady={store.onReady}>\n        <ServerContext.Provider value={serverContext}>\n          <WrapperComponent>\n            <Content />\n          </WrapperComponent>\n        </ServerContext.Provider>\n      </UpstreamNavigationContainer>\n    </StoreContext.Provider>\n  );\n}\n\nfunction Content() {\n  const { state, descriptors, NavigationContent } = useNavigationBuilder(StackRouter, {\n    children: <Screen name={INTERNAL_SLOT_NAME} component={store.rootComponent} />,\n  });\n\n  return <NavigationContent>{descriptors[state.routes[0].key].render()}</NavigationContent>;\n}\n\nlet onUnhandledAction: (action: NavigationAction) => void;\n\nif (process.env.NODE_ENV !== 'production') {\n  onUnhandledAction = (action: NavigationAction) => {\n    const payload: Record<string, any> | undefined = action.payload;\n\n    let message = `The action '${action.type}'${\n      payload ? ` with payload ${JSON.stringify(action.payload)}` : ''\n    } was not handled by any navigator.`;\n\n    switch (action.type) {\n      case 'NAVIGATE':\n      case 'PUSH':\n      case 'REPLACE':\n      case 'JUMP_TO':\n        if (payload?.name) {\n          message += `\\n\\nDo you have a route named '${payload.name}'?`;\n        } else {\n          message += `\\n\\nYou need to pass the name of the screen to navigate to. This may be a bug.`;\n        }\n\n        break;\n      case 'GO_BACK':\n      case 'POP':\n      case 'POP_TO_TOP':\n        message += `\\n\\nIs there any screen to go back to?`;\n        break;\n      case 'OPEN_DRAWER':\n      case 'CLOSE_DRAWER':\n      case 'TOGGLE_DRAWER':\n        message += `\\n\\nIs your screen inside a Drawer navigator?`;\n        break;\n    }\n\n    message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\n\n    if (process.env.NODE_ENV === 'test') {\n      throw new Error(message);\n    }\n    console.error(message);\n  };\n} else {\n  onUnhandledAction = function () {};\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}