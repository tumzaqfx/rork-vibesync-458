{"ast":null,"code":"'use strict';import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"transform\"];import{AnimationsData,TransitionType}from\"./config.js\";import{convertAnimationObjectToKeyframes}from\"./animationParser.js\";import{LinearTransition}from\"./transition/Linear.web.js\";import{SequencedTransition}from\"./transition/Sequenced.web.js\";import{FadingTransition}from\"./transition/Fading.web.js\";import{JumpingTransition}from\"./transition/Jumping.web.js\";import{insertWebAnimation}from\"./domUtils.js\";import{CurvedTransition}from\"./transition/Curved.web.js\";import{EntryExitTransition}from\"./transition/EntryExit.web.js\";function addPxToTransform(transform){const newTransform=transform.map(transformProp=>{const newTransformProp={};for(const[key,value]of Object.entries(transformProp)){if((key.includes('translate')||key.includes('perspective'))&&typeof value==='number'){newTransformProp[key]=`${value}px`;}else{newTransformProp[key]=value;}}return newTransformProp;});return newTransform;}export function createCustomKeyFrameAnimation(keyframeDefinitions){for(const value of Object.values(keyframeDefinitions)){if(value.transform){value.transform=addPxToTransform(value.transform);}}const animationData={name:'',style:keyframeDefinitions,duration:-1};animationData.name=generateNextCustomKeyframeName();const parsedKeyframe=convertAnimationObjectToKeyframes(animationData);insertWebAnimation(animationData.name,parsedKeyframe);return animationData.name;}export function createAnimationWithInitialValues(animationName,initialValues){const animationStyle=structuredClone(AnimationsData[animationName].style);const firstAnimationStep=animationStyle['0'];const{transform}=initialValues,rest=_objectWithoutPropertiesLoose(initialValues,_excluded);const transformWithPx=addPxToTransform(transform);if(transform){if(!firstAnimationStep.transform){firstAnimationStep.transform=transformWithPx;}else{const transformStyle=new Map();for(const rule of firstAnimationStep.transform){for(const[property,value]of Object.entries(rule)){transformStyle.set(property,value);}}for(const rule of transformWithPx){for(const[property,value]of Object.entries(rule)){transformStyle.set(property,value);}}firstAnimationStep.transform=Array.from(transformStyle,([property,value])=>({[property]:value}));}}animationStyle['0']=Object.assign({},animationStyle['0'],rest);const keyframeName=generateNextCustomKeyframeName();const animationObject={name:keyframeName,style:animationStyle,duration:AnimationsData[animationName].duration};const keyframe=convertAnimationObjectToKeyframes(animationObject);insertWebAnimation(keyframeName,keyframe);return keyframeName;}let customKeyframeCounter=0;function generateNextCustomKeyframeName(){return`REA${customKeyframeCounter++}`;}export function TransitionGenerator(transitionType,transitionData){const transitionKeyframeName=generateNextCustomKeyframeName();let dummyTransitionKeyframeName;let transitionObject;switch(transitionType){case TransitionType.LINEAR:transitionObject=LinearTransition(transitionKeyframeName,transitionData);break;case TransitionType.SEQUENCED:transitionObject=SequencedTransition(transitionKeyframeName,transitionData);break;case TransitionType.FADING:transitionObject=FadingTransition(transitionKeyframeName,transitionData);break;case TransitionType.JUMPING:transitionObject=JumpingTransition(transitionKeyframeName,transitionData);break;case TransitionType.CURVED:{dummyTransitionKeyframeName=generateNextCustomKeyframeName();const{firstKeyframeObj,secondKeyframeObj}=CurvedTransition(transitionKeyframeName,dummyTransitionKeyframeName,transitionData);transitionObject=firstKeyframeObj;const dummyKeyframe=convertAnimationObjectToKeyframes(secondKeyframeObj);insertWebAnimation(dummyTransitionKeyframeName,dummyKeyframe);break;}case TransitionType.ENTRY_EXIT:transitionObject=EntryExitTransition(transitionKeyframeName,transitionData);break;}const transitionKeyframe=convertAnimationObjectToKeyframes(transitionObject);insertWebAnimation(transitionKeyframeName,transitionKeyframe);return{transitionKeyframeName,dummyTransitionKeyframeName};}","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_excluded","AnimationsData","TransitionType","convertAnimationObjectToKeyframes","LinearTransition","SequencedTransition","FadingTransition","JumpingTransition","insertWebAnimation","CurvedTransition","EntryExitTransition","addPxToTransform","transform","newTransform","map","transformProp","newTransformProp","key","value","Object","entries","includes","createCustomKeyFrameAnimation","keyframeDefinitions","values","animationData","name","style","duration","generateNextCustomKeyframeName","parsedKeyframe","createAnimationWithInitialValues","animationName","initialValues","animationStyle","structuredClone","firstAnimationStep","rest","transformWithPx","transformStyle","Map","rule","property","set","Array","from","assign","keyframeName","animationObject","keyframe","customKeyframeCounter","TransitionGenerator","transitionType","transitionData","transitionKeyframeName","dummyTransitionKeyframeName","transitionObject","LINEAR","SEQUENCED","FADING","JUMPING","CURVED","firstKeyframeObj","secondKeyframeObj","dummyKeyframe","ENTRY_EXIT","transitionKeyframe"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/layoutReanimation/web/createAnimation.ts"],"sourcesContent":["'use strict';\n\nimport { AnimationsData, TransitionType } from './config';\nimport type { InitialValuesStyleProps, KeyframeDefinitions } from './config';\nimport { convertAnimationObjectToKeyframes } from './animationParser';\nimport type {\n  AnimationData,\n  ReanimatedWebTransformProperties,\n  TransitionData,\n} from './animationParser';\nimport type { TransformsStyle } from 'react-native';\nimport { LinearTransition } from './transition/Linear.web';\nimport { SequencedTransition } from './transition/Sequenced.web';\nimport { FadingTransition } from './transition/Fading.web';\nimport { JumpingTransition } from './transition/Jumping.web';\nimport { insertWebAnimation } from './domUtils';\nimport { CurvedTransition } from './transition/Curved.web';\nimport { EntryExitTransition } from './transition/EntryExit.web';\n\ntype TransformType = NonNullable<TransformsStyle['transform']>;\n\n// Translate values are passed as numbers. However, if `translate` property receives number, it will not automatically\n// convert it to `px`. Therefore if we want to keep transform we have to add 'px' suffix to each of translate values\n// that are present inside transform.\n//\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction addPxToTransform(transform: TransformType) {\n  type RNTransformProp = (typeof transform)[number];\n\n  // @ts-ignore `existingTransform` cannot be string because in that case\n  // we throw error in `extractTransformFromStyle`\n  const newTransform = transform.map((transformProp: RNTransformProp) => {\n    const newTransformProp: ReanimatedWebTransformProperties = {};\n    for (const [key, value] of Object.entries(transformProp)) {\n      if (\n        (key.includes('translate') || key.includes('perspective')) &&\n        typeof value === 'number'\n      ) {\n        // @ts-ignore After many trials we decided to ignore this error - it says that we cannot use 'key' to index this object.\n        // Sadly it doesn't go away after using cast `key as keyof TransformProperties`.\n        newTransformProp[key] = `${value}px`;\n      } else {\n        // @ts-ignore same as above.\n        newTransformProp[key] = value;\n      }\n    }\n    return newTransformProp;\n  });\n\n  return newTransform;\n}\n\nexport function createCustomKeyFrameAnimation(\n  keyframeDefinitions: KeyframeDefinitions\n) {\n  for (const value of Object.values(keyframeDefinitions)) {\n    if (value.transform) {\n      value.transform = addPxToTransform(value.transform as TransformType);\n    }\n  }\n\n  const animationData: AnimationData = {\n    name: '',\n    style: keyframeDefinitions,\n    duration: -1,\n  };\n\n  animationData.name = generateNextCustomKeyframeName();\n\n  const parsedKeyframe = convertAnimationObjectToKeyframes(animationData);\n\n  insertWebAnimation(animationData.name, parsedKeyframe);\n\n  return animationData.name;\n}\n\nexport function createAnimationWithInitialValues(\n  animationName: string,\n  initialValues: InitialValuesStyleProps\n) {\n  const animationStyle = structuredClone(AnimationsData[animationName].style);\n  const firstAnimationStep = animationStyle['0'];\n\n  const { transform, ...rest } = initialValues;\n  const transformWithPx = addPxToTransform(transform as TransformType);\n\n  if (transform) {\n    // If there was no predefined transform, we can simply assign transform from `initialValues`.\n    if (!firstAnimationStep.transform) {\n      firstAnimationStep.transform = transformWithPx;\n    } else {\n      // Othwerwise we have to merge predefined transform with the one provided in `initialValues`.\n      // To do that, we create `Map` that will contain final transform.\n      const transformStyle = new Map<string, any>();\n\n      // First we assign all of the predefined rules\n      for (const rule of firstAnimationStep.transform) {\n        // In most cases there will be just one iteration\n        for (const [property, value] of Object.entries(rule)) {\n          transformStyle.set(property, value);\n        }\n      }\n\n      // Then we either add new rule, or override one that already exists.\n      for (const rule of transformWithPx) {\n        for (const [property, value] of Object.entries(rule)) {\n          transformStyle.set(property, value);\n        }\n      }\n\n      // Finally, we convert `Map` with final transform back into array of objects.\n      firstAnimationStep.transform = Array.from(\n        transformStyle,\n        ([property, value]) => ({\n          [property]: value,\n        })\n      );\n    }\n  }\n\n  animationStyle['0'] = {\n    ...animationStyle['0'],\n    ...rest,\n  };\n\n  // TODO: Maybe we can extract the logic below into separate function\n  const keyframeName = generateNextCustomKeyframeName();\n\n  const animationObject: AnimationData = {\n    name: keyframeName,\n    style: animationStyle,\n    duration: AnimationsData[animationName].duration,\n  };\n\n  const keyframe = convertAnimationObjectToKeyframes(animationObject);\n\n  insertWebAnimation(keyframeName, keyframe);\n\n  return keyframeName;\n}\n\nlet customKeyframeCounter = 0;\n\nfunction generateNextCustomKeyframeName() {\n  return `REA${customKeyframeCounter++}`;\n}\n\n/**\n * Creates transition of given type, appends it to stylesheet and returns\n * keyframe name.\n *\n * @param transitionType - Type of transition (e.g. LINEAR).\n * @param transitionData - Object containing data for transforms (translateX,\n *   scaleX,...).\n * @returns Keyframe name that represents transition.\n */\nexport function TransitionGenerator(\n  transitionType: TransitionType,\n  transitionData: TransitionData\n) {\n  const transitionKeyframeName = generateNextCustomKeyframeName();\n  let dummyTransitionKeyframeName;\n\n  let transitionObject;\n\n  switch (transitionType) {\n    case TransitionType.LINEAR:\n      transitionObject = LinearTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n    case TransitionType.SEQUENCED:\n      transitionObject = SequencedTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n    case TransitionType.FADING:\n      transitionObject = FadingTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n    case TransitionType.JUMPING:\n      transitionObject = JumpingTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n\n    // Here code block with {} is necessary because of eslint\n    case TransitionType.CURVED: {\n      dummyTransitionKeyframeName = generateNextCustomKeyframeName();\n\n      const { firstKeyframeObj, secondKeyframeObj } = CurvedTransition(\n        transitionKeyframeName,\n        dummyTransitionKeyframeName,\n        transitionData\n      );\n\n      transitionObject = firstKeyframeObj;\n\n      const dummyKeyframe =\n        convertAnimationObjectToKeyframes(secondKeyframeObj);\n\n      insertWebAnimation(dummyTransitionKeyframeName, dummyKeyframe);\n\n      break;\n    }\n    case TransitionType.ENTRY_EXIT:\n      transitionObject = EntryExitTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n  }\n\n  const transitionKeyframe =\n    convertAnimationObjectToKeyframes(transitionObject);\n\n  insertWebAnimation(transitionKeyframeName, transitionKeyframe);\n\n  return { transitionKeyframeName, dummyTransitionKeyframeName };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}