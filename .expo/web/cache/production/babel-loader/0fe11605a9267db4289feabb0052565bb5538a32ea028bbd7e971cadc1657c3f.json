{"ast":null,"code":"import Hammer from'@egjs/hammerjs';import{State}from'../State';import PressGestureHandler from'./PressGestureHandler';import{isnan,isValidNumber}from'./utils';class LongPressGestureHandler extends PressGestureHandler{get minDurationMs(){return isnan(this.config.minDurationMs)?251:this.config.minDurationMs;}get maxDist(){return isnan(this.config.maxDist)?9:this.config.maxDist;}updateHasCustomActivationCriteria({maxDistSq}){return!isValidNumber(maxDistSq);}getConfig(){if(!this.hasCustomActivationCriteria){return{shouldCancelWhenOutside:true,maxDistSq:10};}return this.config;}getHammerConfig(){return Object.assign({},super.getHammerConfig(),{time:this.minDurationMs});}getState(type){return{[Hammer.INPUT_START]:State.ACTIVE,[Hammer.INPUT_MOVE]:State.ACTIVE,[Hammer.INPUT_END]:State.END,[Hammer.INPUT_CANCEL]:State.FAILED}[type];}}export default LongPressGestureHandler;","map":{"version":3,"names":["Hammer","State","PressGestureHandler","isnan","isValidNumber","LongPressGestureHandler","minDurationMs","config","maxDist","updateHasCustomActivationCriteria","maxDistSq","getConfig","hasCustomActivationCriteria","shouldCancelWhenOutside","getHammerConfig","Object","assign","time","getState","type","INPUT_START","ACTIVE","INPUT_MOVE","INPUT_END","END","INPUT_CANCEL","FAILED"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-gesture-handler/lib/module/web_hammer/LongPressGestureHandler.ts"],"sourcesContent":["/* eslint-disable eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport Hammer from '@egjs/hammerjs';\n\nimport { State } from '../State';\nimport PressGestureHandler from './PressGestureHandler';\nimport { isnan, isValidNumber } from './utils';\nimport { Config } from './GestureHandler';\nimport { HammerInputNames } from './constants';\n\nclass LongPressGestureHandler extends PressGestureHandler {\n  get minDurationMs(): number {\n    // @ts-ignore FIXNE(TS)\n    return isnan(this.config.minDurationMs) ? 251 : this.config.minDurationMs;\n  }\n\n  get maxDist() {\n    // @ts-ignore FIXNE(TS)\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n\n  updateHasCustomActivationCriteria({ maxDistSq }: Config) {\n    return !isValidNumber(maxDistSq);\n  }\n\n  getConfig() {\n    if (!this.hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      // threshold: this.maxDist,\n      time: this.minDurationMs,\n    };\n  }\n\n  getState(type: keyof typeof HammerInputNames) {\n    return {\n      [Hammer.INPUT_START]: State.ACTIVE,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.FAILED,\n    }[type];\n  }\n}\n\nexport default LongPressGestureHandler;\n"],"mappings":"AAEA,MAAO,CAAAA,MAAP,KAAmB,gBAAnB,CAEA,OAASC,KAAT,KAAsB,UAAtB,CACA,MAAO,CAAAC,mBAAP,KAAgC,uBAAhC,CACA,OAASC,KAAT,CAAgBC,aAAhB,KAAqC,SAArC,CAIA,KAAM,CAAAC,uBAAN,QAAsC,CAAAH,mBAAoB,CACvC,GAAb,CAAAI,aAAaA,CAAA,CAAW,CAE1B,MAAO,CAAAH,KAAK,CAAC,KAAKI,MAAL,CAAYD,aAAb,CAAL,CAAmC,GAAnC,CAAyC,KAAKC,MAAL,CAAYD,aAA5D,CACD,CAEU,GAAP,CAAAE,OAAOA,CAAA,CAAG,CAEZ,MAAO,CAAAL,KAAK,CAAC,KAAKI,MAAL,CAAYC,OAAb,CAAL,CAA6B,CAA7B,CAAiC,KAAKD,MAAL,CAAYC,OAApD,CACD,CAEDC,iCAAiCA,CAAC,CAAEC,SAAF,CAAD,CAAwB,CACvD,MAAO,CAACN,aAAa,CAACM,SAAD,CAArB,CACD,CAEDC,SAASA,CAAA,CAAG,CACV,GAAI,CAAC,KAAKC,2BAAV,CAAuC,CAGrC,MAAO,CACLC,uBAAuB,CAAE,IADpB,CAELH,SAAS,CAAE,EAFN,CAAP,CAID,CACD,MAAO,MAAKH,MAAZ,CACD,CAEDO,eAAeA,CAAA,CAAG,CAChB,OAAAC,MAAA,CAAAC,MAAA,IACK,MAAMF,eAAN,EADE,EAGLG,IAAI,CAAE,KAAKX,aAAA,GAEd,CAEDY,QAAQA,CAACC,IAAD,CAAsC,CAC5C,MAAO,CACL,CAACnB,MAAM,CAACoB,WAAR,EAAsBnB,KAAK,CAACoB,MADvB,CAEL,CAACrB,MAAM,CAACsB,UAAR,EAAqBrB,KAAK,CAACoB,MAFtB,CAGL,CAACrB,MAAM,CAACuB,SAAR,EAAoBtB,KAAK,CAACuB,GAHrB,CAIL,CAACxB,MAAM,CAACyB,YAAR,EAAuBxB,KAAK,CAACyB,MAJxB,EAKLP,IALK,CAAP,CAMD,CA1CuD,CA6C1D,cAAe,CAAAd,uBAAf","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}