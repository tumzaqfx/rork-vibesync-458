{"ast":null,"code":"\"use strict\";import*as React from'react';import{NavigationBuilderContext}from\"./NavigationBuilderContext.js\";import{NavigationStateContext}from\"./NavigationStateContext.js\";export function useOptionsGetters({key,options,navigation}){const optionsRef=React.useRef(options);const optionsGettersFromChildRef=React.useRef({});const{onOptionsChange}=React.useContext(NavigationBuilderContext);const{addOptionsGetter:parentAddOptionsGetter}=React.useContext(NavigationStateContext);const optionsChangeListener=React.useCallback(()=>{const isFocused=navigation?.isFocused()??true;const hasChildren=Object.keys(optionsGettersFromChildRef.current).length;if(isFocused&&!hasChildren){onOptionsChange(optionsRef.current??{});}},[navigation,onOptionsChange]);React.useEffect(()=>{optionsRef.current=options;optionsChangeListener();return navigation?.addListener('focus',optionsChangeListener);},[navigation,options,optionsChangeListener]);const getOptionsFromListener=React.useCallback(()=>{for(const key in optionsGettersFromChildRef.current){if(key in optionsGettersFromChildRef.current){const result=optionsGettersFromChildRef.current[key]?.();if(result!==null){return result;}}}return null;},[]);const getCurrentOptions=React.useCallback(()=>{const isFocused=navigation?.isFocused()??true;if(!isFocused){return null;}const optionsFromListener=getOptionsFromListener();if(optionsFromListener!==null){return optionsFromListener;}return optionsRef.current;},[navigation,getOptionsFromListener]);React.useEffect(()=>{return parentAddOptionsGetter?.(key,getCurrentOptions);},[getCurrentOptions,parentAddOptionsGetter,key]);const addOptionsGetter=React.useCallback((key,getter)=>{optionsGettersFromChildRef.current[key]=getter;optionsChangeListener();return()=>{delete optionsGettersFromChildRef.current[key];optionsChangeListener();};},[optionsChangeListener]);return{addOptionsGetter,getCurrentOptions};}","map":{"version":3,"names":["React","NavigationBuilderContext","NavigationStateContext","useOptionsGetters","key","options","navigation","optionsRef","useRef","optionsGettersFromChildRef","onOptionsChange","useContext","addOptionsGetter","parentAddOptionsGetter","optionsChangeListener","useCallback","isFocused","hasChildren","Object","keys","current","length","useEffect","addListener","getOptionsFromListener","result","getCurrentOptions","optionsFromListener","getter"],"sources":["/home/user/rork-vibesync-458/node_modules/@react-navigation/core/src/useOptionsGetters.tsx"],"sourcesContent":["import type { ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport { NavigationBuilderContext } from './NavigationBuilderContext';\nimport { NavigationStateContext } from './NavigationStateContext';\nimport type { NavigationProp } from './types';\n\ntype Options = {\n  key?: string;\n  navigation?: NavigationProp<ParamListBase>;\n  options?: object | undefined;\n};\n\nexport function useOptionsGetters({ key, options, navigation }: Options) {\n  const optionsRef = React.useRef<object | undefined>(options);\n  const optionsGettersFromChildRef = React.useRef<\n    Record<string, () => object | undefined | null>\n  >({});\n\n  const { onOptionsChange } = React.useContext(NavigationBuilderContext);\n  const { addOptionsGetter: parentAddOptionsGetter } = React.useContext(\n    NavigationStateContext\n  );\n\n  const optionsChangeListener = React.useCallback(() => {\n    const isFocused = navigation?.isFocused() ?? true;\n    const hasChildren = Object.keys(optionsGettersFromChildRef.current).length;\n\n    if (isFocused && !hasChildren) {\n      onOptionsChange(optionsRef.current ?? {});\n    }\n  }, [navigation, onOptionsChange]);\n\n  React.useEffect(() => {\n    optionsRef.current = options;\n    optionsChangeListener();\n\n    return navigation?.addListener('focus', optionsChangeListener);\n  }, [navigation, options, optionsChangeListener]);\n\n  const getOptionsFromListener = React.useCallback(() => {\n    for (const key in optionsGettersFromChildRef.current) {\n      if (key in optionsGettersFromChildRef.current) {\n        const result = optionsGettersFromChildRef.current[key]?.();\n\n        // null means unfocused route\n        if (result !== null) {\n          return result;\n        }\n      }\n    }\n\n    return null;\n  }, []);\n\n  const getCurrentOptions = React.useCallback(() => {\n    const isFocused = navigation?.isFocused() ?? true;\n\n    if (!isFocused) {\n      return null;\n    }\n\n    const optionsFromListener = getOptionsFromListener();\n\n    if (optionsFromListener !== null) {\n      return optionsFromListener;\n    }\n\n    return optionsRef.current;\n  }, [navigation, getOptionsFromListener]);\n\n  React.useEffect(() => {\n    return parentAddOptionsGetter?.(key!, getCurrentOptions);\n  }, [getCurrentOptions, parentAddOptionsGetter, key]);\n\n  const addOptionsGetter = React.useCallback(\n    (key: string, getter: () => object | undefined | null) => {\n      optionsGettersFromChildRef.current[key] = getter;\n      optionsChangeListener();\n\n      return () => {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete optionsGettersFromChildRef.current[key];\n        optionsChangeListener();\n      };\n    },\n    [optionsChangeListener]\n  );\n\n  return {\n    addOptionsGetter,\n    getCurrentOptions,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}