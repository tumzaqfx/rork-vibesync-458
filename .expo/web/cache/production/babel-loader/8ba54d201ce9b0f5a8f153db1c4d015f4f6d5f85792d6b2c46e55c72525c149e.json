{"ast":null,"code":"\"use strict\";import*as React from'react';import{useNavigation}from\"./useNavigation.js\";export function useIsFocused(){const navigation=useNavigation();const subscribe=React.useCallback(callback=>{const unsubscribeFocus=navigation.addListener('focus',callback);const unsubscribeBlur=navigation.addListener('blur',callback);return()=>{unsubscribeFocus();unsubscribeBlur();};},[navigation]);const value=React.useSyncExternalStore(subscribe,navigation.isFocused,navigation.isFocused);return value;}","map":{"version":3,"names":["React","useNavigation","useIsFocused","navigation","subscribe","useCallback","callback","unsubscribeFocus","addListener","unsubscribeBlur","value","useSyncExternalStore","isFocused"],"sources":["/home/user/rork-vibesync-458/node_modules/@react-navigation/core/src/useIsFocused.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { useNavigation } from './useNavigation';\n\n/**\n * Hook to get the current focus state of the screen. Returns a `true` if screen is focused, otherwise `false`.\n * This can be used if a component needs to render something based on the focus state.\n */\nexport function useIsFocused(): boolean {\n  const navigation = useNavigation();\n\n  const subscribe = React.useCallback(\n    (callback: () => void) => {\n      const unsubscribeFocus = navigation.addListener('focus', callback);\n      const unsubscribeBlur = navigation.addListener('blur', callback);\n\n      return () => {\n        unsubscribeFocus();\n        unsubscribeBlur();\n      };\n    },\n    [navigation]\n  );\n\n  const value = React.useSyncExternalStore(\n    subscribe,\n    navigation.isFocused,\n    navigation.isFocused\n  );\n\n  return value;\n}\n"],"mappings":"aAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAE9B,OAASC,aAAa,KAAQ,oBAAiB,CAM/C,MAAO,SAAS,CAAAC,YAAYA,CAAA,CAAY,CACtC,KAAM,CAAAC,UAAU,CAAGF,aAAa,CAAC,CAAC,CAElC,KAAM,CAAAG,SAAS,CAAGJ,KAAK,CAACK,WAAW,CAChCC,QAAoB,EAAK,CACxB,KAAM,CAAAC,gBAAgB,CAAGJ,UAAU,CAACK,WAAW,CAAC,OAAO,CAAEF,QAAQ,CAAC,CAClE,KAAM,CAAAG,eAAe,CAAGN,UAAU,CAACK,WAAW,CAAC,MAAM,CAAEF,QAAQ,CAAC,CAEhE,MAAO,IAAM,CACXC,gBAAgB,CAAC,CAAC,CAClBE,eAAe,CAAC,CAAC,CACnB,CAAC,CACH,CAAC,CACD,CAACN,UAAU,CACb,CAAC,CAED,KAAM,CAAAO,KAAK,CAAGV,KAAK,CAACW,oBAAoB,CACtCP,SAAS,CACTD,UAAU,CAACS,SAAS,CACpBT,UAAU,CAACS,SACb,CAAC,CAED,MAAO,CAAAF,KAAK,CACd","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}