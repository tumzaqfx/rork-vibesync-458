{"ast":null,"code":"'use strict';import{withStyleAnimation}from\"../animation/styleAnimation.js\";import{makeMutableUI}from\"../mutables.js\";import{LayoutAnimationType}from\"./animationBuilder/index.js\";import{runOnUIImmediately}from\"../threads.js\";const TAG_OFFSET=1e9;const _worklet_12903378677985_init_data={code:\"function startObservingProgress_reactNativeReanimated_animationsManagerJs1(tag,sharedValue,animationType){const{LayoutAnimationType,TAG_OFFSET}=this.__closure;const isSharedTransition=animationType===LayoutAnimationType.SHARED_ELEMENT_TRANSITION;sharedValue.addListener(tag+TAG_OFFSET,function(){global._notifyAboutProgress(tag,sharedValue.value,isSharedTransition);});}\"};const startObservingProgress=function(){const startObservingProgress=function(tag,sharedValue,animationType){const isSharedTransition=animationType===LayoutAnimationType.SHARED_ELEMENT_TRANSITION;sharedValue.addListener(tag+TAG_OFFSET,()=>{global._notifyAboutProgress(tag,sharedValue.value,isSharedTransition);});};startObservingProgress.__closure={LayoutAnimationType,TAG_OFFSET};startObservingProgress.__workletHash=12903378677985;startObservingProgress.__initData=_worklet_12903378677985_init_data;return startObservingProgress;}();const _worklet_7600341837897_init_data={code:\"function stopObservingProgress_reactNativeReanimated_animationsManagerJs2(tag,sharedValue,removeView=false){const{TAG_OFFSET}=this.__closure;sharedValue.removeListener(tag+TAG_OFFSET);global._notifyAboutEnd(tag,removeView);}\"};const stopObservingProgress=function(){const stopObservingProgress=function(tag,sharedValue,removeView=false){sharedValue.removeListener(tag+TAG_OFFSET);global._notifyAboutEnd(tag,removeView);};stopObservingProgress.__closure={TAG_OFFSET};stopObservingProgress.__workletHash=7600341837897;stopObservingProgress.__initData=_worklet_7600341837897_init_data;return stopObservingProgress;}();const _worklet_16265842309113_init_data={code:\"function createLayoutAnimationManager_reactNativeReanimated_animationsManagerJs3(){const{LayoutAnimationType,makeMutableUI,stopObservingProgress,withStyleAnimation,startObservingProgress}=this.__closure;const currentAnimationForTag=new Map();const mutableValuesForTag=new Map();return{start:function(tag,type,yogaValues,config){if(type===LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS){global.ProgressTransitionRegister.onTransitionStart(tag,yogaValues);return;}const style=config(yogaValues);let currentAnimation=style.animations;const previousAnimation=currentAnimationForTag.get(tag);if(previousAnimation){currentAnimation={...previousAnimation,...style.animations};}currentAnimationForTag.set(tag,currentAnimation);let value=mutableValuesForTag.get(tag);if(value===undefined){value=makeMutableUI(style.initialValues);mutableValuesForTag.set(tag,value);}else{stopObservingProgress(tag,value);value._value=style.initialValues;}const animation=withStyleAnimation(currentAnimation);animation.callback=function(finished){if(finished){currentAnimationForTag.delete(tag);mutableValuesForTag.delete(tag);const shouldRemoveView=type===LayoutAnimationType.EXITING;stopObservingProgress(tag,value,shouldRemoveView);}style.callback&&style.callback(finished===undefined?false:finished);};startObservingProgress(tag,value,type);value.value=animation;},stop:function(tag){const value=mutableValuesForTag.get(tag);if(!value){return;}stopObservingProgress(tag,value);}};}\"};const createLayoutAnimationManager=function(){const createLayoutAnimationManager=function(){const currentAnimationForTag=new Map();const mutableValuesForTag=new Map();return{start(tag,type,yogaValues,config){if(type===LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS){global.ProgressTransitionRegister.onTransitionStart(tag,yogaValues);return;}const style=config(yogaValues);let currentAnimation=style.animations;const previousAnimation=currentAnimationForTag.get(tag);if(previousAnimation){currentAnimation=Object.assign({},previousAnimation,style.animations);}currentAnimationForTag.set(tag,currentAnimation);let value=mutableValuesForTag.get(tag);if(value===undefined){value=makeMutableUI(style.initialValues);mutableValuesForTag.set(tag,value);}else{stopObservingProgress(tag,value);value._value=style.initialValues;}const animation=withStyleAnimation(currentAnimation);animation.callback=finished=>{if(finished){currentAnimationForTag.delete(tag);mutableValuesForTag.delete(tag);const shouldRemoveView=type===LayoutAnimationType.EXITING;stopObservingProgress(tag,value,shouldRemoveView);}style.callback&&style.callback(finished===undefined?false:finished);};startObservingProgress(tag,value,type);value.value=animation;},stop(tag){const value=mutableValuesForTag.get(tag);if(!value){return;}stopObservingProgress(tag,value);}};};createLayoutAnimationManager.__closure={LayoutAnimationType,makeMutableUI,stopObservingProgress,withStyleAnimation,startObservingProgress};createLayoutAnimationManager.__workletHash=16265842309113;createLayoutAnimationManager.__initData=_worklet_16265842309113_init_data;return createLayoutAnimationManager;}();const _worklet_12746540537052_init_data={code:\"function reactNativeReanimated_animationsManagerJs4(){const{createLayoutAnimationManager}=this.__closure;global.LayoutAnimationsManager=createLayoutAnimationManager();}\"};runOnUIImmediately(function(){const reactNativeReanimated_animationsManagerJs4=function(){global.LayoutAnimationsManager=createLayoutAnimationManager();};reactNativeReanimated_animationsManagerJs4.__closure={createLayoutAnimationManager};reactNativeReanimated_animationsManagerJs4.__workletHash=12746540537052;reactNativeReanimated_animationsManagerJs4.__initData=_worklet_12746540537052_init_data;return reactNativeReanimated_animationsManagerJs4;}())();","map":{"version":3,"names":["withStyleAnimation","makeMutableUI","LayoutAnimationType","runOnUIImmediately","TAG_OFFSET","_worklet_12903378677985_init_data","code","startObservingProgress","tag","sharedValue","animationType","isSharedTransition","SHARED_ELEMENT_TRANSITION","addListener","global","_notifyAboutProgress","value","__closure","__workletHash","__initData","_worklet_7600341837897_init_data","stopObservingProgress","removeView","removeListener","_notifyAboutEnd","_worklet_16265842309113_init_data","createLayoutAnimationManager","currentAnimationForTag","Map","mutableValuesForTag","start","type","yogaValues","config","SHARED_ELEMENT_TRANSITION_PROGRESS","ProgressTransitionRegister","onTransitionStart","style","currentAnimation","animations","previousAnimation","get","Object","assign","set","undefined","initialValues","_value","animation","callback","finished","delete","shouldRemoveView","EXITING","stop","_worklet_12746540537052_init_data","reactNativeReanimated_animationsManagerJs4","LayoutAnimationsManager"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/layoutReanimation/animationsManager.ts"],"sourcesContent":["'use strict';\nimport { withStyleAnimation } from '../animation/styleAnimation';\nimport type { SharedValue } from '../commonTypes';\nimport { makeMutableUI } from '../mutables';\nimport { LayoutAnimationType } from './animationBuilder';\nimport { runOnUIImmediately } from '../threads';\nimport type {\n  SharedTransitionAnimationsValues,\n  LayoutAnimation,\n  LayoutAnimationStartFunction,\n} from './animationBuilder/commonTypes';\n\nconst TAG_OFFSET = 1e9;\n\nfunction startObservingProgress(\n  tag: number,\n  sharedValue: SharedValue<Record<string, unknown>>,\n  animationType: LayoutAnimationType\n): void {\n  'worklet';\n  const isSharedTransition =\n    animationType === LayoutAnimationType.SHARED_ELEMENT_TRANSITION;\n  sharedValue.addListener(tag + TAG_OFFSET, () => {\n    global._notifyAboutProgress(tag, sharedValue.value, isSharedTransition);\n  });\n}\n\nfunction stopObservingProgress(\n  tag: number,\n  sharedValue: SharedValue<number>,\n  removeView = false\n): void {\n  'worklet';\n  sharedValue.removeListener(tag + TAG_OFFSET);\n  global._notifyAboutEnd(tag, removeView);\n}\n\nfunction createLayoutAnimationManager(): {\n  start: LayoutAnimationStartFunction;\n  stop: (tag: number) => void;\n} {\n  'worklet';\n  const currentAnimationForTag = new Map();\n  const mutableValuesForTag = new Map();\n\n  return {\n    start(\n      tag: number,\n      type: LayoutAnimationType,\n      /**\n       * CreateLayoutAnimationManager creates an animation manager for both\n       * Layout animations and Shared Transition Elements animations.\n       */\n      yogaValues: Partial<SharedTransitionAnimationsValues>,\n      config: (\n        arg: Partial<SharedTransitionAnimationsValues>\n      ) => LayoutAnimation\n    ) {\n      if (type === LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS) {\n        global.ProgressTransitionRegister.onTransitionStart(tag, yogaValues);\n        return;\n      }\n\n      const style = config(yogaValues);\n      let currentAnimation = style.animations;\n\n      // When layout animation is requested, but a previous one is still running, we merge\n      // new layout animation targets into the ongoing animation\n      const previousAnimation = currentAnimationForTag.get(tag);\n      if (previousAnimation) {\n        currentAnimation = { ...previousAnimation, ...style.animations };\n      }\n      currentAnimationForTag.set(tag, currentAnimation);\n\n      let value = mutableValuesForTag.get(tag);\n      if (value === undefined) {\n        value = makeMutableUI(style.initialValues);\n        mutableValuesForTag.set(tag, value);\n      } else {\n        stopObservingProgress(tag, value);\n        value._value = style.initialValues;\n      }\n\n      // @ts-ignore The line below started failing because I added types to the method â€“ don't have time to fix it right now\n      const animation = withStyleAnimation(currentAnimation);\n\n      animation.callback = (finished?: boolean) => {\n        if (finished) {\n          currentAnimationForTag.delete(tag);\n          mutableValuesForTag.delete(tag);\n          const shouldRemoveView = type === LayoutAnimationType.EXITING;\n          stopObservingProgress(tag, value, shouldRemoveView);\n        }\n        style.callback &&\n          style.callback(finished === undefined ? false : finished);\n      };\n\n      startObservingProgress(tag, value, type);\n      value.value = animation;\n    },\n    stop(tag: number) {\n      const value = mutableValuesForTag.get(tag);\n      if (!value) {\n        return;\n      }\n      stopObservingProgress(tag, value);\n    },\n  };\n}\n\nrunOnUIImmediately(() => {\n  'worklet';\n  global.LayoutAnimationsManager = createLayoutAnimationManager();\n})();\n\nexport type LayoutAnimationsManager = ReturnType<\n  typeof createLayoutAnimationManager\n>;\n"],"mappings":"AAAA,YAAY,CACZ,OAASA,kBAAkB,KAAQ,gCAA6B,CAEhE,OAASC,aAAa,KAAQ,gBAAa,CAC3C,OAASC,mBAAmB,KAAQ,6BAAoB,CACxD,OAASC,kBAAkB,KAAQ,eAAY,CAO/C,KAAM,CAAAC,UAAU,CAAG,GAAG,OAAAC,iCAAA,EAAAC,IAAA,6XAAAC,sBAAA,CAEtB,iBAAAA,sBAAA,SAAAA,CACEC,GAAW,CACXC,WAAiD,CACjDC,aAAkC,CAC5B,CAEN,KAAM,CAAAC,kBAAkB,CACtBD,aAAa,GAAKR,mBAAmB,CAACU,yBAAyB,CACjEH,WAAW,CAACI,WAAW,CAACL,GAAG,CAAGJ,UAAU,CAAE,IAAM,CAC9CU,MAAM,CAACC,oBAAoB,CAACP,GAAG,CAAEC,WAAW,CAACO,KAAK,CAAEL,kBAAkB,CAAC,CACzE,CAAC,CAAC,CACJ,EAAAJ,sBAAA,CAAAU,SAAA,EAAAf,mBAAA,CAAAE,UAAA,EAAAG,sBAAA,CAAAW,aAAA,gBAAAX,sBAAA,CAAAY,UAAA,CAAAd,iCAAA,QAAAE,sBAAA,EAXA,SAAAa,gCAAA,EAAAd,IAAA,2OAAAe,qBAAA,CAaA,iBAAAA,qBAAA,SAAAA,CACEb,GAAW,CACXC,WAAgC,CAChCa,UAAU,CAAG,KAAK,CACZ,CAENb,WAAW,CAACc,cAAc,CAACf,GAAG,CAAGJ,UAAU,CAAC,CAC5CU,MAAM,CAACU,eAAe,CAAChB,GAAG,CAAEc,UAAU,CAAC,CACzC,EAAAD,qBAAA,CAAAJ,SAAA,EAAAb,UAAA,EAAAiB,qBAAA,CAAAH,aAAA,eAAAG,qBAAA,CAAAF,UAAA,CAAAC,gCAAA,QAAAC,qBAAA,EARA,SAAAI,iCAAA,EAAAnB,IAAA,q8CAAAoB,4BAAA,CAUA,iBAAAA,4BAAA,SAAAA,CAAA,CAGE,CAEA,KAAM,CAAAC,sBAAsB,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CACxC,KAAM,CAAAC,mBAAmB,CAAG,GAAI,CAAAD,GAAG,CAAC,CAAC,CAErC,MAAO,CACLE,KAAKA,CACHtB,GAAW,CACXuB,IAAyB,CAKzBC,UAAqD,CACrDC,MAEoB,CACpB,CACA,GAAIF,IAAI,GAAK7B,mBAAmB,CAACgC,kCAAkC,CAAE,CACnEpB,MAAM,CAACqB,0BAA0B,CAACC,iBAAiB,CAAC5B,GAAG,CAAEwB,UAAU,CAAC,CACpE,OACF,CAEA,KAAM,CAAAK,KAAK,CAAGJ,MAAM,CAACD,UAAU,CAAC,CAChC,GAAI,CAAAM,gBAAgB,CAAGD,KAAK,CAACE,UAAU,CAIvC,KAAM,CAAAC,iBAAiB,CAAGb,sBAAsB,CAACc,GAAG,CAACjC,GAAG,CAAC,CACzD,GAAIgC,iBAAiB,CAAE,CACrBF,gBAAgB,CAAAI,MAAA,CAAAC,MAAA,IAAQH,iBAAiB,CAAKH,KAAK,CAACE,UAAA,CAAY,CAClE,CACAZ,sBAAsB,CAACiB,GAAG,CAACpC,GAAG,CAAE8B,gBAAgB,CAAC,CAEjD,GAAI,CAAAtB,KAAK,CAAGa,mBAAmB,CAACY,GAAG,CAACjC,GAAG,CAAC,CACxC,GAAIQ,KAAK,GAAK6B,SAAS,CAAE,CACvB7B,KAAK,CAAGf,aAAa,CAACoC,KAAK,CAACS,aAAa,CAAC,CAC1CjB,mBAAmB,CAACe,GAAG,CAACpC,GAAG,CAAEQ,KAAK,CAAC,CACrC,CAAC,IAAM,CACLK,qBAAqB,CAACb,GAAG,CAAEQ,KAAK,CAAC,CACjCA,KAAK,CAAC+B,MAAM,CAAGV,KAAK,CAACS,aAAa,CACpC,CAGA,KAAM,CAAAE,SAAS,CAAGhD,kBAAkB,CAACsC,gBAAgB,CAAC,CAEtDU,SAAS,CAACC,QAAQ,CAAIC,QAAkB,EAAK,CAC3C,GAAIA,QAAQ,CAAE,CACZvB,sBAAsB,CAACwB,MAAM,CAAC3C,GAAG,CAAC,CAClCqB,mBAAmB,CAACsB,MAAM,CAAC3C,GAAG,CAAC,CAC/B,KAAM,CAAA4C,gBAAgB,CAAGrB,IAAI,GAAK7B,mBAAmB,CAACmD,OAAO,CAC7DhC,qBAAqB,CAACb,GAAG,CAAEQ,KAAK,CAAEoC,gBAAgB,CAAC,CACrD,CACAf,KAAK,CAACY,QAAQ,EACZZ,KAAK,CAACY,QAAQ,CAACC,QAAQ,GAAKL,SAAS,CAAG,KAAK,CAAGK,QAAQ,CAAC,CAC7D,CAAC,CAED3C,sBAAsB,CAACC,GAAG,CAAEQ,KAAK,CAAEe,IAAI,CAAC,CACxCf,KAAK,CAACA,KAAK,CAAGgC,SAAS,CACzB,CAAC,CACDM,IAAIA,CAAC9C,GAAW,CAAE,CAChB,KAAM,CAAAQ,KAAK,CAAGa,mBAAmB,CAACY,GAAG,CAACjC,GAAG,CAAC,CAC1C,GAAI,CAACQ,KAAK,CAAE,CACV,OACF,CACAK,qBAAqB,CAACb,GAAG,CAAEQ,KAAK,CAAC,CACnC,CACF,CAAC,CACH,EAAAU,4BAAA,CAAAT,SAAA,EAAAf,mBAAA,CAAAD,aAAA,CAAAoB,qBAAA,CAAArB,kBAAA,CAAAO,sBAAA,EAAAmB,4BAAA,CAAAR,aAAA,gBAAAQ,4BAAA,CAAAP,UAAA,CAAAM,iCAAA,QAAAC,4BAAA,EAvEA,SAAA6B,iCAAA,EAAAjD,IAAA,6KAyEAH,kBAAkB,CAAC,iBAAAqD,0CAAA,SAAAA,CAAA,CAAM,CAEvB1C,MAAM,CAAC2C,uBAAuB,CAAG/B,4BAA4B,CAAC,CAAC,CACjE,CAAC,CAAA8B,0CAAA,CAAAvC,SAAA,EAAAS,4BAAA,EAAA8B,0CAAA,CAAAtC,aAAA,gBAAAsC,0CAAA,CAAArC,UAAA,CAAAoC,iCAAA,QAAAC,0CAAA,EAHkB,EAGlB,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}