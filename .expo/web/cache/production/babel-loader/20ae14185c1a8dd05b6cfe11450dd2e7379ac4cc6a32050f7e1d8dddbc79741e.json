{"ast":null,"code":"'use strict';import{processColorsInProps}from\"./Colors.js\";import{_updatePropsJS}from\"./js-reanimated/index.js\";import{isFabric,isJest,shouldBeUseWeb}from\"./PlatformChecker.js\";import{runOnUIImmediately}from\"./threads.js\";import{ReanimatedError}from\"./errors.js\";let updateProps;const _worklet_9984356123558_init_data={code:\"function reactNativeReanimated_UpdatePropsJs1(viewDescriptors,updates,isAnimatedProps){const{_updatePropsJS}=this.__closure;var _viewDescriptors$valu;(_viewDescriptors$valu=viewDescriptors.value)===null||_viewDescriptors$valu===void 0||_viewDescriptors$valu.forEach(function(viewDescriptor){const component=viewDescriptor.tag;_updatePropsJS(updates,component,isAnimatedProps);});}\"};const _worklet_15889862836905_init_data={code:\"function reactNativeReanimated_UpdatePropsJs2(viewDescriptors,updates){const{processColorsInProps}=this.__closure;processColorsInProps(updates);global.UpdatePropsManager.update(viewDescriptors,updates);}\"};if(shouldBeUseWeb()){updateProps=function(){const reactNativeReanimated_UpdatePropsJs1=function(viewDescriptors,updates,isAnimatedProps){viewDescriptors.value?.forEach(viewDescriptor=>{const component=viewDescriptor.tag;_updatePropsJS(updates,component,isAnimatedProps);});};reactNativeReanimated_UpdatePropsJs1.__closure={_updatePropsJS};reactNativeReanimated_UpdatePropsJs1.__workletHash=9984356123558;reactNativeReanimated_UpdatePropsJs1.__initData=_worklet_9984356123558_init_data;return reactNativeReanimated_UpdatePropsJs1;}();}else{updateProps=function(){const reactNativeReanimated_UpdatePropsJs2=function(viewDescriptors,updates){processColorsInProps(updates);global.UpdatePropsManager.update(viewDescriptors,updates);};reactNativeReanimated_UpdatePropsJs2.__closure={processColorsInProps};reactNativeReanimated_UpdatePropsJs2.__workletHash=15889862836905;reactNativeReanimated_UpdatePropsJs2.__initData=_worklet_15889862836905_init_data;return reactNativeReanimated_UpdatePropsJs2;}();}export const updatePropsJestWrapper=(viewDescriptors,updates,animatedStyle,adapters)=>{adapters.forEach(adapter=>{adapter(updates);});animatedStyle.current.value=Object.assign({},animatedStyle.current.value,updates);updateProps(viewDescriptors,updates);};export default updateProps;const _worklet_12261044343918_init_data={code:\"function reactNativeReanimated_UpdatePropsJs3(){const operations=[];return{update:function(viewDescriptors,updates){var _this=this;viewDescriptors.value.forEach(function(viewDescriptor){operations.push({shadowNodeWrapper:viewDescriptor.shadowNodeWrapper,updates:updates});if(operations.length===1){queueMicrotask(_this.flush);}});},flush:function(){global._updatePropsFabric(operations);operations.length=0;}};}\"};const _worklet_12293729095436_init_data={code:\"function reactNativeReanimated_UpdatePropsJs4(){const operations=[];return{update:function(viewDescriptors,updates){var _this=this;viewDescriptors.value.forEach(function(viewDescriptor){operations.push({tag:viewDescriptor.tag,name:viewDescriptor.name||'RCTView',updates:updates});if(operations.length===1){queueMicrotask(_this.flush);}});},flush:function(){global._updatePropsPaper(operations);operations.length=0;}};}\"};const createUpdatePropsManager=isFabric()?function(){const reactNativeReanimated_UpdatePropsJs3=function(){const operations=[];return{update(viewDescriptors,updates){viewDescriptors.value.forEach(viewDescriptor=>{operations.push({shadowNodeWrapper:viewDescriptor.shadowNodeWrapper,updates});if(operations.length===1){queueMicrotask(this.flush);}});},flush(){global._updatePropsFabric(operations);operations.length=0;}};};reactNativeReanimated_UpdatePropsJs3.__closure={};reactNativeReanimated_UpdatePropsJs3.__workletHash=12261044343918;reactNativeReanimated_UpdatePropsJs3.__initData=_worklet_12261044343918_init_data;return reactNativeReanimated_UpdatePropsJs3;}():function(){const reactNativeReanimated_UpdatePropsJs4=function(){const operations=[];return{update(viewDescriptors,updates){viewDescriptors.value.forEach(viewDescriptor=>{operations.push({tag:viewDescriptor.tag,name:viewDescriptor.name||'RCTView',updates});if(operations.length===1){queueMicrotask(this.flush);}});},flush(){global._updatePropsPaper(operations);operations.length=0;}};};reactNativeReanimated_UpdatePropsJs4.__closure={};reactNativeReanimated_UpdatePropsJs4.__workletHash=12293729095436;reactNativeReanimated_UpdatePropsJs4.__initData=_worklet_12293729095436_init_data;return reactNativeReanimated_UpdatePropsJs4;}();const _worklet_4774402247764_init_data={code:\"function reactNativeReanimated_UpdatePropsJs5(){const{createUpdatePropsManager}=this.__closure;global.UpdatePropsManager=createUpdatePropsManager();}\"};if(shouldBeUseWeb()){const maybeThrowError=()=>{if(!isJest()){throw new ReanimatedError('`UpdatePropsManager` is not available on non-native platform.');}};global.UpdatePropsManager=new Proxy({},{get:maybeThrowError,set:()=>{maybeThrowError();return false;}});}else{runOnUIImmediately(function(){const reactNativeReanimated_UpdatePropsJs5=function(){global.UpdatePropsManager=createUpdatePropsManager();};reactNativeReanimated_UpdatePropsJs5.__closure={createUpdatePropsManager};reactNativeReanimated_UpdatePropsJs5.__workletHash=4774402247764;reactNativeReanimated_UpdatePropsJs5.__initData=_worklet_4774402247764_init_data;return reactNativeReanimated_UpdatePropsJs5;}())();}","map":{"version":3,"names":["processColorsInProps","_updatePropsJS","isFabric","isJest","shouldBeUseWeb","runOnUIImmediately","ReanimatedError","updateProps","_worklet_9984356123558_init_data","code","_worklet_15889862836905_init_data","reactNativeReanimated_UpdatePropsJs1","viewDescriptors","updates","isAnimatedProps","value","forEach","viewDescriptor","component","tag","__closure","__workletHash","__initData","reactNativeReanimated_UpdatePropsJs2","global","UpdatePropsManager","update","updatePropsJestWrapper","animatedStyle","adapters","adapter","current","Object","assign","_worklet_12261044343918_init_data","_worklet_12293729095436_init_data","createUpdatePropsManager","reactNativeReanimated_UpdatePropsJs3","operations","push","shadowNodeWrapper","length","queueMicrotask","flush","_updatePropsFabric","reactNativeReanimated_UpdatePropsJs4","name","_updatePropsPaper","_worklet_4774402247764_init_data","maybeThrowError","Proxy","get","set","reactNativeReanimated_UpdatePropsJs5"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/UpdateProps.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-redundant-type-constituents */\n'use strict';\nimport type { MutableRefObject } from 'react';\nimport { processColorsInProps } from './Colors';\nimport type {\n  ShadowNodeWrapper,\n  StyleProps,\n  AnimatedStyle,\n} from './commonTypes';\nimport type { Descriptor } from './hook/commonTypes';\nimport type { ReanimatedHTMLElement } from './js-reanimated';\nimport { _updatePropsJS } from './js-reanimated';\nimport { isFabric, isJest, shouldBeUseWeb } from './PlatformChecker';\nimport { runOnUIImmediately } from './threads';\nimport { ReanimatedError } from './errors';\n\nlet updateProps: (\n  viewDescriptors: ViewDescriptorsWrapper,\n  updates: StyleProps | AnimatedStyle<any>,\n  isAnimatedProps?: boolean\n) => void;\n\nif (shouldBeUseWeb()) {\n  updateProps = (viewDescriptors, updates, isAnimatedProps) => {\n    'worklet';\n    viewDescriptors.value?.forEach((viewDescriptor) => {\n      const component = viewDescriptor.tag as ReanimatedHTMLElement;\n      _updatePropsJS(updates, component, isAnimatedProps);\n    });\n  };\n} else {\n  updateProps = (viewDescriptors, updates) => {\n    'worklet';\n    processColorsInProps(updates);\n    global.UpdatePropsManager.update(viewDescriptors, updates);\n  };\n}\n\nexport const updatePropsJestWrapper = (\n  viewDescriptors: ViewDescriptorsWrapper,\n  updates: AnimatedStyle<any>,\n  animatedStyle: MutableRefObject<AnimatedStyle<any>>,\n  adapters: ((updates: AnimatedStyle<any>) => void)[]\n): void => {\n  adapters.forEach((adapter) => {\n    adapter(updates);\n  });\n  animatedStyle.current.value = {\n    ...animatedStyle.current.value,\n    ...updates,\n  };\n\n  updateProps(viewDescriptors, updates);\n};\n\nexport default updateProps;\n\nconst createUpdatePropsManager = isFabric()\n  ? () => {\n      'worklet';\n      // Fabric\n      const operations: {\n        shadowNodeWrapper: ShadowNodeWrapper;\n        updates: StyleProps | AnimatedStyle<any>;\n      }[] = [];\n      return {\n        update(\n          viewDescriptors: ViewDescriptorsWrapper,\n          updates: StyleProps | AnimatedStyle<any>\n        ) {\n          viewDescriptors.value.forEach((viewDescriptor) => {\n            operations.push({\n              shadowNodeWrapper: viewDescriptor.shadowNodeWrapper,\n              updates,\n            });\n            if (operations.length === 1) {\n              queueMicrotask(this.flush);\n            }\n          });\n        },\n        flush(this: void) {\n          global._updatePropsFabric!(operations);\n          operations.length = 0;\n        },\n      };\n    }\n  : () => {\n      'worklet';\n      // Paper\n      const operations: {\n        tag: number;\n        name: string;\n        updates: StyleProps | AnimatedStyle<any>;\n      }[] = [];\n      return {\n        update(\n          viewDescriptors: ViewDescriptorsWrapper,\n          updates: StyleProps | AnimatedStyle<any>\n        ) {\n          viewDescriptors.value.forEach((viewDescriptor) => {\n            operations.push({\n              tag: viewDescriptor.tag as number,\n              name: viewDescriptor.name || 'RCTView',\n              updates,\n            });\n            if (operations.length === 1) {\n              queueMicrotask(this.flush);\n            }\n          });\n        },\n        flush(this: void) {\n          global._updatePropsPaper!(operations);\n          operations.length = 0;\n        },\n      };\n    };\n\nif (shouldBeUseWeb()) {\n  const maybeThrowError = () => {\n    // Jest attempts to access a property of this object to check if it is a Jest mock\n    // so we can't throw an error in the getter.\n    if (!isJest()) {\n      throw new ReanimatedError(\n        '`UpdatePropsManager` is not available on non-native platform.'\n      );\n    }\n  };\n  global.UpdatePropsManager = new Proxy({} as UpdatePropsManager, {\n    get: maybeThrowError,\n    set: () => {\n      maybeThrowError();\n      return false;\n    },\n  });\n} else {\n  runOnUIImmediately(() => {\n    'worklet';\n    global.UpdatePropsManager = createUpdatePropsManager();\n  })();\n}\n\nexport interface UpdatePropsManager {\n  update(\n    viewDescriptors: ViewDescriptorsWrapper,\n    updates: StyleProps | AnimatedStyle<any>\n  ): void;\n  flush(): void;\n}\n\n/**\n * This used to be `SharedValue<Descriptors[]>` but objects holding just a\n * single `value` prop are fine too.\n */\ninterface ViewDescriptorsWrapper {\n  value: Readonly<Descriptor[]>;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}