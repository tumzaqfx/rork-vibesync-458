{"ast":null,"code":"\"use strict\";var _reactJsxRuntime=require(\"react/jsx-runtime\");var _objectWithoutPropertiesLoose=require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");const _excluded=[\"direction\",\"theme\",\"linking\",\"fallback\",\"documentTitle\",\"onReady\",\"onStateChange\"];var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod};};Object.defineProperty(exports,\"__esModule\",{value:true});exports.NavigationContainer=void 0;const native_1=require(\"@react-navigation/native\");const react_1=__importDefault(require(\"react\"));const react_native_1=require(\"react-native-web/dist/index\");const use_latest_callback_1=__importDefault(require(\"use-latest-callback\"));const useBackButton_1=require(\"./useBackButton\");const useDocumentTitle_1=require(\"./useDocumentTitle\");const useLinking_1=require(\"./useLinking\");const useThenable_1=require(\"./useThenable\");globalThis.REACT_NAVIGATION_DEVTOOLS=new WeakMap();function NavigationContainerInner(_ref,ref){let{direction=react_native_1.I18nManager.getConstants().isRTL?'rtl':'ltr',theme=native_1.DefaultTheme,linking,fallback=null,documentTitle,onReady,onStateChange}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const isLinkingEnabled=linking?linking.enabled!==false:false;if(linking?.config){(0,native_1.validatePathConfig)(linking.config);}const refContainer=react_1.default.useRef(null);(0,useBackButton_1.useBackButton)(refContainer);(0,useDocumentTitle_1.useDocumentTitle)(refContainer,documentTitle);const[lastUnhandledLink,setLastUnhandledLink]=react_1.default.useState();const{getInitialState}=(0,useLinking_1.useLinking)(refContainer,Object.assign({enabled:isLinkingEnabled,prefixes:[]},linking),setLastUnhandledLink);const linkingContext=react_1.default.useMemo(()=>({options:linking}),[linking]);const unhandledLinkingContext=react_1.default.useMemo(()=>({lastUnhandledLink,setLastUnhandledLink}),[lastUnhandledLink,setLastUnhandledLink]);const onReadyForLinkingHandling=(0,use_latest_callback_1.default)(()=>{const path=refContainer.current?.getCurrentRoute()?.path;setLastUnhandledLink(previousLastUnhandledLink=>{if(previousLastUnhandledLink===path){return undefined;}return previousLastUnhandledLink;});onReady?.();});const onStateChangeForLinkingHandling=(0,use_latest_callback_1.default)(state=>{const path=refContainer.current?.getCurrentRoute()?.path;setLastUnhandledLink(previousLastUnhandledLink=>{if(previousLastUnhandledLink===path){return undefined;}return previousLastUnhandledLink;});onStateChange?.(state);});react_1.default.useEffect(()=>{if(refContainer.current){REACT_NAVIGATION_DEVTOOLS.set(refContainer.current,{get linking(){return Object.assign({},linking,{enabled:isLinkingEnabled,prefixes:linking?.prefixes??[],getStateFromPath:linking?.getStateFromPath??native_1.getStateFromPath,getPathFromState:linking?.getPathFromState??native_1.getPathFromState,getActionFromState:linking?.getActionFromState??native_1.getActionFromState});}});}});const[isResolved,initialState]=(0,useThenable_1.useThenable)(getInitialState);react_1.default.useImperativeHandle(ref,()=>refContainer.current);const isLinkingReady=rest.initialState!=null||!isLinkingEnabled||isResolved;if(!isLinkingReady){return _reactJsxRuntime.jsx(native_1.ThemeProvider,{value:theme,children:fallback});}return _reactJsxRuntime.jsx(native_1.LocaleDirContext.Provider,{value:direction,children:_reactJsxRuntime.jsx(native_1.UNSTABLE_UnhandledLinkingContext.Provider,{value:unhandledLinkingContext,children:_reactJsxRuntime.jsx(native_1.LinkingContext.Provider,{value:linkingContext,children:_reactJsxRuntime.jsx(native_1.BaseNavigationContainer,Object.assign({},rest,{theme:theme,onReady:onReadyForLinkingHandling,onStateChange:onStateChangeForLinkingHandling,initialState:rest.initialState==null?initialState:rest.initialState,ref:refContainer}))})})});}exports.NavigationContainer=react_1.default.forwardRef(NavigationContainerInner);","map":{"version":3,"names":["native_1","require","react_1","__importDefault","react_native_1","use_latest_callback_1","useBackButton_1","useDocumentTitle_1","useLinking_1","useThenable_1","globalThis","REACT_NAVIGATION_DEVTOOLS","WeakMap","NavigationContainerInner","_ref","ref","direction","I18nManager","getConstants","isRTL","theme","DefaultTheme","linking","fallback","documentTitle","onReady","onStateChange","rest","_objectWithoutPropertiesLoose","_excluded","isLinkingEnabled","enabled","config","validatePathConfig","refContainer","default","useRef","useBackButton","useDocumentTitle","lastUnhandledLink","setLastUnhandledLink","useState","getInitialState","useLinking","Object","assign","prefixes","linkingContext","useMemo","options","unhandledLinkingContext","onReadyForLinkingHandling","path","current","getCurrentRoute","previousLastUnhandledLink","undefined","onStateChangeForLinkingHandling","state","useEffect","set","getStateFromPath","getPathFromState","getActionFromState","isResolved","initialState","useThenable","useImperativeHandle","isLinkingReady","_reactJsxRuntime","jsx","ThemeProvider","value","children","LocaleDirContext","Provider","UNSTABLE_UnhandledLinkingContext","LinkingContext","BaseNavigationContainer","exports","NavigationContainer","forwardRef"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-router/src/fork/NavigationContainer.tsx"],"sourcesContent":["import {\n  BaseNavigationContainer,\n  DefaultTheme,\n  DocumentTitleOptions,\n  LinkingContext,\n  LinkingOptions,\n  LocaleDirContext,\n  LocaleDirection,\n  NavigationContainerProps,\n  NavigationContainerRef,\n  NavigationState,\n  ParamListBase,\n  ThemeProvider,\n  UNSTABLE_UnhandledLinkingContext as UnhandledLinkingContext,\n  getActionFromState,\n  getPathFromState,\n  getStateFromPath,\n  validatePathConfig,\n} from '@react-navigation/native';\nimport React from 'react';\nimport { I18nManager } from 'react-native';\nimport useLatestCallback from 'use-latest-callback';\n\nimport { useBackButton } from './useBackButton';\nimport { useDocumentTitle } from './useDocumentTitle';\nimport { useLinking } from './useLinking';\nimport { useThenable } from './useThenable';\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var REACT_NAVIGATION_DEVTOOLS: WeakMap<\n    NavigationContainerRef<any>,\n    { readonly linking: LinkingOptions<any> }\n  >;\n}\n\nglobalThis.REACT_NAVIGATION_DEVTOOLS = new WeakMap();\n\ntype Props<ParamList extends object> = NavigationContainerProps & {\n  direction?: LocaleDirection;\n  linking?: LinkingOptions<ParamList>;\n  fallback?: React.ReactNode;\n  documentTitle?: DocumentTitleOptions;\n};\n\n/**\n * Container component which holds the navigation state designed for React Native apps.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree. When deep link handling is enabled, this will override deep links when specified. Make sure that you don't specify an `initialState` when there's a deep link (`Linking.getInitialURL()`).\n * @param props.onReady Callback which is called after the navigation tree mounts.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.onUnhandledAction Callback which is called when an action is not handled.\n * @param props.direction Text direction of the components. Defaults to `'ltr'`.\n * @param props.theme Theme object for the UI elements.\n * @param props.linking Options for deep linking. Deep link handling is enabled when this prop is provided, unless `linking.enabled` is `false`.\n * @param props.fallback Fallback component to render until we have finished getting initial state when linking is enabled. Defaults to `null`.\n * @param props.documentTitle Options to configure the document title on Web. Updating document title is handled by default unless `documentTitle.enabled` is `false`.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nfunction NavigationContainerInner(\n  {\n    direction = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr',\n    theme = DefaultTheme,\n    linking,\n    fallback = null,\n    documentTitle,\n    onReady,\n    onStateChange,\n    ...rest\n  }: Props<ParamListBase>,\n  ref?: React.Ref<NavigationContainerRef<ParamListBase> | null>\n) {\n  const isLinkingEnabled = linking ? linking.enabled !== false : false;\n\n  if (linking?.config) {\n    validatePathConfig(linking.config);\n  }\n\n  const refContainer = React.useRef<NavigationContainerRef<ParamListBase> | null>(null);\n\n  useBackButton(refContainer);\n  useDocumentTitle(refContainer, documentTitle);\n\n  const [lastUnhandledLink, setLastUnhandledLink] = React.useState<string | undefined>();\n\n  const { getInitialState } = useLinking(\n    refContainer,\n    {\n      enabled: isLinkingEnabled,\n      prefixes: [],\n      ...linking,\n    },\n    setLastUnhandledLink\n  );\n\n  const linkingContext = React.useMemo(() => ({ options: linking }), [linking]);\n\n  const unhandledLinkingContext = React.useMemo(\n    () => ({ lastUnhandledLink, setLastUnhandledLink }),\n    [lastUnhandledLink, setLastUnhandledLink]\n  );\n\n  const onReadyForLinkingHandling = useLatestCallback(() => {\n    // If the screen path matches lastUnhandledLink, we do not track it\n    const path = refContainer.current?.getCurrentRoute()?.path;\n    setLastUnhandledLink((previousLastUnhandledLink) => {\n      if (previousLastUnhandledLink === path) {\n        return undefined;\n      }\n      return previousLastUnhandledLink;\n    });\n    onReady?.();\n  });\n\n  const onStateChangeForLinkingHandling = useLatestCallback(\n    (state: Readonly<NavigationState> | undefined) => {\n      // If the screen path matches lastUnhandledLink, we do not track it\n      const path = refContainer.current?.getCurrentRoute()?.path;\n      setLastUnhandledLink((previousLastUnhandledLink) => {\n        if (previousLastUnhandledLink === path) {\n          return undefined;\n        }\n        return previousLastUnhandledLink;\n      });\n      onStateChange?.(state);\n    }\n  );\n  // Add additional linking related info to the ref\n  // This will be used by the devtools\n  React.useEffect(() => {\n    if (refContainer.current) {\n      REACT_NAVIGATION_DEVTOOLS.set(refContainer.current, {\n        get linking() {\n          return {\n            ...linking,\n            enabled: isLinkingEnabled,\n            prefixes: linking?.prefixes ?? [],\n            getStateFromPath: linking?.getStateFromPath ?? getStateFromPath,\n            getPathFromState: linking?.getPathFromState ?? getPathFromState,\n            getActionFromState: linking?.getActionFromState ?? getActionFromState,\n          };\n        },\n      });\n    }\n  });\n\n  const [isResolved, initialState] = useThenable(getInitialState);\n\n  React.useImperativeHandle(ref, () => refContainer.current!);\n\n  const isLinkingReady = rest.initialState != null || !isLinkingEnabled || isResolved;\n\n  if (!isLinkingReady) {\n    // This is temporary until we have Suspense for data-fetching\n    // Then the fallback will be handled by a parent `Suspense` component\n    return <ThemeProvider value={theme}>{fallback}</ThemeProvider>;\n  }\n\n  return (\n    <LocaleDirContext.Provider value={direction}>\n      <UnhandledLinkingContext.Provider value={unhandledLinkingContext}>\n        <LinkingContext.Provider value={linkingContext}>\n          <BaseNavigationContainer\n            {...rest}\n            theme={theme}\n            onReady={onReadyForLinkingHandling}\n            onStateChange={onStateChangeForLinkingHandling}\n            initialState={rest.initialState == null ? initialState : rest.initialState}\n            ref={refContainer}\n          />\n        </LinkingContext.Provider>\n      </UnhandledLinkingContext.Provider>\n    </LocaleDirContext.Provider>\n  );\n}\n\nexport const NavigationContainer = React.forwardRef(NavigationContainerInner) as <\n  RootParamList extends object = ReactNavigation.RootParamList,\n>(\n  props: Props<RootParamList> & {\n    ref?: React.Ref<NavigationContainerRef<RootParamList>>;\n  }\n) => React.ReactElement;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}