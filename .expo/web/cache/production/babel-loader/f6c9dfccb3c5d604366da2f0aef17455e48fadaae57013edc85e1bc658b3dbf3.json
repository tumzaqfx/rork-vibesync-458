{"ast":null,"code":"const numberAsInset=value=>({left:value,right:value,top:value,bottom:value});const addInsets=(a,b)=>{var _a$left,_b$left,_a$right,_b$right,_a$top,_b$top,_a$bottom,_b$bottom;return{left:((_a$left=a.left)!==null&&_a$left!==void 0?_a$left:0)+((_b$left=b.left)!==null&&_b$left!==void 0?_b$left:0),right:((_a$right=a.right)!==null&&_a$right!==void 0?_a$right:0)+((_b$right=b.right)!==null&&_b$right!==void 0?_b$right:0),top:((_a$top=a.top)!==null&&_a$top!==void 0?_a$top:0)+((_b$top=b.top)!==null&&_b$top!==void 0?_b$top:0),bottom:((_a$bottom=a.bottom)!==null&&_a$bottom!==void 0?_a$bottom:0)+((_b$bottom=b.bottom)!==null&&_b$bottom!==void 0?_b$bottom:0)};};const touchDataToPressEvent=(data,timestamp,targetId)=>({identifier:data.id,locationX:data.x,locationY:data.y,pageX:data.absoluteX,pageY:data.absoluteY,target:targetId,timestamp:timestamp,touches:[],changedTouches:[]});const gestureToPressEvent=(event,timestamp,targetId)=>({identifier:event.handlerTag,locationX:event.x,locationY:event.y,pageX:event.absoluteX,pageY:event.absoluteY,target:targetId,timestamp:timestamp,touches:[],changedTouches:[]});const isTouchWithinInset=(dimensions,inset,touch)=>{var _touch$x,_inset$right,_touch$y,_inset$bottom,_touch$x2,_inset$left,_touch$y2,_inset$top;return((_touch$x=touch===null||touch===void 0?void 0:touch.x)!==null&&_touch$x!==void 0?_touch$x:0)<((_inset$right=inset.right)!==null&&_inset$right!==void 0?_inset$right:0)+dimensions.width&&((_touch$y=touch===null||touch===void 0?void 0:touch.y)!==null&&_touch$y!==void 0?_touch$y:0)<((_inset$bottom=inset.bottom)!==null&&_inset$bottom!==void 0?_inset$bottom:0)+dimensions.height&&((_touch$x2=touch===null||touch===void 0?void 0:touch.x)!==null&&_touch$x2!==void 0?_touch$x2:0)>-((_inset$left=inset.left)!==null&&_inset$left!==void 0?_inset$left:0)&&((_touch$y2=touch===null||touch===void 0?void 0:touch.y)!==null&&_touch$y2!==void 0?_touch$y2:0)>-((_inset$top=inset.top)!==null&&_inset$top!==void 0?_inset$top:0);};const gestureToPressableEvent=event=>{const timestamp=Date.now();const targetId=0;const pressEvent=gestureToPressEvent(event,timestamp,targetId);return{nativeEvent:{touches:[pressEvent],changedTouches:[pressEvent],identifier:pressEvent.identifier,locationX:event.x,locationY:event.y,pageX:event.absoluteX,pageY:event.absoluteY,target:targetId,timestamp:timestamp,force:undefined}};};const gestureTouchToPressableEvent=event=>{var _event$allTouches$at$,_event$allTouches$at,_event$allTouches$at$2,_event$allTouches$at2,_event$allTouches$at$3,_event$allTouches$at3,_event$allTouches$at$4,_event$allTouches$at4;const timestamp=Date.now();const targetId=0;const touchesList=event.allTouches.map(touch=>touchDataToPressEvent(touch,timestamp,targetId));const changedTouchesList=event.changedTouches.map(touch=>touchDataToPressEvent(touch,timestamp,targetId));return{nativeEvent:{touches:touchesList,changedTouches:changedTouchesList,identifier:event.handlerTag,locationX:(_event$allTouches$at$=(_event$allTouches$at=event.allTouches.at(0))===null||_event$allTouches$at===void 0?void 0:_event$allTouches$at.x)!==null&&_event$allTouches$at$!==void 0?_event$allTouches$at$:-1,locationY:(_event$allTouches$at$2=(_event$allTouches$at2=event.allTouches.at(0))===null||_event$allTouches$at2===void 0?void 0:_event$allTouches$at2.y)!==null&&_event$allTouches$at$2!==void 0?_event$allTouches$at$2:-1,pageX:(_event$allTouches$at$3=(_event$allTouches$at3=event.allTouches.at(0))===null||_event$allTouches$at3===void 0?void 0:_event$allTouches$at3.absoluteX)!==null&&_event$allTouches$at$3!==void 0?_event$allTouches$at$3:-1,pageY:(_event$allTouches$at$4=(_event$allTouches$at4=event.allTouches.at(0))===null||_event$allTouches$at4===void 0?void 0:_event$allTouches$at4.absoluteY)!==null&&_event$allTouches$at$4!==void 0?_event$allTouches$at$4:-1,target:targetId,timestamp:timestamp,force:undefined}};};export{numberAsInset,addInsets,isTouchWithinInset,gestureToPressableEvent,gestureTouchToPressableEvent};","map":{"version":3,"names":["numberAsInset","value","left","right","top","bottom","addInsets","a","b","_a$left","_b$left","_a$right","_b$right","_a$top","_b$top","_a$bottom","_b$bottom","touchDataToPressEvent","data","timestamp","targetId","identifier","id","locationX","x","locationY","y","pageX","absoluteX","pageY","absoluteY","target","touches","changedTouches","gestureToPressEvent","event","handlerTag","isTouchWithinInset","dimensions","inset","touch","_touch$x","_inset$right","_touch$y","_inset$bottom","_touch$x2","_inset$left","_touch$y2","_inset$top","width","height","gestureToPressableEvent","Date","now","pressEvent","nativeEvent","force","undefined","gestureTouchToPressableEvent","_event$allTouches$at$","_event$allTouches$at","_event$allTouches$at$2","_event$allTouches$at2","_event$allTouches$at$3","_event$allTouches$at3","_event$allTouches$at$4","_event$allTouches$at4","touchesList","allTouches","map","changedTouchesList","at"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-gesture-handler/lib/module/components/Pressable/utils.ts"],"sourcesContent":["import { Insets } from 'react-native';\nimport {\n  HoverGestureHandlerEventPayload,\n  LongPressGestureHandlerEventPayload,\n} from '../../handlers/GestureHandlerEventPayload';\nimport {\n  TouchData,\n  GestureStateChangeEvent,\n  GestureTouchEvent,\n} from '../../handlers/gestureHandlerCommon';\nimport { InnerPressableEvent, PressableEvent } from './PressableProps';\n\nconst numberAsInset = (value: number): Insets => ({\n  left: value,\n  right: value,\n  top: value,\n  bottom: value,\n});\n\nconst addInsets = (a: Insets, b: Insets): Insets => ({\n  left: (a.left ?? 0) + (b.left ?? 0),\n  right: (a.right ?? 0) + (b.right ?? 0),\n  top: (a.top ?? 0) + (b.top ?? 0),\n  bottom: (a.bottom ?? 0) + (b.bottom ?? 0),\n});\n\nconst touchDataToPressEvent = (\n  data: TouchData,\n  timestamp: number,\n  targetId: number\n): InnerPressableEvent => ({\n  identifier: data.id,\n  locationX: data.x,\n  locationY: data.y,\n  pageX: data.absoluteX,\n  pageY: data.absoluteY,\n  target: targetId,\n  timestamp: timestamp,\n  touches: [], // Always empty - legacy compatibility\n  changedTouches: [], // Always empty - legacy compatibility\n});\n\nconst gestureToPressEvent = (\n  event: GestureStateChangeEvent<\n    HoverGestureHandlerEventPayload | LongPressGestureHandlerEventPayload\n  >,\n  timestamp: number,\n  targetId: number\n): InnerPressableEvent => ({\n  identifier: event.handlerTag,\n  locationX: event.x,\n  locationY: event.y,\n  pageX: event.absoluteX,\n  pageY: event.absoluteY,\n  target: targetId,\n  timestamp: timestamp,\n  touches: [], // Always empty - legacy compatibility\n  changedTouches: [], // Always empty - legacy compatibility\n});\n\nconst isTouchWithinInset = (\n  dimensions: { width: number; height: number },\n  inset: Insets,\n  touch?: TouchData\n) =>\n  (touch?.x ?? 0) < (inset.right ?? 0) + dimensions.width &&\n  (touch?.y ?? 0) < (inset.bottom ?? 0) + dimensions.height &&\n  (touch?.x ?? 0) > -(inset.left ?? 0) &&\n  (touch?.y ?? 0) > -(inset.top ?? 0);\n\nconst gestureToPressableEvent = (\n  event: GestureStateChangeEvent<\n    HoverGestureHandlerEventPayload | LongPressGestureHandlerEventPayload\n  >\n): PressableEvent => {\n  const timestamp = Date.now();\n\n  // As far as I can see, there isn't a conventional way of getting targetId with the data we get\n  const targetId = 0;\n\n  const pressEvent = gestureToPressEvent(event, timestamp, targetId);\n\n  return {\n    nativeEvent: {\n      touches: [pressEvent],\n      changedTouches: [pressEvent],\n      identifier: pressEvent.identifier,\n      locationX: event.x,\n      locationY: event.y,\n      pageX: event.absoluteX,\n      pageY: event.absoluteY,\n      target: targetId,\n      timestamp: timestamp,\n      force: undefined,\n    },\n  };\n};\n\nconst gestureTouchToPressableEvent = (\n  event: GestureTouchEvent\n): PressableEvent => {\n  const timestamp = Date.now();\n\n  // As far as I can see, there isn't a conventional way of getting targetId with the data we get\n  const targetId = 0;\n\n  const touchesList = event.allTouches.map((touch: TouchData) =>\n    touchDataToPressEvent(touch, timestamp, targetId)\n  );\n  const changedTouchesList = event.changedTouches.map((touch: TouchData) =>\n    touchDataToPressEvent(touch, timestamp, targetId)\n  );\n\n  return {\n    nativeEvent: {\n      touches: touchesList,\n      changedTouches: changedTouchesList,\n      identifier: event.handlerTag,\n      locationX: event.allTouches.at(0)?.x ?? -1,\n      locationY: event.allTouches.at(0)?.y ?? -1,\n      pageX: event.allTouches.at(0)?.absoluteX ?? -1,\n      pageY: event.allTouches.at(0)?.absoluteY ?? -1,\n      target: targetId,\n      timestamp: timestamp,\n      force: undefined,\n    },\n  };\n};\n\nexport {\n  numberAsInset,\n  addInsets,\n  isTouchWithinInset,\n  gestureToPressableEvent,\n  gestureTouchToPressableEvent,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}