{"ast":null,"code":"function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import findNodeHandle from'../../findNodeHandle';import PointerEventManager from'./PointerEventManager';import{State}from'../../State';import{isPointerInBounds}from'../utils';import{MouseButton}from'../../handlers/gestureHandlerCommon';import KeyboardEventManager from'./KeyboardEventManager';import WheelEventManager from'./WheelEventManager';export class GestureHandlerWebDelegate{constructor(){_defineProperty(this,\"isInitialized\",false);_defineProperty(this,\"_view\",void 0);_defineProperty(this,\"gestureHandler\",void 0);_defineProperty(this,\"eventManagers\",[]);_defineProperty(this,\"defaultViewStyles\",{userSelect:'',touchAction:''});}init(viewRef,handler){if(!viewRef){throw new Error(`Cannot find HTML Element for handler ${handler.handlerTag}`);}this.isInitialized=true;this.gestureHandler=handler;this.view=findNodeHandle(viewRef);this.defaultViewStyles={userSelect:this.view.style.userSelect,touchAction:this.view.style.touchAction};const config=handler.config;this.setUserSelect(config.enabled);this.setTouchAction(config.enabled);this.setContextMenu(config.enabled);this.eventManagers.push(new PointerEventManager(this.view));this.eventManagers.push(new KeyboardEventManager(this.view));this.eventManagers.push(new WheelEventManager(this.view));this.eventManagers.forEach(manager=>this.gestureHandler.attachEventManager(manager));}isPointerInBounds({x,y}){return isPointerInBounds(this.view,{x,y});}measureView(){const rect=this.view.getBoundingClientRect();return{pageX:rect.left,pageY:rect.top,width:rect.width,height:rect.height};}reset(){this.eventManagers.forEach(manager=>manager.resetManager());}tryResetCursor(){const config=this.gestureHandler.config;if(config.activeCursor&&config.activeCursor!=='auto'&&this.gestureHandler.state===State.ACTIVE){this.view.style.cursor='auto';}}shouldDisableContextMenu(config){return config.enableContextMenu===undefined&&this.gestureHandler.isButtonInConfig(MouseButton.RIGHT)||config.enableContextMenu===false;}addContextMenuListeners(config){if(this.shouldDisableContextMenu(config)){this.view.addEventListener('contextmenu',this.disableContextMenu);}else if(config.enableContextMenu){this.view.addEventListener('contextmenu',this.enableContextMenu);}}removeContextMenuListeners(config){if(this.shouldDisableContextMenu(config)){this.view.removeEventListener('contextmenu',this.disableContextMenu);}else if(config.enableContextMenu){this.view.removeEventListener('contextmenu',this.enableContextMenu);}}disableContextMenu(e){e.preventDefault();}enableContextMenu(e){e.stopPropagation();}setUserSelect(isHandlerEnabled){const{userSelect}=this.gestureHandler.config;this.view.style['userSelect']=isHandlerEnabled?userSelect!==null&&userSelect!==void 0?userSelect:'none':this.defaultViewStyles.userSelect;this.view.style['webkitUserSelect']=isHandlerEnabled?userSelect!==null&&userSelect!==void 0?userSelect:'none':this.defaultViewStyles.userSelect;}setTouchAction(isHandlerEnabled){const{touchAction}=this.gestureHandler.config;this.view.style['touchAction']=isHandlerEnabled?touchAction!==null&&touchAction!==void 0?touchAction:'none':this.defaultViewStyles.touchAction;this.view.style['WebkitTouchCallout']=isHandlerEnabled?touchAction!==null&&touchAction!==void 0?touchAction:'none':this.defaultViewStyles.touchAction;}setContextMenu(isHandlerEnabled){const config=this.gestureHandler.config;if(isHandlerEnabled){this.addContextMenuListeners(config);}else{this.removeContextMenuListeners(config);}}onEnabledChange(enabled){if(!this.isInitialized){return;}this.setUserSelect(enabled);this.setTouchAction(enabled);this.setContextMenu(enabled);if(enabled){this.eventManagers.forEach(manager=>{manager.registerListeners();});}else{this.eventManagers.forEach(manager=>{manager.unregisterListeners();});}}onBegin(){}onActivate(){const config=this.gestureHandler.config;if((!this.view.style.cursor||this.view.style.cursor==='auto')&&config.activeCursor){this.view.style.cursor=config.activeCursor;}}onEnd(){this.tryResetCursor();}onCancel(){this.tryResetCursor();}onFail(){this.tryResetCursor();}destroy(config){this.removeContextMenuListeners(config);this.eventManagers.forEach(manager=>{manager.unregisterListeners();});}get view(){return this._view;}set view(value){this._view=value;}}","map":{"version":3,"names":["findNodeHandle","PointerEventManager","State","isPointerInBounds","MouseButton","KeyboardEventManager","WheelEventManager","GestureHandlerWebDelegate","constructor","_defineProperty","userSelect","touchAction","init","viewRef","handler","Error","handlerTag","isInitialized","gestureHandler","view","defaultViewStyles","style","config","setUserSelect","enabled","setTouchAction","setContextMenu","eventManagers","push","forEach","manager","attachEventManager","x","y","measureView","rect","getBoundingClientRect","pageX","left","pageY","top","width","height","reset","resetManager","tryResetCursor","activeCursor","state","ACTIVE","cursor","shouldDisableContextMenu","enableContextMenu","undefined","isButtonInConfig","RIGHT","addContextMenuListeners","addEventListener","disableContextMenu","removeContextMenuListeners","removeEventListener","e","preventDefault","stopPropagation","isHandlerEnabled","onEnabledChange","registerListeners","unregisterListeners","onBegin","onActivate","onEnd","onCancel","onFail","destroy","_view","value"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-gesture-handler/lib/module/web/tools/GestureHandlerWebDelegate.ts"],"sourcesContent":["import findNodeHandle from '../../findNodeHandle';\nimport type IGestureHandler from '../handlers/IGestureHandler';\nimport {\n  GestureHandlerDelegate,\n  MeasureResult,\n} from './GestureHandlerDelegate';\nimport PointerEventManager from './PointerEventManager';\nimport { State } from '../../State';\nimport { isPointerInBounds } from '../utils';\nimport EventManager from './EventManager';\nimport { Config } from '../interfaces';\nimport { MouseButton } from '../../handlers/gestureHandlerCommon';\nimport KeyboardEventManager from './KeyboardEventManager';\nimport WheelEventManager from './WheelEventManager';\n\ninterface DefaultViewStyles {\n  userSelect: string;\n  touchAction: string;\n}\n\nexport class GestureHandlerWebDelegate\n  implements GestureHandlerDelegate<HTMLElement, IGestureHandler>\n{\n  private isInitialized = false;\n  private _view!: HTMLElement;\n\n  private gestureHandler!: IGestureHandler;\n  private eventManagers: EventManager<unknown>[] = [];\n  private defaultViewStyles: DefaultViewStyles = {\n    userSelect: '',\n    touchAction: '',\n  };\n\n  init(viewRef: number, handler: IGestureHandler): void {\n    if (!viewRef) {\n      throw new Error(\n        `Cannot find HTML Element for handler ${handler.handlerTag}`\n      );\n    }\n\n    this.isInitialized = true;\n\n    this.gestureHandler = handler;\n    this.view = findNodeHandle(viewRef) as unknown as HTMLElement;\n\n    this.defaultViewStyles = {\n      userSelect: this.view.style.userSelect,\n      touchAction: this.view.style.touchAction,\n    };\n\n    const config = handler.config;\n\n    this.setUserSelect(config.enabled);\n    this.setTouchAction(config.enabled);\n    this.setContextMenu(config.enabled);\n\n    this.eventManagers.push(new PointerEventManager(this.view));\n    this.eventManagers.push(new KeyboardEventManager(this.view));\n    this.eventManagers.push(new WheelEventManager(this.view));\n\n    this.eventManagers.forEach((manager) =>\n      this.gestureHandler.attachEventManager(manager)\n    );\n  }\n\n  isPointerInBounds({ x, y }: { x: number; y: number }): boolean {\n    return isPointerInBounds(this.view, { x, y });\n  }\n\n  measureView(): MeasureResult {\n    const rect = this.view.getBoundingClientRect();\n\n    return {\n      pageX: rect.left,\n      pageY: rect.top,\n      width: rect.width,\n      height: rect.height,\n    };\n  }\n\n  reset(): void {\n    this.eventManagers.forEach((manager: EventManager<unknown>) =>\n      manager.resetManager()\n    );\n  }\n\n  tryResetCursor() {\n    const config = this.gestureHandler.config;\n\n    if (\n      config.activeCursor &&\n      config.activeCursor !== 'auto' &&\n      this.gestureHandler.state === State.ACTIVE\n    ) {\n      this.view.style.cursor = 'auto';\n    }\n  }\n\n  private shouldDisableContextMenu(config: Config) {\n    return (\n      (config.enableContextMenu === undefined &&\n        this.gestureHandler.isButtonInConfig(MouseButton.RIGHT)) ||\n      config.enableContextMenu === false\n    );\n  }\n\n  private addContextMenuListeners(config: Config): void {\n    if (this.shouldDisableContextMenu(config)) {\n      this.view.addEventListener('contextmenu', this.disableContextMenu);\n    } else if (config.enableContextMenu) {\n      this.view.addEventListener('contextmenu', this.enableContextMenu);\n    }\n  }\n\n  private removeContextMenuListeners(config: Config): void {\n    if (this.shouldDisableContextMenu(config)) {\n      this.view.removeEventListener('contextmenu', this.disableContextMenu);\n    } else if (config.enableContextMenu) {\n      this.view.removeEventListener('contextmenu', this.enableContextMenu);\n    }\n  }\n\n  private disableContextMenu(this: void, e: MouseEvent): void {\n    e.preventDefault();\n  }\n\n  private enableContextMenu(this: void, e: MouseEvent): void {\n    e.stopPropagation();\n  }\n\n  private setUserSelect(isHandlerEnabled: boolean) {\n    const { userSelect } = this.gestureHandler.config;\n\n    this.view.style['userSelect'] = isHandlerEnabled\n      ? (userSelect ?? 'none')\n      : this.defaultViewStyles.userSelect;\n\n    this.view.style['webkitUserSelect'] = isHandlerEnabled\n      ? (userSelect ?? 'none')\n      : this.defaultViewStyles.userSelect;\n  }\n\n  private setTouchAction(isHandlerEnabled: boolean) {\n    const { touchAction } = this.gestureHandler.config;\n\n    this.view.style['touchAction'] = isHandlerEnabled\n      ? (touchAction ?? 'none')\n      : this.defaultViewStyles.touchAction;\n\n    // @ts-ignore This one disables default events on Safari\n    this.view.style['WebkitTouchCallout'] = isHandlerEnabled\n      ? (touchAction ?? 'none')\n      : this.defaultViewStyles.touchAction;\n  }\n\n  private setContextMenu(isHandlerEnabled: boolean) {\n    const config = this.gestureHandler.config;\n\n    if (isHandlerEnabled) {\n      this.addContextMenuListeners(config);\n    } else {\n      this.removeContextMenuListeners(config);\n    }\n  }\n\n  onEnabledChange(enabled: boolean): void {\n    if (!this.isInitialized) {\n      return;\n    }\n\n    this.setUserSelect(enabled);\n    this.setTouchAction(enabled);\n    this.setContextMenu(enabled);\n\n    if (enabled) {\n      this.eventManagers.forEach((manager) => {\n        // It may look like managers will be registered twice when handler is mounted for the first time.\n        // However, `init` method is called AFTER `updateGestureConfig` - it means that delegate has not\n        // been initialized yet, so this code won't be executed.\n        //\n        // Also, because we use defined functions, not lambdas, they will not be registered multiple times.\n        manager.registerListeners();\n      });\n    } else {\n      this.eventManagers.forEach((manager) => {\n        manager.unregisterListeners();\n      });\n    }\n  }\n\n  onBegin(): void {\n    // no-op for now\n  }\n\n  onActivate(): void {\n    const config = this.gestureHandler.config;\n\n    if (\n      (!this.view.style.cursor || this.view.style.cursor === 'auto') &&\n      config.activeCursor\n    ) {\n      this.view.style.cursor = config.activeCursor;\n    }\n  }\n\n  onEnd(): void {\n    this.tryResetCursor();\n  }\n\n  onCancel(): void {\n    this.tryResetCursor();\n  }\n\n  onFail(): void {\n    this.tryResetCursor();\n  }\n\n  public destroy(config: Config): void {\n    this.removeContextMenuListeners(config);\n\n    this.eventManagers.forEach((manager) => {\n      manager.unregisterListeners();\n    });\n  }\n\n  public get view() {\n    return this._view;\n  }\n  public set view(value: HTMLElement) {\n    this._view = value;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}