{"ast":null,"code":"'use strict';import{defineAnimation,getReduceMotionForAnimation}from\"./util.js\";import{logger}from\"../logger/index.js\";const _worklet_909393107299_init_data={code:\"function withSequence_reactNativeReanimated_sequenceJs1(_reduceMotionOrFirstAnimation,..._animations){const{logger,defineAnimation,getReduceMotionForAnimation}=this.__closure;let reduceMotion;if(_reduceMotionOrFirstAnimation){if(typeof _reduceMotionOrFirstAnimation==='string'){reduceMotion=_reduceMotionOrFirstAnimation;}else{_animations.unshift(_reduceMotionOrFirstAnimation);}}if(_animations.length===0){logger.warn('No animation was provided for the sequence');return defineAnimation(0,function(){'worklet';return{onStart:function(animation,value){return animation.current=value;},onFrame:function(){return true;},current:0,animationIndex:0,reduceMotion:getReduceMotionForAnimation(reduceMotion)};});}return defineAnimation(_animations[0],function(){'worklet';const animations=_animations.map(function(a){const result=typeof a==='function'?a():a;result.finished=false;return result;});function findNextNonReducedMotionAnimationIndex(index){while(index<animations.length-1&&animations[index].reduceMotion){index++;}return index;}const callback=function(finished){if(finished){return;}animations.forEach(function(animation){if(typeof animation.callback==='function'&&!animation.finished){animation.callback(finished);}});};function sequence(animation,now){const currentAnim=animations[animation.animationIndex];const finished=currentAnim.onFrame(currentAnim,now);animation.current=currentAnim.current;if(finished){if(currentAnim.callback){currentAnim.callback(true);}currentAnim.finished=true;animation.animationIndex=findNextNonReducedMotionAnimationIndex(animation.animationIndex+1);if(animation.animationIndex<animations.length){const nextAnim=animations[animation.animationIndex];nextAnim.onStart(nextAnim,currentAnim.current,now,currentAnim);return false;}return true;}return false;}function onStart(animation,value,now,previousAnimation){animations.forEach(function(anim){if(anim.reduceMotion===undefined){anim.reduceMotion=animation.reduceMotion;}});animation.animationIndex=findNextNonReducedMotionAnimationIndex(0);if(previousAnimation===undefined){previousAnimation=animations[animations.length-1];}const currentAnimation=animations[animation.animationIndex];currentAnimation.onStart(currentAnimation,value,now,previousAnimation);}return{isHigherOrder:true,onFrame:sequence,onStart:onStart,animationIndex:0,current:animations[0].current,callback:callback,reduceMotion:getReduceMotionForAnimation(reduceMotion)};});}\"};const _worklet_12559847024479_init_data={code:\"function reactNativeReanimated_sequenceJs2(){const{getReduceMotionForAnimation,reduceMotion}=this.__closure;return{onStart:function(animation,value){return animation.current=value;},onFrame:function(){return true;},current:0,animationIndex:0,reduceMotion:getReduceMotionForAnimation(reduceMotion)};}\"};const _worklet_6232803474731_init_data={code:\"function reactNativeReanimated_sequenceJs3(){const{_animations,getReduceMotionForAnimation,reduceMotion}=this.__closure;const animations=_animations.map(function(a){const result=typeof a==='function'?a():a;result.finished=false;return result;});function findNextNonReducedMotionAnimationIndex(index){while(index<animations.length-1&&animations[index].reduceMotion){index++;}return index;}const callback=function(finished){if(finished){return;}animations.forEach(function(animation){if(typeof animation.callback==='function'&&!animation.finished){animation.callback(finished);}});};function sequence(animation,now){const currentAnim=animations[animation.animationIndex];const finished=currentAnim.onFrame(currentAnim,now);animation.current=currentAnim.current;if(finished){if(currentAnim.callback){currentAnim.callback(true);}currentAnim.finished=true;animation.animationIndex=findNextNonReducedMotionAnimationIndex(animation.animationIndex+1);if(animation.animationIndex<animations.length){const nextAnim=animations[animation.animationIndex];nextAnim.onStart(nextAnim,currentAnim.current,now,currentAnim);return false;}return true;}return false;}function onStart(animation,value,now,previousAnimation){animations.forEach(function(anim){if(anim.reduceMotion===undefined){anim.reduceMotion=animation.reduceMotion;}});animation.animationIndex=findNextNonReducedMotionAnimationIndex(0);if(previousAnimation===undefined){previousAnimation=animations[animations.length-1];}const currentAnimation=animations[animation.animationIndex];currentAnimation.onStart(currentAnimation,value,now,previousAnimation);}return{isHigherOrder:true,onFrame:sequence,onStart:onStart,animationIndex:0,current:animations[0].current,callback:callback,reduceMotion:getReduceMotionForAnimation(reduceMotion)};}\"};export const withSequence=function(){const withSequence=function(_reduceMotionOrFirstAnimation,..._animations){let reduceMotion;if(_reduceMotionOrFirstAnimation){if(typeof _reduceMotionOrFirstAnimation==='string'){reduceMotion=_reduceMotionOrFirstAnimation;}else{_animations.unshift(_reduceMotionOrFirstAnimation);}}if(_animations.length===0){logger.warn('No animation was provided for the sequence');return defineAnimation(0,function(){const reactNativeReanimated_sequenceJs2=function(){return{onStart:(animation,value)=>animation.current=value,onFrame:()=>true,current:0,animationIndex:0,reduceMotion:getReduceMotionForAnimation(reduceMotion)};};reactNativeReanimated_sequenceJs2.__closure={getReduceMotionForAnimation,reduceMotion};reactNativeReanimated_sequenceJs2.__workletHash=12559847024479;reactNativeReanimated_sequenceJs2.__initData=_worklet_12559847024479_init_data;return reactNativeReanimated_sequenceJs2;}());}return defineAnimation(_animations[0],function(){const reactNativeReanimated_sequenceJs3=function(){const animations=_animations.map(a=>{const result=typeof a==='function'?a():a;result.finished=false;return result;});function findNextNonReducedMotionAnimationIndex(index){while(index<animations.length-1&&animations[index].reduceMotion){index++;}return index;}const callback=finished=>{if(finished){return;}animations.forEach(animation=>{if(typeof animation.callback==='function'&&!animation.finished){animation.callback(finished);}});};function sequence(animation,now){const currentAnim=animations[animation.animationIndex];const finished=currentAnim.onFrame(currentAnim,now);animation.current=currentAnim.current;if(finished){if(currentAnim.callback){currentAnim.callback(true);}currentAnim.finished=true;animation.animationIndex=findNextNonReducedMotionAnimationIndex(animation.animationIndex+1);if(animation.animationIndex<animations.length){const nextAnim=animations[animation.animationIndex];nextAnim.onStart(nextAnim,currentAnim.current,now,currentAnim);return false;}return true;}return false;}function onStart(animation,value,now,previousAnimation){animations.forEach(anim=>{if(anim.reduceMotion===undefined){anim.reduceMotion=animation.reduceMotion;}});animation.animationIndex=findNextNonReducedMotionAnimationIndex(0);if(previousAnimation===undefined){previousAnimation=animations[animations.length-1];}const currentAnimation=animations[animation.animationIndex];currentAnimation.onStart(currentAnimation,value,now,previousAnimation);}return{isHigherOrder:true,onFrame:sequence,onStart,animationIndex:0,current:animations[0].current,callback,reduceMotion:getReduceMotionForAnimation(reduceMotion)};};reactNativeReanimated_sequenceJs3.__closure={_animations,getReduceMotionForAnimation,reduceMotion};reactNativeReanimated_sequenceJs3.__workletHash=6232803474731;reactNativeReanimated_sequenceJs3.__initData=_worklet_6232803474731_init_data;return reactNativeReanimated_sequenceJs3;}());};withSequence.__closure={logger,defineAnimation,getReduceMotionForAnimation};withSequence.__workletHash=909393107299;withSequence.__initData=_worklet_909393107299_init_data;return withSequence;}();","map":{"version":3,"names":["defineAnimation","getReduceMotionForAnimation","logger","_worklet_909393107299_init_data","code","_worklet_12559847024479_init_data","_worklet_6232803474731_init_data","withSequence","_reduceMotionOrFirstAnimation","_animations","reduceMotion","unshift","length","warn","reactNativeReanimated_sequenceJs2","onStart","animation","value","current","onFrame","animationIndex","__closure","__workletHash","__initData","reactNativeReanimated_sequenceJs3","animations","map","a","result","finished","findNextNonReducedMotionAnimationIndex","index","callback","forEach","sequence","now","currentAnim","nextAnim","previousAnimation","anim","undefined","currentAnimation","isHigherOrder"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/animation/sequence.ts"],"sourcesContent":["'use strict';\nimport { defineAnimation, getReduceMotionForAnimation } from './util';\nimport type { NextAnimation, SequenceAnimation } from './commonTypes';\nimport type {\n  Animation,\n  AnimatableValue,\n  AnimationObject,\n  ReduceMotion,\n  Timestamp,\n} from '../commonTypes';\nimport { logger } from '../logger';\n\n/**\n * Lets you run animations in a sequence.\n *\n * @param reduceMotion - Determines how the animation responds to the device's\n *   reduced motion accessibility setting. Default to `ReduceMotion.System` -\n *   {@link ReduceMotion}.\n * @param animations - Any number of animation objects to be run in a sequence.\n * @returns An [animation\n *   object](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animation-object)\n *   which holds the current state of the animation/\n * @see https://docs.swmansion.com/react-native-reanimated/docs/animations/withSequence\n */\nexport function withSequence<T extends AnimatableValue>(\n  _reduceMotion: ReduceMotion,\n  ...animations: T[]\n): T;\n\nexport function withSequence<T extends AnimatableValue>(...animations: T[]): T;\n\nexport function withSequence(\n  _reduceMotionOrFirstAnimation?: ReduceMotion | NextAnimation<AnimationObject>,\n  ..._animations: NextAnimation<AnimationObject>[]\n): Animation<SequenceAnimation> {\n  'worklet';\n  let reduceMotion: ReduceMotion | undefined;\n\n  // the first argument is either a config or an animation\n  // this is done to allow the reduce motion config prop to be optional\n  if (_reduceMotionOrFirstAnimation) {\n    if (typeof _reduceMotionOrFirstAnimation === 'string') {\n      reduceMotion = _reduceMotionOrFirstAnimation as ReduceMotion;\n    } else {\n      _animations.unshift(\n        _reduceMotionOrFirstAnimation as NextAnimation<AnimationObject>\n      );\n    }\n  }\n\n  if (_animations.length === 0) {\n    logger.warn('No animation was provided for the sequence');\n\n    return defineAnimation<SequenceAnimation>(0, () => {\n      'worklet';\n      return {\n        onStart: (animation, value) => (animation.current = value),\n        onFrame: () => true,\n        current: 0,\n        animationIndex: 0,\n        reduceMotion: getReduceMotionForAnimation(reduceMotion),\n      } as SequenceAnimation;\n    });\n  }\n\n  return defineAnimation<SequenceAnimation>(\n    _animations[0] as SequenceAnimation,\n    () => {\n      'worklet';\n\n      const animations = _animations.map((a) => {\n        const result = typeof a === 'function' ? a() : a;\n        result.finished = false;\n        return result;\n      });\n\n      function findNextNonReducedMotionAnimationIndex(index: number) {\n        // the last animation is returned even if reduced motion is enabled,\n        // because we want the sequence to finish at the right spot\n        while (\n          index < animations.length - 1 &&\n          animations[index].reduceMotion\n        ) {\n          index++;\n        }\n\n        return index;\n      }\n\n      const callback = (finished: boolean): void => {\n        if (finished) {\n          // we want to call the callback after every single animation\n          // not after all of them\n          return;\n        }\n        // this is going to be called only if sequence has been cancelled\n        animations.forEach((animation) => {\n          if (typeof animation.callback === 'function' && !animation.finished) {\n            animation.callback(finished);\n          }\n        });\n      };\n\n      function sequence(animation: SequenceAnimation, now: Timestamp): boolean {\n        const currentAnim = animations[animation.animationIndex];\n        const finished = currentAnim.onFrame(currentAnim, now);\n        animation.current = currentAnim.current;\n        if (finished) {\n          // we want to call the callback after every single animation\n          if (currentAnim.callback) {\n            currentAnim.callback(true /* finished */);\n          }\n          currentAnim.finished = true;\n          animation.animationIndex = findNextNonReducedMotionAnimationIndex(\n            animation.animationIndex + 1\n          );\n          if (animation.animationIndex < animations.length) {\n            const nextAnim = animations[animation.animationIndex];\n            nextAnim.onStart(nextAnim, currentAnim.current, now, currentAnim);\n            return false;\n          }\n          return true;\n        }\n        return false;\n      }\n\n      function onStart(\n        animation: SequenceAnimation,\n        value: AnimatableValue,\n        now: Timestamp,\n        previousAnimation: SequenceAnimation\n      ): void {\n        // child animations inherit the setting, unless they already have it defined\n        // they will have it defined only if the user used the `reduceMotion` prop\n        animations.forEach((anim) => {\n          if (anim.reduceMotion === undefined) {\n            anim.reduceMotion = animation.reduceMotion;\n          }\n        });\n        animation.animationIndex = findNextNonReducedMotionAnimationIndex(0);\n\n        if (previousAnimation === undefined) {\n          previousAnimation = animations[\n            animations.length - 1\n          ] as SequenceAnimation;\n        }\n\n        const currentAnimation = animations[animation.animationIndex];\n        currentAnimation.onStart(\n          currentAnimation,\n          value,\n          now,\n          previousAnimation\n        );\n      }\n\n      return {\n        isHigherOrder: true,\n        onFrame: sequence,\n        onStart,\n        animationIndex: 0,\n        current: animations[0].current,\n        callback,\n        reduceMotion: getReduceMotionForAnimation(reduceMotion),\n      } as SequenceAnimation;\n    }\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}