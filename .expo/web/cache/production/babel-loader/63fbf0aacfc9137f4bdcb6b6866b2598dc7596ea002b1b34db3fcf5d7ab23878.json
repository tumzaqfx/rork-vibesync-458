{"ast":null,"code":"import React from'react';import{isNewWebImplementationEnabled}from'./EnableNewWebImplementation';import{Gestures,HammerGestures}from'./web/Gestures';import InteractionManager from'./web/tools/InteractionManager';import NodeManager from'./web/tools/NodeManager';import*as HammerNodeManager from'./web_hammer/NodeManager';import{GestureHandlerWebDelegate}from'./web/tools/GestureHandlerWebDelegate';let shouldPreventDrop=false;export default{handleSetJSResponder(tag,blockNativeResponder){console.warn('handleSetJSResponder: ',tag,blockNativeResponder);},handleClearJSResponder(){console.warn('handleClearJSResponder: ');},createGestureHandler(handlerName,handlerTag,config){if(isNewWebImplementationEnabled()){if(!(handlerName in Gestures)){throw new Error(`react-native-gesture-handler: ${handlerName} is not supported on web.`);}const GestureClass=Gestures[handlerName];NodeManager.createGestureHandler(handlerTag,new GestureClass(new GestureHandlerWebDelegate()));InteractionManager.instance.configureInteractions(NodeManager.getHandler(handlerTag),config);}else{if(!(handlerName in HammerGestures)){throw new Error(`react-native-gesture-handler: ${handlerName} is not supported on web.`);}const GestureClass=HammerGestures[handlerName];HammerNodeManager.createGestureHandler(handlerTag,new GestureClass());}this.updateGestureHandler(handlerTag,config);},attachGestureHandler(handlerTag,newView,_actionType,propsRef){if(!(newView instanceof Element||newView instanceof React.Component)){shouldPreventDrop=true;const handler=isNewWebImplementationEnabled()?NodeManager.getHandler(handlerTag):HammerNodeManager.getHandler(handlerTag);const handlerName=handler.constructor.name;throw new Error(`${handlerName} with tag ${handlerTag} received child that is not valid HTML element.`);}if(isNewWebImplementationEnabled()){NodeManager.getHandler(handlerTag).init(newView,propsRef);}else{HammerNodeManager.getHandler(handlerTag).setView(newView,propsRef);}},updateGestureHandler(handlerTag,newConfig){if(isNewWebImplementationEnabled()){NodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);InteractionManager.instance.configureInteractions(NodeManager.getHandler(handlerTag),newConfig);}else{HammerNodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);}},getGestureHandlerNode(handlerTag){if(isNewWebImplementationEnabled()){return NodeManager.getHandler(handlerTag);}else{return HammerNodeManager.getHandler(handlerTag);}},dropGestureHandler(handlerTag){if(shouldPreventDrop){return;}if(isNewWebImplementationEnabled()){NodeManager.dropGestureHandler(handlerTag);}else{HammerNodeManager.dropGestureHandler(handlerTag);}},flushOperations(){}};","map":{"version":3,"names":["React","isNewWebImplementationEnabled","Gestures","HammerGestures","InteractionManager","NodeManager","HammerNodeManager","GestureHandlerWebDelegate","shouldPreventDrop","handleSetJSResponder","tag","blockNativeResponder","console","warn","handleClearJSResponder","createGestureHandler","handlerName","handlerTag","config","Error","GestureClass","instance","configureInteractions","getHandler","updateGestureHandler","attachGestureHandler","newView","_actionType","propsRef","Element","Component","handler","constructor","name","init","setView","newConfig","updateGestureConfig","getGestureHandlerNode","dropGestureHandler","flushOperations"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-gesture-handler/lib/module/RNGestureHandlerModule.web.ts"],"sourcesContent":["import React from 'react';\n\nimport type { ActionType } from './ActionType';\nimport { isNewWebImplementationEnabled } from './EnableNewWebImplementation';\nimport { Gestures, HammerGestures } from './web/Gestures';\nimport type { Config } from './web/interfaces';\nimport InteractionManager from './web/tools/InteractionManager';\nimport NodeManager from './web/tools/NodeManager';\nimport * as HammerNodeManager from './web_hammer/NodeManager';\nimport { GestureHandlerWebDelegate } from './web/tools/GestureHandlerWebDelegate';\n\n// init method is called inside attachGestureHandler function. However, this function may\n// fail when received view is not valid HTML element. On the other hand, dropGestureHandler\n// will be called even if attach failed, which will result in crash.\n//\n// We use this flag to check whether or not dropGestureHandler should be called.\nlet shouldPreventDrop = false;\n\nexport default {\n  handleSetJSResponder(tag: number, blockNativeResponder: boolean) {\n    console.warn('handleSetJSResponder: ', tag, blockNativeResponder);\n  },\n  handleClearJSResponder() {\n    console.warn('handleClearJSResponder: ');\n  },\n  createGestureHandler<T>(\n    handlerName: keyof typeof Gestures,\n    handlerTag: number,\n    config: T\n  ) {\n    if (isNewWebImplementationEnabled()) {\n      if (!(handlerName in Gestures)) {\n        throw new Error(\n          `react-native-gesture-handler: ${handlerName} is not supported on web.`\n        );\n      }\n\n      const GestureClass = Gestures[handlerName];\n      NodeManager.createGestureHandler(\n        handlerTag,\n        new GestureClass(new GestureHandlerWebDelegate())\n      );\n      InteractionManager.instance.configureInteractions(\n        NodeManager.getHandler(handlerTag),\n        config as unknown as Config\n      );\n    } else {\n      if (!(handlerName in HammerGestures)) {\n        throw new Error(\n          `react-native-gesture-handler: ${handlerName} is not supported on web.`\n        );\n      }\n\n      // @ts-ignore If it doesn't exist, the error is thrown\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      const GestureClass = HammerGestures[handlerName];\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      HammerNodeManager.createGestureHandler(handlerTag, new GestureClass());\n    }\n\n    this.updateGestureHandler(handlerTag, config as unknown as Config);\n  },\n  attachGestureHandler(\n    handlerTag: number,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    newView: any,\n    _actionType: ActionType,\n    propsRef: React.RefObject<unknown>\n  ) {\n    if (!(newView instanceof Element || newView instanceof React.Component)) {\n      shouldPreventDrop = true;\n\n      const handler = isNewWebImplementationEnabled()\n        ? NodeManager.getHandler(handlerTag)\n        : HammerNodeManager.getHandler(handlerTag);\n\n      const handlerName = handler.constructor.name;\n\n      throw new Error(\n        `${handlerName} with tag ${handlerTag} received child that is not valid HTML element.`\n      );\n    }\n\n    if (isNewWebImplementationEnabled()) {\n      // @ts-ignore Types should be HTMLElement or React.Component\n      NodeManager.getHandler(handlerTag).init(newView, propsRef);\n    } else {\n      // @ts-ignore Types should be HTMLElement or React.Component\n      HammerNodeManager.getHandler(handlerTag).setView(newView, propsRef);\n    }\n  },\n  updateGestureHandler(handlerTag: number, newConfig: Config) {\n    if (isNewWebImplementationEnabled()) {\n      NodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n\n      InteractionManager.instance.configureInteractions(\n        NodeManager.getHandler(handlerTag),\n        newConfig\n      );\n    } else {\n      HammerNodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n    }\n  },\n  getGestureHandlerNode(handlerTag: number) {\n    if (isNewWebImplementationEnabled()) {\n      return NodeManager.getHandler(handlerTag);\n    } else {\n      return HammerNodeManager.getHandler(handlerTag);\n    }\n  },\n  dropGestureHandler(handlerTag: number) {\n    if (shouldPreventDrop) {\n      return;\n    }\n\n    if (isNewWebImplementationEnabled()) {\n      NodeManager.dropGestureHandler(handlerTag);\n    } else {\n      HammerNodeManager.dropGestureHandler(handlerTag);\n    }\n  },\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  flushOperations() {},\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}