{"ast":null,"code":"function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}export class MountRegistry{static addMountListener(listener){this.mountListeners.add(listener);return()=>{this.mountListeners.delete(listener);};}static addUnmountListener(listener){this.unmountListeners.add(listener);return()=>{this.unmountListeners.delete(listener);};}static gestureHandlerWillMount(handler){this.mountListeners.forEach(listener=>listener(handler));}static gestureHandlerWillUnmount(handler){this.unmountListeners.forEach(listener=>listener(handler));}static gestureWillMount(gesture){this.mountListeners.forEach(listener=>listener(gesture));}static gestureWillUnmount(gesture){this.unmountListeners.forEach(listener=>listener(gesture));}}_defineProperty(MountRegistry,\"mountListeners\",new Set());_defineProperty(MountRegistry,\"unmountListeners\",new Set());","map":{"version":3,"names":["MountRegistry","addMountListener","listener","mountListeners","add","delete","addUnmountListener","unmountListeners","gestureHandlerWillMount","handler","forEach","gestureHandlerWillUnmount","gestureWillMount","gesture","gestureWillUnmount","Set"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-gesture-handler/lib/module/mountRegistry.ts"],"sourcesContent":["import { GestureType } from './handlers/gestures/gesture';\n\ninterface ReactComponentWithHandlerTag extends React.Component {\n  handlerTag: number;\n}\n\nexport type GestureMountListener = (\n  gesture: GestureType | ReactComponentWithHandlerTag\n) => void;\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class MountRegistry {\n  private static mountListeners = new Set<GestureMountListener>();\n  private static unmountListeners = new Set<GestureMountListener>();\n\n  static addMountListener(listener: GestureMountListener): () => void {\n    this.mountListeners.add(listener);\n\n    return () => {\n      this.mountListeners.delete(listener);\n    };\n  }\n\n  static addUnmountListener(listener: GestureMountListener): () => void {\n    this.unmountListeners.add(listener);\n\n    return () => {\n      this.unmountListeners.delete(listener);\n    };\n  }\n\n  static gestureHandlerWillMount(handler: React.Component) {\n    this.mountListeners.forEach((listener) =>\n      listener(handler as ReactComponentWithHandlerTag)\n    );\n  }\n\n  static gestureHandlerWillUnmount(handler: React.Component) {\n    this.unmountListeners.forEach((listener) =>\n      listener(handler as ReactComponentWithHandlerTag)\n    );\n  }\n\n  static gestureWillMount(gesture: GestureType) {\n    this.mountListeners.forEach((listener) => listener(gesture));\n  }\n\n  static gestureWillUnmount(gesture: GestureType) {\n    this.unmountListeners.forEach((listener) => listener(gesture));\n  }\n}\n"],"mappings":"sLAWA,MAAO,MAAM,CAAAA,aAAc,CAIF,MAAhB,CAAAC,gBAAgBA,CAACC,QAAD,CAA6C,CAClE,KAAKC,cAAL,CAAoBC,GAApB,CAAwBF,QAAxB,EAEA,MAAO,IAAM,CACX,KAAKC,cAAL,CAAoBE,MAApB,CAA2BH,QAA3B,EACD,CAFD,CAGD,CAEwB,MAAlB,CAAAI,kBAAkBA,CAACJ,QAAD,CAA6C,CACpE,KAAKK,gBAAL,CAAsBH,GAAtB,CAA0BF,QAA1B,EAEA,MAAO,IAAM,CACX,KAAKK,gBAAL,CAAsBF,MAAtB,CAA6BH,QAA7B,EACD,CAFD,CAGD,CAE6B,MAAvB,CAAAM,uBAAuBA,CAACC,OAAD,CAA2B,CACvD,KAAKN,cAAL,CAAoBO,OAApB,CAA6BR,QAAD,EAC1BA,QAAQ,CAACO,OAAD,CADV,EAGD,CAE+B,MAAzB,CAAAE,yBAAyBA,CAACF,OAAD,CAA2B,CACzD,KAAKF,gBAAL,CAAsBG,OAAtB,CAA+BR,QAAD,EAC5BA,QAAQ,CAACO,OAAD,CADV,EAGD,CAEsB,MAAhB,CAAAG,gBAAgBA,CAACC,OAAD,CAAuB,CAC5C,KAAKV,cAAL,CAAoBO,OAApB,CAA6BR,QAAD,EAAcA,QAAQ,CAACW,OAAD,CAAlD,EACD,CAEwB,MAAlB,CAAAC,kBAAkBA,CAACD,OAAD,CAAuB,CAC9C,KAAKN,gBAAL,CAAsBG,OAAtB,CAA+BR,QAAD,EAAcA,QAAQ,CAACW,OAAD,CAApD,EACD,CAtCwB,C,gBAAdb,a,kBACqB,GAAI,CAAAe,GAAJ,E,kBADrBf,a,oBAEuB,GAAI,CAAAe,GAAJ,E","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}