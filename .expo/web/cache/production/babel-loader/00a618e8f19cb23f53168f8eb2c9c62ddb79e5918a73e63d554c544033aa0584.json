{"ast":null,"code":"'use strict';import{defineAnimation,getReduceMotionForAnimation,recognizePrefixSuffix}from\"./util.js\";import{logger}from\"../logger/index.js\";const _worklet_11241294755947_init_data={code:\"function reactNativeReanimated_clampJs1(config,_animationToClamp){const{defineAnimation,recognizePrefixSuffix,logger,getReduceMotionForAnimation}=this.__closure;return defineAnimation(_animationToClamp,function(){'worklet';const animationToClamp=typeof _animationToClamp==='function'?_animationToClamp():_animationToClamp;const strippedMin=config.min===undefined?undefined:recognizePrefixSuffix(config.min).strippedValue;const strippedMax=config.max===undefined?undefined:recognizePrefixSuffix(config.max).strippedValue;function clampOnFrame(animation,now){const finished=animationToClamp.onFrame(animationToClamp,now);if(animationToClamp.current===undefined){logger.warn(\\\"Error inside 'withClamp' animation, the inner animation has invalid current value\\\");return true;}else{const{prefix:prefix,strippedValue:strippedValue,suffix:suffix}=recognizePrefixSuffix(animationToClamp.current);let newValue;if(strippedMax!==undefined&&strippedMax<strippedValue){newValue=strippedMax;}else if(strippedMin!==undefined&&strippedMin>strippedValue){newValue=strippedMin;}else{newValue=strippedValue;}animation.current=typeof animationToClamp.current==='number'?newValue:\\\"\\\"+(prefix===undefined?'':prefix)+newValue+(suffix===undefined?'':suffix);}return finished;}function onStart(animation,value,now,previousAnimation){animation.current=value;animation.previousAnimation=animationToClamp;const animationBeforeClamped=previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.previousAnimation;if(config.max!==undefined&&config.min!==undefined&&config.max<config.min){logger.warn('Wrong config was provided to withClamp. Min value is bigger than max');}animationToClamp.onStart(animationToClamp,(animationBeforeClamped===null||animationBeforeClamped===void 0?void 0:animationBeforeClamped.current)||value,now,animationBeforeClamped);}const callback=function(finished){if(animationToClamp.callback){animationToClamp.callback(finished);}};return{isHigherOrder:true,onFrame:clampOnFrame,onStart:onStart,current:animationToClamp.current,callback:callback,previousAnimation:null,reduceMotion:getReduceMotionForAnimation(config.reduceMotion)};});}\"};const _worklet_15049981710423_init_data={code:\"function reactNativeReanimated_clampJs2(){const{_animationToClamp,config,recognizePrefixSuffix,logger,getReduceMotionForAnimation}=this.__closure;const animationToClamp=typeof _animationToClamp==='function'?_animationToClamp():_animationToClamp;const strippedMin=config.min===undefined?undefined:recognizePrefixSuffix(config.min).strippedValue;const strippedMax=config.max===undefined?undefined:recognizePrefixSuffix(config.max).strippedValue;function clampOnFrame(animation,now){const finished=animationToClamp.onFrame(animationToClamp,now);if(animationToClamp.current===undefined){logger.warn(\\\"Error inside 'withClamp' animation, the inner animation has invalid current value\\\");return true;}else{const{prefix:prefix,strippedValue:strippedValue,suffix:suffix}=recognizePrefixSuffix(animationToClamp.current);let newValue;if(strippedMax!==undefined&&strippedMax<strippedValue){newValue=strippedMax;}else if(strippedMin!==undefined&&strippedMin>strippedValue){newValue=strippedMin;}else{newValue=strippedValue;}animation.current=typeof animationToClamp.current==='number'?newValue:\\\"\\\"+(prefix===undefined?'':prefix)+newValue+(suffix===undefined?'':suffix);}return finished;}function onStart(animation,value,now,previousAnimation){animation.current=value;animation.previousAnimation=animationToClamp;const animationBeforeClamped=previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.previousAnimation;if(config.max!==undefined&&config.min!==undefined&&config.max<config.min){logger.warn('Wrong config was provided to withClamp. Min value is bigger than max');}animationToClamp.onStart(animationToClamp,(animationBeforeClamped===null||animationBeforeClamped===void 0?void 0:animationBeforeClamped.current)||value,now,animationBeforeClamped);}const callback=function(finished){if(animationToClamp.callback){animationToClamp.callback(finished);}};return{isHigherOrder:true,onFrame:clampOnFrame,onStart:onStart,current:animationToClamp.current,callback:callback,previousAnimation:null,reduceMotion:getReduceMotionForAnimation(config.reduceMotion)};}\"};export const withClamp=function(){const reactNativeReanimated_clampJs1=function(config,_animationToClamp){return defineAnimation(_animationToClamp,function(){const reactNativeReanimated_clampJs2=function(){const animationToClamp=typeof _animationToClamp==='function'?_animationToClamp():_animationToClamp;const strippedMin=config.min===undefined?undefined:recognizePrefixSuffix(config.min).strippedValue;const strippedMax=config.max===undefined?undefined:recognizePrefixSuffix(config.max).strippedValue;function clampOnFrame(animation,now){const finished=animationToClamp.onFrame(animationToClamp,now);if(animationToClamp.current===undefined){logger.warn(\"Error inside 'withClamp' animation, the inner animation has invalid current value\");return true;}else{const{prefix,strippedValue,suffix}=recognizePrefixSuffix(animationToClamp.current);let newValue;if(strippedMax!==undefined&&strippedMax<strippedValue){newValue=strippedMax;}else if(strippedMin!==undefined&&strippedMin>strippedValue){newValue=strippedMin;}else{newValue=strippedValue;}animation.current=typeof animationToClamp.current==='number'?newValue:`${prefix===undefined?'':prefix}${newValue}${suffix===undefined?'':suffix}`;}return finished;}function onStart(animation,value,now,previousAnimation){animation.current=value;animation.previousAnimation=animationToClamp;const animationBeforeClamped=previousAnimation?.previousAnimation;if(config.max!==undefined&&config.min!==undefined&&config.max<config.min){logger.warn('Wrong config was provided to withClamp. Min value is bigger than max');}animationToClamp.onStart(animationToClamp,animationBeforeClamped?.current||value,now,animationBeforeClamped);}const callback=finished=>{if(animationToClamp.callback){animationToClamp.callback(finished);}};return{isHigherOrder:true,onFrame:clampOnFrame,onStart,current:animationToClamp.current,callback,previousAnimation:null,reduceMotion:getReduceMotionForAnimation(config.reduceMotion)};};reactNativeReanimated_clampJs2.__closure={_animationToClamp,config,recognizePrefixSuffix,logger,getReduceMotionForAnimation};reactNativeReanimated_clampJs2.__workletHash=15049981710423;reactNativeReanimated_clampJs2.__initData=_worklet_15049981710423_init_data;return reactNativeReanimated_clampJs2;}());};reactNativeReanimated_clampJs1.__closure={defineAnimation,recognizePrefixSuffix,logger,getReduceMotionForAnimation};reactNativeReanimated_clampJs1.__workletHash=11241294755947;reactNativeReanimated_clampJs1.__initData=_worklet_11241294755947_init_data;return reactNativeReanimated_clampJs1;}();","map":{"version":3,"names":["defineAnimation","getReduceMotionForAnimation","recognizePrefixSuffix","logger","_worklet_11241294755947_init_data","code","_worklet_15049981710423_init_data","withClamp","reactNativeReanimated_clampJs1","config","_animationToClamp","reactNativeReanimated_clampJs2","animationToClamp","strippedMin","min","undefined","strippedValue","strippedMax","max","clampOnFrame","animation","now","finished","onFrame","current","warn","prefix","suffix","newValue","onStart","value","previousAnimation","animationBeforeClamped","callback","isHigherOrder","reduceMotion","__closure","__workletHash","__initData"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/animation/clamp.ts"],"sourcesContent":["'use strict';\nimport {\n  defineAnimation,\n  getReduceMotionForAnimation,\n  recognizePrefixSuffix,\n} from './util';\nimport type {\n  Animation,\n  Timestamp,\n  AnimatableValue,\n  AnimationObject,\n  ReduceMotion,\n} from '../commonTypes';\nimport type { ClampAnimation } from './commonTypes';\nimport { logger } from '../logger';\n\ntype withClampType = <T extends number | string>(\n  config: {\n    min?: T;\n    max?: T;\n  },\n  clampedAnimation: T\n) => T;\n\nexport const withClamp = function <T extends number | string>(\n  config: { min?: T; max?: T; reduceMotion?: ReduceMotion },\n  _animationToClamp: AnimationObject<T> | (() => AnimationObject<T>)\n): Animation<ClampAnimation> {\n  'worklet';\n  return defineAnimation<ClampAnimation, AnimationObject<T>>(\n    _animationToClamp,\n    (): ClampAnimation => {\n      'worklet';\n      const animationToClamp =\n        typeof _animationToClamp === 'function'\n          ? _animationToClamp()\n          : _animationToClamp;\n\n      const strippedMin =\n        config.min === undefined\n          ? undefined\n          : recognizePrefixSuffix(config.min).strippedValue;\n\n      const strippedMax =\n        config.max === undefined\n          ? undefined\n          : recognizePrefixSuffix(config.max).strippedValue;\n\n      function clampOnFrame(\n        animation: ClampAnimation,\n        now: Timestamp\n      ): boolean {\n        const finished = animationToClamp.onFrame(animationToClamp, now);\n\n        if (animationToClamp.current === undefined) {\n          logger.warn(\n            \"Error inside 'withClamp' animation, the inner animation has invalid current value\"\n          );\n          return true;\n        } else {\n          const { prefix, strippedValue, suffix } = recognizePrefixSuffix(\n            animationToClamp.current\n          );\n\n          let newValue;\n\n          if (strippedMax !== undefined && strippedMax < strippedValue) {\n            newValue = strippedMax;\n          } else if (strippedMin !== undefined && strippedMin > strippedValue) {\n            newValue = strippedMin;\n          } else {\n            newValue = strippedValue;\n          }\n\n          animation.current =\n            typeof animationToClamp.current === 'number'\n              ? newValue\n              : `${prefix === undefined ? '' : prefix}${newValue}${\n                  suffix === undefined ? '' : suffix\n                }`;\n        }\n\n        return finished;\n      }\n\n      function onStart(\n        animation: Animation<any>,\n        value: AnimatableValue,\n        now: Timestamp,\n        previousAnimation: Animation<any> | null\n      ): void {\n        animation.current = value;\n        animation.previousAnimation = animationToClamp;\n        const animationBeforeClamped = previousAnimation?.previousAnimation;\n        if (\n          config.max !== undefined &&\n          config.min !== undefined &&\n          config.max < config.min\n        ) {\n          logger.warn(\n            'Wrong config was provided to withClamp. Min value is bigger than max'\n          );\n        }\n\n        animationToClamp.onStart(\n          animationToClamp,\n          /**\n           * Provide the current value of the previous animation of the clamped\n           * animation so we can animate from the original \"un-truncated\" value\n           */\n          animationBeforeClamped?.current || value,\n          now,\n          animationBeforeClamped\n        );\n      }\n\n      const callback = (finished?: boolean): void => {\n        if (animationToClamp.callback) {\n          animationToClamp.callback(finished);\n        }\n      };\n\n      return {\n        isHigherOrder: true,\n        onFrame: clampOnFrame,\n        onStart,\n        current: animationToClamp.current!,\n        callback,\n        previousAnimation: null,\n        reduceMotion: getReduceMotionForAnimation(config.reduceMotion),\n      };\n    }\n  );\n} as withClampType;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}