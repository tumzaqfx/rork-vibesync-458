{"ast":null,"code":"\"use strict\";import*as React from'react';import{NavigationBuilderContext}from\"./NavigationBuilderContext.js\";export function useOnRouteFocus({router,getState,key:sourceRouteKey,setState}){const{onRouteFocus:onRouteFocusParent}=React.useContext(NavigationBuilderContext);return React.useCallback(key=>{const state=getState();const result=router.getStateForRouteFocus(state,key);if(result!==state){setState(result);}if(onRouteFocusParent!==undefined&&sourceRouteKey!==undefined){onRouteFocusParent(sourceRouteKey);}},[getState,onRouteFocusParent,router,setState,sourceRouteKey]);}","map":{"version":3,"names":["React","NavigationBuilderContext","useOnRouteFocus","router","getState","key","sourceRouteKey","setState","onRouteFocus","onRouteFocusParent","useContext","useCallback","state","result","getStateForRouteFocus","undefined"],"sources":["/home/user/rork-vibesync-458/node_modules/@react-navigation/core/src/useOnRouteFocus.tsx"],"sourcesContent":["import type {\n  NavigationAction,\n  NavigationState,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport { NavigationBuilderContext } from './NavigationBuilderContext';\n\ntype Options<Action extends NavigationAction> = {\n  router: Router<NavigationState, Action>;\n  getState: () => NavigationState;\n  setState: (state: NavigationState) => void;\n  key?: string;\n};\n\n/**\n * Hook to handle focus actions for a route.\n * Focus action needs to be treated specially, coz when a nested route is focused,\n * the parent navigators also needs to be focused.\n */\nexport function useOnRouteFocus<Action extends NavigationAction>({\n  router,\n  getState,\n  key: sourceRouteKey,\n  setState,\n}: Options<Action>) {\n  const { onRouteFocus: onRouteFocusParent } = React.useContext(\n    NavigationBuilderContext\n  );\n\n  return React.useCallback(\n    (key: string) => {\n      const state = getState();\n      const result = router.getStateForRouteFocus(state, key);\n\n      if (result !== state) {\n        setState(result);\n      }\n\n      if (onRouteFocusParent !== undefined && sourceRouteKey !== undefined) {\n        onRouteFocusParent(sourceRouteKey);\n      }\n    },\n    [getState, onRouteFocusParent, router, setState, sourceRouteKey]\n  );\n}\n"],"mappings":"aAKA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAE9B,OAASC,wBAAwB,KAAQ,+BAA4B,CAcrE,MAAO,SAAS,CAAAC,eAAeA,CAAkC,CAC/DC,MAAM,CACNC,QAAQ,CACRC,GAAG,CAAEC,cAAc,CACnBC,QACe,CAAC,CAAE,CAClB,KAAM,CAAEC,YAAY,CAAEC,kBAAmB,CAAC,CAAGT,KAAK,CAACU,UAAU,CAC3DT,wBACF,CAAC,CAED,MAAO,CAAAD,KAAK,CAACW,WAAW,CACrBN,GAAW,EAAK,CACf,KAAM,CAAAO,KAAK,CAAGR,QAAQ,CAAC,CAAC,CACxB,KAAM,CAAAS,MAAM,CAAGV,MAAM,CAACW,qBAAqB,CAACF,KAAK,CAAEP,GAAG,CAAC,CAEvD,GAAIQ,MAAM,GAAKD,KAAK,CAAE,CACpBL,QAAQ,CAACM,MAAM,CAAC,CAClB,CAEA,GAAIJ,kBAAkB,GAAKM,SAAS,EAAIT,cAAc,GAAKS,SAAS,CAAE,CACpEN,kBAAkB,CAACH,cAAc,CAAC,CACpC,CACF,CAAC,CACD,CAACF,QAAQ,CAAEK,kBAAkB,CAAEN,MAAM,CAAEI,QAAQ,CAAED,cAAc,CACjE,CAAC,CACH","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}