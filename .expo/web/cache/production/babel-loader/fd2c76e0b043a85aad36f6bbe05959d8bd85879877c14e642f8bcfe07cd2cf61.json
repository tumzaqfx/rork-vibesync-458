{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"facing\",\"poster\",\"ref\"];import{CodedError}from'expo-modules-core';import{useRef,useMemo,useImperativeHandle}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import createElement from'react-native-web/dist/exports/createElement';import CameraManager from'./ExpoCameraManager.web';import{capture}from'./web/WebCameraUtils';import{PictureSizes}from'./web/WebConstants';import{useWebCameraStream}from'./web/useWebCameraStream';import{useWebQRScanner}from'./web/useWebQRScanner';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ExponentCamera=_ref=>{let{facing,poster,ref}=_ref,props=_objectWithoutPropertiesLoose(_ref,_excluded);const video=useRef(null);const native=useWebCameraStream(video,facing,props,{onCameraReady(){if(props.onCameraReady){props.onCameraReady();}},onMountError:props.onMountError});const isQRScannerEnabled=useMemo(()=>{return Boolean(props.barcodeScannerSettings?.barcodeTypes?.includes('qr')&&!!props.onBarcodeScanned);},[props.barcodeScannerSettings?.barcodeTypes,props.onBarcodeScanned]);useWebQRScanner(video,{interval:300,isEnabled:isQRScannerEnabled,captureOptions:{scale:1,isImageMirror:native.type==='front'},onScanned(event){if(props.onBarcodeScanned){props.onBarcodeScanned(event);}}});useImperativeHandle(ref,()=>({async getAvailablePictureSizes(){return PictureSizes;},async takePicture(options){if(!video.current||video.current?.readyState!==video.current?.HAVE_ENOUGH_DATA){throw new CodedError('ERR_CAMERA_NOT_READY','HTMLVideoElement does not have enough camera data to construct an image yet.');}const settings=native.mediaTrackSettings;if(!settings){throw new CodedError('ERR_CAMERA_NOT_READY','MediaStream is not ready yet.');}return capture(video.current,settings,Object.assign({},options,{onPictureSaved(picture){if(options.onPictureSaved){options.onPictureSaved(picture);}if(props.onPictureSaved){props.onPictureSaved({nativeEvent:{data:picture,id:-1}});}}}));},async resumePreview(){if(video.current){video.current.play();}},async pausePreview(){if(video.current){video.current.pause();}},async stopRecording(){console.warn('stopRecording is not supported on web.');},async record(){console.warn('record is not supported on web.');return{uri:''};},async toggleRecording(){console.warn('toggleRecording is not supported on web.');},async launchModernScanner(){console.warn('launchModernScanner is not supported on web.');},async getAvailableLenses(){console.warn('getAvailableLenses is not supported on web.');return[];}}),[native.mediaTrackSettings,props.onPictureSaved]);const isMuted=true;const style=useMemo(()=>{const isFrontFacingCamera=native.type===CameraManager.Type.front;return[StyleSheet.absoluteFill,styles.video,{transform:isFrontFacingCamera?[{scaleX:-1}]:undefined}];},[native.type]);return _jsxs(View,{pointerEvents:\"box-none\",style:[styles.videoWrapper,props.style],children:[_jsx(Video,{autoPlay:true,playsInline:true,muted:isMuted,poster:poster,pointerEvents:props.pointerEvents,ref:video,style:style}),props.children]});};export default ExponentCamera;const Video=props=>createElement('video',Object.assign({},props));const styles=StyleSheet.create({videoWrapper:{flex:1,alignItems:'stretch'},video:{width:'100%',height:'100%',objectFit:'cover'}});","map":{"version":3,"names":["CodedError","useRef","useMemo","useImperativeHandle","StyleSheet","View","createElement","CameraManager","capture","PictureSizes","useWebCameraStream","useWebQRScanner","jsx","_jsx","jsxs","_jsxs","ExponentCamera","_ref","facing","poster","ref","props","_objectWithoutPropertiesLoose","_excluded","video","native","onCameraReady","onMountError","isQRScannerEnabled","Boolean","barcodeScannerSettings","barcodeTypes","includes","onBarcodeScanned","interval","isEnabled","captureOptions","scale","isImageMirror","type","onScanned","event","getAvailablePictureSizes","takePicture","options","current","readyState","HAVE_ENOUGH_DATA","settings","mediaTrackSettings","Object","assign","onPictureSaved","picture","nativeEvent","data","id","resumePreview","play","pausePreview","pause","stopRecording","console","warn","record","uri","toggleRecording","launchModernScanner","getAvailableLenses","isMuted","style","isFrontFacingCamera","Type","front","absoluteFill","styles","transform","scaleX","undefined","pointerEvents","videoWrapper","children","Video","autoPlay","playsInline","muted","create","flex","alignItems","width","height","objectFit"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-camera/src/ExpoCamera.web.tsx"],"sourcesContent":["import { CodedError } from 'expo-modules-core';\nimport {\n  type PropsWithChildren,\n  useRef,\n  useMemo,\n  useImperativeHandle,\n  type ComponentProps,\n  type Ref,\n} from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\nimport createElement from 'react-native-web/dist/exports/createElement';\n\nimport {\n  CameraNativeProps,\n  CameraCapturedPicture,\n  CameraPictureOptions,\n  CameraType,\n} from './Camera.types';\nimport CameraManager from './ExpoCameraManager.web';\nimport { capture } from './web/WebCameraUtils';\nimport { PictureSizes } from './web/WebConstants';\nimport { useWebCameraStream } from './web/useWebCameraStream';\nimport { useWebQRScanner } from './web/useWebQRScanner';\n\nexport interface ExponentCameraRef {\n  getAvailablePictureSizes: (ratio: string) => Promise<string[]>;\n  takePicture: (options: CameraPictureOptions) => Promise<CameraCapturedPicture>;\n  resumePreview: () => Promise<void>;\n  pausePreview: () => Promise<void>;\n}\n\nconst ExponentCamera = ({\n  facing,\n  poster,\n  ref,\n  ...props\n}: PropsWithChildren<CameraNativeProps>) => {\n  const video = useRef<HTMLVideoElement | null>(null);\n\n  const native = useWebCameraStream(video, facing as CameraType, props, {\n    onCameraReady() {\n      if (props.onCameraReady) {\n        props.onCameraReady();\n      }\n    },\n    onMountError: props.onMountError,\n  });\n\n  const isQRScannerEnabled = useMemo<boolean>(() => {\n    return Boolean(\n      props.barcodeScannerSettings?.barcodeTypes?.includes('qr') && !!props.onBarcodeScanned\n    );\n  }, [props.barcodeScannerSettings?.barcodeTypes, props.onBarcodeScanned]);\n\n  useWebQRScanner(video, {\n    interval: 300,\n    isEnabled: isQRScannerEnabled,\n    captureOptions: { scale: 1, isImageMirror: native.type === 'front' },\n    onScanned(event) {\n      if (props.onBarcodeScanned) {\n        props.onBarcodeScanned(event);\n      }\n    },\n  });\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      async getAvailablePictureSizes(): Promise<string[]> {\n        return PictureSizes;\n      },\n      async takePicture(options: CameraPictureOptions): Promise<CameraCapturedPicture> {\n        if (!video.current || video.current?.readyState !== video.current?.HAVE_ENOUGH_DATA) {\n          throw new CodedError(\n            'ERR_CAMERA_NOT_READY',\n            'HTMLVideoElement does not have enough camera data to construct an image yet.'\n          );\n        }\n        const settings = native.mediaTrackSettings;\n        if (!settings) {\n          throw new CodedError('ERR_CAMERA_NOT_READY', 'MediaStream is not ready yet.');\n        }\n\n        return capture(video.current, settings, {\n          ...options,\n          // This will always be defined, the option gets added to a queue in the upper-level. We should replace the original so it isn't called twice.\n          onPictureSaved(picture) {\n            if (options.onPictureSaved) {\n              options.onPictureSaved(picture);\n            }\n            if (props.onPictureSaved) {\n              props.onPictureSaved({ nativeEvent: { data: picture, id: -1 } });\n            }\n          },\n        });\n      },\n      async resumePreview(): Promise<void> {\n        if (video.current) {\n          video.current.play();\n        }\n      },\n      async pausePreview(): Promise<void> {\n        if (video.current) {\n          video.current.pause();\n        }\n      },\n      async stopRecording(): Promise<void> {\n        console.warn('stopRecording is not supported on web.');\n      },\n      async record(): Promise<{ uri: string }> {\n        console.warn('record is not supported on web.');\n        return { uri: '' };\n      },\n      async toggleRecording() {\n        console.warn('toggleRecording is not supported on web.');\n      },\n      async launchModernScanner() {\n        console.warn('launchModernScanner is not supported on web.');\n      },\n      async getAvailableLenses() {\n        console.warn('getAvailableLenses is not supported on web.');\n        return [];\n      },\n    }),\n    [native.mediaTrackSettings, props.onPictureSaved]\n  );\n\n  // TODO(Bacon): Create a universal prop, on native the microphone is only used when recording videos.\n  // Because we don't support recording video in the browser we don't need the user to give microphone permissions.\n  const isMuted = true;\n\n  const style = useMemo<StyleProp<ViewStyle>>(() => {\n    const isFrontFacingCamera = native.type === CameraManager.Type.front;\n    return [\n      StyleSheet.absoluteFill,\n      styles.video,\n      {\n        // Flip the camera\n        transform: isFrontFacingCamera ? [{ scaleX: -1 }] : undefined,\n      },\n    ];\n  }, [native.type]);\n\n  return (\n    <View pointerEvents=\"box-none\" style={[styles.videoWrapper, props.style]}>\n      <Video\n        autoPlay\n        playsInline\n        muted={isMuted}\n        poster={poster}\n        pointerEvents={props.pointerEvents}\n        ref={video}\n        style={style}\n      />\n      {props.children}\n    </View>\n  );\n};\n\nexport default ExponentCamera;\n\nconst Video = (\n  props: ComponentProps<typeof View> & {\n    autoPlay?: boolean;\n    playsInline?: boolean;\n    muted?: boolean;\n    poster?: string;\n    ref: Ref<HTMLVideoElement>;\n  }\n) => createElement('video', { ...props });\n\nconst styles = StyleSheet.create({\n  videoWrapper: {\n    flex: 1,\n    alignItems: 'stretch',\n  },\n  video: {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}