{"ast":null,"code":"import{useState,useCallback,useMemo}from'react';import createContextHook from'@nkzw/create-context-hook';import{mockVibePosts}from'@/mocks/vibeposts';export const[VibePostProvider,useVibePosts]=createContextHook(()=>{const[vibePosts,setVibePosts]=useState(mockVibePosts);const[isUploading,setIsUploading]=useState(false);const likeVibePost=useCallback(postId=>{setVibePosts(prev=>prev.map(post=>{if(post.id===postId){return Object.assign({},post,{isLiked:!post.isLiked,likes:post.isLiked?post.likes-1:post.likes+1});}return post;}));},[]);const repostVibePost=useCallback(postId=>{setVibePosts(prev=>prev.map(post=>{if(post.id===postId){return Object.assign({},post,{isReposted:!post.isReposted,reposts:post.isReposted?post.reposts-1:post.reposts+1});}return post;}));},[]);const incrementViews=useCallback(postId=>{setVibePosts(prev=>prev.map(post=>{if(post.id===postId){return Object.assign({},post,{views:post.views+1});}return post;}));},[]);const uploadVibePost=useCallback(async(upload,user)=>{setIsUploading(true);try{await new Promise(resolve=>setTimeout(resolve,2000));const newPost={id:`vp${Date.now()}`,userId:user.id,username:user.username,displayName:user.displayName,avatar:user.avatar,verified:user.verified,videoUrl:upload.videoUri,thumbnailUrl:upload.thumbnailUri||upload.videoUri,caption:upload.caption,duration:upload.duration,aspectRatio:upload.aspectRatio,likes:0,comments:0,reposts:0,views:0,isLiked:false,isReposted:false,createdAt:new Date(),music:upload.music,hashtags:upload.hashtags};setVibePosts(prev=>[newPost,...prev]);return newPost;}finally{setIsUploading(false);}},[]);const deleteVibePost=useCallback(postId=>{setVibePosts(prev=>prev.filter(post=>post.id!==postId));},[]);return{vibePosts,isUploading,likeVibePost,repostVibePost,incrementViews,uploadVibePost,deleteVibePost};});export function useVibePostById(postId){const{vibePosts}=useVibePosts();return useMemo(()=>vibePosts.find(post=>post.id===postId),[vibePosts,postId]);}export function useUserVibePosts(userId){const{vibePosts}=useVibePosts();return useMemo(()=>vibePosts.filter(post=>post.userId===userId),[vibePosts,userId]);}","map":{"version":3,"names":["useState","useCallback","useMemo","createContextHook","mockVibePosts","VibePostProvider","useVibePosts","vibePosts","setVibePosts","isUploading","setIsUploading","likeVibePost","postId","prev","map","post","id","Object","assign","isLiked","likes","repostVibePost","isReposted","reposts","incrementViews","views","uploadVibePost","upload","user","Promise","resolve","setTimeout","newPost","Date","now","userId","username","displayName","avatar","verified","videoUrl","videoUri","thumbnailUrl","thumbnailUri","caption","duration","aspectRatio","comments","createdAt","music","hashtags","deleteVibePost","filter","useVibePostById","find","useUserVibePosts"],"sources":["/home/user/rork-vibesync-458/hooks/vibepost-store.ts"],"sourcesContent":["import { useState, useCallback, useMemo } from 'react';\nimport createContextHook from '@nkzw/create-context-hook';\nimport { VibePost, VibePostUpload } from '@/types/vibepost';\nimport { mockVibePosts } from '@/mocks/vibeposts';\n\nexport const [VibePostProvider, useVibePosts] = createContextHook(() => {\n  const [vibePosts, setVibePosts] = useState<VibePost[]>(mockVibePosts);\n  const [isUploading, setIsUploading] = useState(false);\n\n  const likeVibePost = useCallback((postId: string) => {\n    setVibePosts(prev => prev.map(post => {\n      if (post.id === postId) {\n        return {\n          ...post,\n          isLiked: !post.isLiked,\n          likes: post.isLiked ? post.likes - 1 : post.likes + 1\n        };\n      }\n      return post;\n    }));\n  }, []);\n\n  const repostVibePost = useCallback((postId: string) => {\n    setVibePosts(prev => prev.map(post => {\n      if (post.id === postId) {\n        return {\n          ...post,\n          isReposted: !post.isReposted,\n          reposts: post.isReposted ? post.reposts - 1 : post.reposts + 1\n        };\n      }\n      return post;\n    }));\n  }, []);\n\n  const incrementViews = useCallback((postId: string) => {\n    setVibePosts(prev => prev.map(post => {\n      if (post.id === postId) {\n        return {\n          ...post,\n          views: post.views + 1\n        };\n      }\n      return post;\n    }));\n  }, []);\n\n  const uploadVibePost = useCallback(async (upload: VibePostUpload, user: { id: string; username: string; displayName: string; avatar: string; verified: boolean }) => {\n    setIsUploading(true);\n    \n    try {\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      const newPost: VibePost = {\n        id: `vp${Date.now()}`,\n        userId: user.id,\n        username: user.username,\n        displayName: user.displayName,\n        avatar: user.avatar,\n        verified: user.verified,\n        videoUrl: upload.videoUri,\n        thumbnailUrl: upload.thumbnailUri || upload.videoUri,\n        caption: upload.caption,\n        duration: upload.duration,\n        aspectRatio: upload.aspectRatio,\n        likes: 0,\n        comments: 0,\n        reposts: 0,\n        views: 0,\n        isLiked: false,\n        isReposted: false,\n        createdAt: new Date(),\n        music: upload.music,\n        hashtags: upload.hashtags\n      };\n\n      setVibePosts(prev => [newPost, ...prev]);\n      return newPost;\n    } finally {\n      setIsUploading(false);\n    }\n  }, []);\n\n  const deleteVibePost = useCallback((postId: string) => {\n    setVibePosts(prev => prev.filter(post => post.id !== postId));\n  }, []);\n\n  return {\n    vibePosts,\n    isUploading,\n    likeVibePost,\n    repostVibePost,\n    incrementViews,\n    uploadVibePost,\n    deleteVibePost\n  };\n});\n\nexport function useVibePostById(postId: string) {\n  const { vibePosts } = useVibePosts();\n  return useMemo(() => vibePosts.find(post => post.id === postId), [vibePosts, postId]);\n}\n\nexport function useUserVibePosts(userId: string) {\n  const { vibePosts } = useVibePosts();\n  return useMemo(() => vibePosts.filter(post => post.userId === userId), [vibePosts, userId]);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}