{"ast":null,"code":"function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{EventTypes}from'../interfaces';import EventManager from'./EventManager';import{PointerType}from'../../PointerType';export default class KeyboardEventManager extends EventManager{constructor(...args){super(...args);_defineProperty(this,\"activationKeys\",['Enter',' ']);_defineProperty(this,\"cancelationKeys\",['Tab']);_defineProperty(this,\"isPressed\",false);_defineProperty(this,\"keyDownCallback\",event=>{if(this.cancelationKeys.indexOf(event.key)!==-1&&this.isPressed){this.dispatchEvent(event,EventTypes.CANCEL);return;}if(this.activationKeys.indexOf(event.key)===-1){return;}this.dispatchEvent(event,EventTypes.DOWN);});_defineProperty(this,\"keyUpCallback\",event=>{if(this.activationKeys.indexOf(event.key)===-1||!this.isPressed){return;}this.dispatchEvent(event,EventTypes.UP);});}dispatchEvent(event,eventType){if(!(event.target instanceof HTMLElement)){return;}const adaptedEvent=this.mapEvent(event,eventType);switch(eventType){case EventTypes.UP:this.isPressed=false;this.onPointerUp(adaptedEvent);break;case EventTypes.DOWN:this.isPressed=true;this.onPointerDown(adaptedEvent);break;case EventTypes.CANCEL:this.isPressed=false;this.onPointerCancel(adaptedEvent);break;}}registerListeners(){this.view.addEventListener('keydown',this.keyDownCallback);this.view.addEventListener('keyup',this.keyUpCallback);}unregisterListeners(){this.view.removeEventListener('keydown',this.keyDownCallback);this.view.removeEventListener('keyup',this.keyUpCallback);}mapEvent(event,eventType){const viewRect=event.target.getBoundingClientRect();const viewportPosition={x:(viewRect===null||viewRect===void 0?void 0:viewRect.x)+(viewRect===null||viewRect===void 0?void 0:viewRect.width)/2,y:(viewRect===null||viewRect===void 0?void 0:viewRect.y)+(viewRect===null||viewRect===void 0?void 0:viewRect.height)/2};const relativePosition={x:(viewRect===null||viewRect===void 0?void 0:viewRect.width)/2,y:(viewRect===null||viewRect===void 0?void 0:viewRect.height)/2};return{x:viewportPosition.x,y:viewportPosition.y,offsetX:relativePosition.x,offsetY:relativePosition.y,pointerId:0,eventType:eventType,pointerType:PointerType.KEY,time:event.timeStamp};}}","map":{"version":3,"names":["EventTypes","EventManager","PointerType","KeyboardEventManager","constructor","args","_defineProperty","event","cancelationKeys","indexOf","key","isPressed","dispatchEvent","CANCEL","activationKeys","DOWN","UP","eventType","target","HTMLElement","adaptedEvent","mapEvent","onPointerUp","onPointerDown","onPointerCancel","registerListeners","view","addEventListener","keyDownCallback","keyUpCallback","unregisterListeners","removeEventListener","viewRect","getBoundingClientRect","viewportPosition","x","width","y","height","relativePosition","offsetX","offsetY","pointerId","pointerType","KEY","time","timeStamp"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-gesture-handler/lib/module/web/tools/KeyboardEventManager.ts"],"sourcesContent":["import { AdaptedEvent, EventTypes } from '../interfaces';\nimport EventManager from './EventManager';\nimport { PointerType } from '../../PointerType';\n\nexport default class KeyboardEventManager extends EventManager<HTMLElement> {\n  private activationKeys = ['Enter', ' '];\n  private cancelationKeys = ['Tab'];\n  private isPressed = false;\n\n  private keyDownCallback = (event: KeyboardEvent): void => {\n    if (this.cancelationKeys.indexOf(event.key) !== -1 && this.isPressed) {\n      this.dispatchEvent(event, EventTypes.CANCEL);\n      return;\n    }\n\n    if (this.activationKeys.indexOf(event.key) === -1) {\n      return;\n    }\n\n    this.dispatchEvent(event, EventTypes.DOWN);\n  };\n\n  private keyUpCallback = (event: KeyboardEvent): void => {\n    if (this.activationKeys.indexOf(event.key) === -1 || !this.isPressed) {\n      return;\n    }\n\n    this.dispatchEvent(event, EventTypes.UP);\n  };\n\n  private dispatchEvent(event: KeyboardEvent, eventType: EventTypes) {\n    if (!(event.target instanceof HTMLElement)) {\n      return;\n    }\n\n    const adaptedEvent = this.mapEvent(event, eventType);\n\n    switch (eventType) {\n      case EventTypes.UP:\n        this.isPressed = false;\n        this.onPointerUp(adaptedEvent);\n        break;\n      case EventTypes.DOWN:\n        this.isPressed = true;\n        this.onPointerDown(adaptedEvent);\n        break;\n      case EventTypes.CANCEL:\n        this.isPressed = false;\n        this.onPointerCancel(adaptedEvent);\n        break;\n    }\n  }\n\n  public registerListeners(): void {\n    this.view.addEventListener('keydown', this.keyDownCallback);\n    this.view.addEventListener('keyup', this.keyUpCallback);\n  }\n\n  public unregisterListeners(): void {\n    this.view.removeEventListener('keydown', this.keyDownCallback);\n    this.view.removeEventListener('keyup', this.keyUpCallback);\n  }\n\n  protected mapEvent(\n    event: KeyboardEvent,\n    eventType: EventTypes\n  ): AdaptedEvent {\n    const viewRect = (event.target as HTMLElement).getBoundingClientRect();\n\n    const viewportPosition = {\n      x: viewRect?.x + viewRect?.width / 2,\n      y: viewRect?.y + viewRect?.height / 2,\n    };\n\n    const relativePosition = {\n      x: viewRect?.width / 2,\n      y: viewRect?.height / 2,\n    };\n\n    return {\n      x: viewportPosition.x,\n      y: viewportPosition.y,\n      offsetX: relativePosition.x,\n      offsetY: relativePosition.y,\n      pointerId: 0,\n      eventType: eventType,\n      pointerType: PointerType.KEY,\n      time: event.timeStamp,\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}