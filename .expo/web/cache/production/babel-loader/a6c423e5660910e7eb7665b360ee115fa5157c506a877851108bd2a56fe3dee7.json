{"ast":null,"code":"import ExponentAV from'../ExponentAV';let _enabled=true;export function isAudioEnabled(){return _enabled;}export function throwIfAudioIsDisabled(){if(!_enabled){throw new Error('Cannot complete operation because audio is not enabled.');}}export async function setIsEnabledAsync(value){_enabled=value;await ExponentAV.setAudioIsEnabled(value);}","map":{"version":3,"names":["ExponentAV","_enabled","isAudioEnabled","throwIfAudioIsDisabled","Error","setIsEnabledAsync","value","setAudioIsEnabled"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-av/src/Audio/AudioAvailability.ts"],"sourcesContent":["import ExponentAV from '../ExponentAV';\n\nlet _enabled = true;\n\nexport function isAudioEnabled(): boolean {\n  return _enabled;\n}\n\nexport function throwIfAudioIsDisabled(): void {\n  if (!_enabled) {\n    throw new Error('Cannot complete operation because audio is not enabled.');\n  }\n}\n\n// @needsAudit\n/**\n * Audio is enabled by default, but if you want to write your own Audio API in a bare workflow app, you might want to disable the Audio API.\n * @param value `true` enables Audio, and `false` disables it.\n * @return A `Promise` that will reject if audio playback could not be enabled for the device.\n */\nexport async function setIsEnabledAsync(value: boolean): Promise<void> {\n  _enabled = value;\n  await ExponentAV.setAudioIsEnabled(value);\n  // TODO : We immediately pause all players when disabled, but we do not resume all shouldPlay\n  // players when enabled. Perhaps for completeness we should allow this; the design of the\n  // enabling API is for people to enable / disable this audio library, but I think that it should\n  // intuitively also double as a global pause/resume.\n}\n"],"mappings":"AAAA,MAAO,CAAAA,UAAU,KAAM,eAAe,CAEtC,GAAI,CAAAC,QAAQ,CAAG,IAAI,CAEnB,MAAM,SAAU,CAAAC,cAAcA,CAAA,EAC5B,MAAO,CAAAD,QAAQ,CACjB,CAEA,MAAM,SAAU,CAAAE,sBAAsBA,CAAA,EACpC,GAAI,CAACF,QAAQ,CAAE,CACb,KAAM,IAAI,CAAAG,KAAK,CAAC,yDAAyD,CAAC,CAC5E,CACF,CAQA,MAAO,eAAe,CAAAC,iBAAiBA,CAACC,KAAc,EACpDL,QAAQ,CAAGK,KAAK,CAChB,KAAM,CAAAN,UAAU,CAACO,iBAAiB,CAACD,KAAK,CAAC,CAK3C","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}