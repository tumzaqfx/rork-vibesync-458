{"ast":null,"code":"import{SharedRef}from'expo';import{SaveFormat}from'../ImageManipulator.types';import{blobToBase64String}from'./utils.web';export default class ImageManipulatorImageRef extends SharedRef{nativeRefType='image';constructor(uri,canvas){super();this.uri=uri;this.canvas=canvas;}get width(){return this.canvas.width;}get height(){return this.canvas.height;}async saveAsync(options={base64:false}){return new Promise((resolve,reject)=>{this.canvas.toBlob(async blob=>{if(!blob){return reject(new Error(`Unable to save image: ${this.uri}`));}const base64=options.base64?await blobToBase64String(blob):undefined;const uri=URL.createObjectURL(blob);resolve({uri,width:this.width,height:this.height,base64});},`image/${options.format??SaveFormat.JPEG}`,options.compress);});}}","map":{"version":3,"names":["SharedRef","SaveFormat","blobToBase64String","ImageManipulatorImageRef","nativeRefType","constructor","uri","canvas","width","height","saveAsync","options","base64","Promise","resolve","reject","toBlob","blob","Error","undefined","URL","createObjectURL","format","JPEG","compress"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-image-manipulator/src/web/ImageManipulatorImageRef.web.ts"],"sourcesContent":["import { SharedRef } from 'expo';\n\nimport { ImageResult, SaveFormat, SaveOptions } from '../ImageManipulator.types';\nimport { blobToBase64String } from './utils.web';\n\nexport default class ImageManipulatorImageRef extends SharedRef<'image'> {\n  readonly nativeRefType: string = 'image';\n\n  readonly uri: string;\n  readonly canvas: HTMLCanvasElement;\n\n  constructor(uri: string, canvas: HTMLCanvasElement) {\n    super();\n    this.uri = uri;\n    this.canvas = canvas;\n  }\n\n  get width() {\n    return this.canvas.width;\n  }\n\n  get height() {\n    return this.canvas.height;\n  }\n\n  async saveAsync(options: SaveOptions = { base64: false }): Promise<ImageResult> {\n    return new Promise((resolve, reject) => {\n      this.canvas.toBlob(\n        async (blob) => {\n          if (!blob) {\n            return reject(new Error(`Unable to save image: ${this.uri}`));\n          }\n          const base64 = options.base64 ? await blobToBase64String(blob) : undefined;\n          const uri = URL.createObjectURL(blob);\n\n          resolve({\n            uri,\n            width: this.width,\n            height: this.height,\n            base64,\n          });\n        },\n        `image/${options.format ?? SaveFormat.JPEG}`,\n        options.compress\n      );\n    });\n  }\n}\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,MAAM,CAEhC,OAAsBC,UAAU,KAAqB,2BAA2B,CAChF,OAASC,kBAAkB,KAAQ,aAAa,CAEhD,cAAe,MAAM,CAAAC,wBAAwB,QAAS,CAAAH,SAAmB,CAC9DI,aAAa,CAAW,OAAO,CAKxCC,WAAWA,CAACC,GAAW,CAAEC,MAAyB,CAAE,CAClD,KAAK,CAAC,CAAC,CACP,IAAI,CAACD,GAAG,CAAGA,GAAG,CACd,IAAI,CAACC,MAAM,CAAGA,MAAM,CACtB,CAEA,GAAI,CAAAC,KAAKA,CAAA,CAAG,CACV,MAAO,KAAI,CAACD,MAAM,CAACC,KAAK,CAC1B,CAEA,GAAI,CAAAC,MAAMA,CAAA,CAAG,CACX,MAAO,KAAI,CAACF,MAAM,CAACE,MAAM,CAC3B,CAEA,KAAM,CAAAC,SAASA,CAACC,OAAoB,CAAG,CAAEC,MAAM,CAAE,KAAM,CAAC,CAAwB,CAC9E,MAAO,IAAI,CAAAC,OAAO,CAAC,CAACC,OAAO,CAAEC,MAAM,GAAK,CACtC,IAAI,CAACR,MAAM,CAACS,MAAM,CAChB,KAAO,CAAAC,IAAI,EAAK,CACd,GAAI,CAACA,IAAI,CAAE,CACT,MAAO,CAAAF,MAAM,CAAC,GAAI,CAAAG,KAAK,CAAC,yBAAyB,IAAI,CAACZ,GAAG,EAAE,CAAC,CAAC,CAC/D,CACA,KAAM,CAAAM,MAAM,CAAGD,OAAO,CAACC,MAAM,CAAG,KAAM,CAAAV,kBAAkB,CAACe,IAAI,CAAC,CAAGE,SAAS,CAC1E,KAAM,CAAAb,GAAG,CAAGc,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC,CAErCH,OAAO,CAAC,CACNR,GAAG,CACHE,KAAK,CAAE,IAAI,CAACA,KAAK,CACjBC,MAAM,CAAE,IAAI,CAACA,MAAM,CACnBG,MACF,CAAC,CAAC,CACJ,CAAC,CACD,SAASD,OAAO,CAACW,MAAM,EAAIrB,UAAU,CAACsB,IAAI,EAAE,CAC5CZ,OAAO,CAACa,QACV,CAAC,CACH,CAAC,CAAC,CACJ,CACF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}