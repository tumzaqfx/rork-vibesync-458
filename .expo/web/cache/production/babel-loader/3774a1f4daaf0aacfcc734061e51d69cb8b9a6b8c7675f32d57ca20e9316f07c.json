{"ast":null,"code":"import{useState,useEffect,useMemo,useCallback}from'react';import AsyncStorage from'@react-native-async-storage/async-storage';import createContextHook from'@nkzw/create-context-hook';import{DEFAULT_MESSAGE_SETTINGS}from'@/types/message-settings';const STORAGE_KEY='message-settings';export const[MessageSettingsProvider,useMessageSettings]=createContextHook(()=>{const[settings,setSettings]=useState(DEFAULT_MESSAGE_SETTINGS);const[isLoading,setIsLoading]=useState(true);useEffect(()=>{loadSettings();},[]);const loadSettings=async()=>{try{const stored=await AsyncStorage.getItem(STORAGE_KEY);if(stored){const parsed=JSON.parse(stored);setSettings(parsed);}}catch(error){console.error('[MessageSettings] Error loading settings:',error);}finally{setIsLoading(false);}};const saveSettings=async newSettings=>{try{await AsyncStorage.setItem(STORAGE_KEY,JSON.stringify(newSettings));setSettings(newSettings);}catch(error){console.error('[MessageSettings] Error saving settings:',error);}};const updateMessageRequestsFrom=useCallback(value=>{const newSettings=Object.assign({},settings,{messageRequestsFrom:value});saveSettings(newSettings);},[settings]);const toggleAudioVideoCalling=useCallback(()=>{const newSettings=Object.assign({},settings,{audioVideoCallingEnabled:!settings.audioVideoCallingEnabled});saveSettings(newSettings);},[settings]);const updateCallPermission=useCallback(value=>{const newSettings=Object.assign({},settings,{callPermission:value});saveSettings(newSettings);},[settings]);const toggleRelayCalls=useCallback(()=>{const newSettings=Object.assign({},settings,{alwaysRelayCalls:!settings.alwaysRelayCalls});saveSettings(newSettings);},[settings]);const toggleScreenshotProtection=useCallback(()=>{const newSettings=Object.assign({},settings,{screenshotProtection:!settings.screenshotProtection});saveSettings(newSettings);},[settings]);const resetToDefaults=useCallback(()=>{saveSettings(DEFAULT_MESSAGE_SETTINGS);},[]);return useMemo(()=>({settings,isLoading,updateMessageRequestsFrom,toggleAudioVideoCalling,updateCallPermission,toggleRelayCalls,toggleScreenshotProtection,resetToDefaults}),[settings,isLoading,updateMessageRequestsFrom,toggleAudioVideoCalling,updateCallPermission,toggleRelayCalls,toggleScreenshotProtection,resetToDefaults]);});","map":{"version":3,"names":["useState","useEffect","useMemo","useCallback","AsyncStorage","createContextHook","DEFAULT_MESSAGE_SETTINGS","STORAGE_KEY","MessageSettingsProvider","useMessageSettings","settings","setSettings","isLoading","setIsLoading","loadSettings","stored","getItem","parsed","JSON","parse","error","console","saveSettings","newSettings","setItem","stringify","updateMessageRequestsFrom","value","Object","assign","messageRequestsFrom","toggleAudioVideoCalling","audioVideoCallingEnabled","updateCallPermission","callPermission","toggleRelayCalls","alwaysRelayCalls","toggleScreenshotProtection","screenshotProtection","resetToDefaults"],"sources":["/home/user/rork-vibesync-458/hooks/message-settings-store.ts"],"sourcesContent":["import { useState, useEffect, useMemo, useCallback } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport createContextHook from '@nkzw/create-context-hook';\n\nimport {\n  MessageSettings,\n  DEFAULT_MESSAGE_SETTINGS,\n  MessageRequestFrom,\n  CallPermission,\n} from '@/types/message-settings';\n\nconst STORAGE_KEY = 'message-settings';\n\nexport const [MessageSettingsProvider, useMessageSettings] = createContextHook(() => {\n  const [settings, setSettings] = useState<MessageSettings>(DEFAULT_MESSAGE_SETTINGS);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    loadSettings();\n  }, []);\n\n  const loadSettings = async () => {\n    try {\n      const stored = await AsyncStorage.getItem(STORAGE_KEY);\n      if (stored) {\n        const parsed = JSON.parse(stored);\n        setSettings(parsed);\n      }\n    } catch (error) {\n      console.error('[MessageSettings] Error loading settings:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const saveSettings = async (newSettings: MessageSettings) => {\n    try {\n      await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(newSettings));\n      setSettings(newSettings);\n    } catch (error) {\n      console.error('[MessageSettings] Error saving settings:', error);\n    }\n  };\n\n  const updateMessageRequestsFrom = useCallback((value: MessageRequestFrom) => {\n    const newSettings = { ...settings, messageRequestsFrom: value };\n    saveSettings(newSettings);\n  }, [settings]);\n\n  const toggleAudioVideoCalling = useCallback(() => {\n    const newSettings = { ...settings, audioVideoCallingEnabled: !settings.audioVideoCallingEnabled };\n    saveSettings(newSettings);\n  }, [settings]);\n\n  const updateCallPermission = useCallback((value: CallPermission) => {\n    const newSettings = { ...settings, callPermission: value };\n    saveSettings(newSettings);\n  }, [settings]);\n\n  const toggleRelayCalls = useCallback(() => {\n    const newSettings = { ...settings, alwaysRelayCalls: !settings.alwaysRelayCalls };\n    saveSettings(newSettings);\n  }, [settings]);\n\n  const toggleScreenshotProtection = useCallback(() => {\n    const newSettings = { ...settings, screenshotProtection: !settings.screenshotProtection };\n    saveSettings(newSettings);\n  }, [settings]);\n\n  const resetToDefaults = useCallback(() => {\n    saveSettings(DEFAULT_MESSAGE_SETTINGS);\n  }, []);\n\n  return useMemo(() => ({\n    settings,\n    isLoading,\n    updateMessageRequestsFrom,\n    toggleAudioVideoCalling,\n    updateCallPermission,\n    toggleRelayCalls,\n    toggleScreenshotProtection,\n    resetToDefaults,\n  }), [\n    settings,\n    isLoading,\n    updateMessageRequestsFrom,\n    toggleAudioVideoCalling,\n    updateCallPermission,\n    toggleRelayCalls,\n    toggleScreenshotProtection,\n    resetToDefaults,\n  ]);\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}