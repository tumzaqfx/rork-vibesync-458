{"ast":null,"code":"import{CodedError}from'expo-modules-core';import{getContext}from'../utils.web';const clamp=(value,max)=>Math.max(0,Math.min(max,value));export default(canvas,options)=>{let{originX=0,originY=0,width=0,height=0}=options;width=clamp(width,canvas.width);height=clamp(height,canvas.height);originX=clamp(originX,canvas.width);originY=clamp(originY,canvas.height);width=Math.min(originX+width,canvas.width)-originX;height=Math.min(originY+height,canvas.height)-originY;if(width===0||height===0){throw new CodedError('ERR_IMAGE_MANIPULATOR_CROP','Crop size must be greater than 0: '+JSON.stringify(options,null,2));}const result=document.createElement('canvas');result.width=width;result.height=height;const context=getContext(result);context.drawImage(canvas,originX,originY,width,height,0,0,width,height);return result;};","map":{"version":3,"names":["CodedError","getContext","clamp","value","max","Math","min","canvas","options","originX","originY","width","height","JSON","stringify","result","document","createElement","context","drawImage"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-image-manipulator/src/web/actions/CropAction.web.ts"],"sourcesContent":["import { CodedError } from 'expo-modules-core';\n\nimport { ActionCrop } from '../../ImageManipulator.types';\nimport { getContext } from '../utils.web';\n\nconst clamp = (value: number, max: number): number => Math.max(0, Math.min(max, value));\n\nexport default (canvas: HTMLCanvasElement, options: ActionCrop['crop']) => {\n  // ensure values are defined.\n  let { originX = 0, originY = 0, width = 0, height = 0 } = options;\n  // lock within bounds.\n  width = clamp(width, canvas.width);\n  height = clamp(height, canvas.height);\n  originX = clamp(originX, canvas.width);\n  originY = clamp(originY, canvas.height);\n\n  // lock sum of crop.\n  width = Math.min(originX + width, canvas.width) - originX;\n  height = Math.min(originY + height, canvas.height) - originY;\n\n  if (width === 0 || height === 0) {\n    throw new CodedError(\n      'ERR_IMAGE_MANIPULATOR_CROP',\n      'Crop size must be greater than 0: ' + JSON.stringify(options, null, 2)\n    );\n  }\n\n  const result = document.createElement('canvas');\n  result.width = width;\n  result.height = height;\n\n  const context = getContext(result);\n  context.drawImage(canvas, originX, originY, width, height, 0, 0, width, height);\n\n  return result;\n};\n"],"mappings":"AAAA,OAASA,UAAU,KAAQ,mBAAmB,CAG9C,OAASC,UAAU,KAAQ,cAAc,CAEzC,KAAM,CAAAC,KAAK,CAAGA,CAACC,KAAa,CAAEC,GAAW,GAAaC,IAAI,CAACD,GAAG,CAAC,CAAC,CAAEC,IAAI,CAACC,GAAG,CAACF,GAAG,CAAED,KAAK,CAAC,CAAC,CAEvF,cAAe,CAACI,MAAyB,CAAEC,OAA2B,GAAK,CAEzE,GAAI,CAAEC,OAAO,CAAG,CAAC,CAAEC,OAAO,CAAG,CAAC,CAAEC,KAAK,CAAG,CAAC,CAAEC,MAAM,CAAG,CAAE,CAAC,CAAGJ,OAAO,CAEjEG,KAAK,CAAGT,KAAK,CAACS,KAAK,CAAEJ,MAAM,CAACI,KAAK,CAAC,CAClCC,MAAM,CAAGV,KAAK,CAACU,MAAM,CAAEL,MAAM,CAACK,MAAM,CAAC,CACrCH,OAAO,CAAGP,KAAK,CAACO,OAAO,CAAEF,MAAM,CAACI,KAAK,CAAC,CACtCD,OAAO,CAAGR,KAAK,CAACQ,OAAO,CAAEH,MAAM,CAACK,MAAM,CAAC,CAGvCD,KAAK,CAAGN,IAAI,CAACC,GAAG,CAACG,OAAO,CAAGE,KAAK,CAAEJ,MAAM,CAACI,KAAK,CAAC,CAAGF,OAAO,CACzDG,MAAM,CAAGP,IAAI,CAACC,GAAG,CAACI,OAAO,CAAGE,MAAM,CAAEL,MAAM,CAACK,MAAM,CAAC,CAAGF,OAAO,CAE5D,GAAIC,KAAK,GAAK,CAAC,EAAIC,MAAM,GAAK,CAAC,CAAE,CAC/B,KAAM,IAAI,CAAAZ,UAAU,CAClB,4BAA4B,CAC5B,oCAAoC,CAAGa,IAAI,CAACC,SAAS,CAACN,OAAO,CAAE,IAAI,CAAE,CAAC,CACxE,CAAC,CACH,CAEA,KAAM,CAAAO,MAAM,CAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAC/CF,MAAM,CAACJ,KAAK,CAAGA,KAAK,CACpBI,MAAM,CAACH,MAAM,CAAGA,MAAM,CAEtB,KAAM,CAAAM,OAAO,CAAGjB,UAAU,CAACc,MAAM,CAAC,CAClCG,OAAO,CAACC,SAAS,CAACZ,MAAM,CAAEE,OAAO,CAAEC,OAAO,CAAEC,KAAK,CAAEC,MAAM,CAAE,CAAC,CAAE,CAAC,CAAED,KAAK,CAAEC,MAAM,CAAC,CAE/E,MAAO,CAAAG,MAAM,CACf,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}