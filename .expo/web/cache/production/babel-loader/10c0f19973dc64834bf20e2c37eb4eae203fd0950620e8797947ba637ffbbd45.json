{"ast":null,"code":"export let NotificationFeedbackType=function(NotificationFeedbackType){NotificationFeedbackType[\"Success\"]=\"success\";NotificationFeedbackType[\"Warning\"]=\"warning\";NotificationFeedbackType[\"Error\"]=\"error\";return NotificationFeedbackType;}({});export let ImpactFeedbackStyle=function(ImpactFeedbackStyle){ImpactFeedbackStyle[\"Light\"]=\"light\";ImpactFeedbackStyle[\"Medium\"]=\"medium\";ImpactFeedbackStyle[\"Heavy\"]=\"heavy\";ImpactFeedbackStyle[\"Soft\"]=\"soft\";ImpactFeedbackStyle[\"Rigid\"]=\"rigid\";return ImpactFeedbackStyle;}({});export let AndroidHaptics=function(AndroidHaptics){AndroidHaptics[\"Confirm\"]=\"confirm\";AndroidHaptics[\"Reject\"]=\"reject\";AndroidHaptics[\"Gesture_Start\"]=\"gesture-start\";AndroidHaptics[\"Gesture_End\"]=\"gesture-end\";AndroidHaptics[\"Toggle_On\"]=\"toggle-on\";AndroidHaptics[\"Toggle_Off\"]=\"toggle-off\";AndroidHaptics[\"Clock_Tick\"]=\"clock-tick\";AndroidHaptics[\"Context_Click\"]=\"context-click\";AndroidHaptics[\"Drag_Start\"]=\"drag-start\";AndroidHaptics[\"Keyboard_Tap\"]=\"keyboard-tap\";AndroidHaptics[\"Keyboard_Press\"]=\"keyboard-press\";AndroidHaptics[\"Keyboard_Release\"]=\"keyboard-release\";AndroidHaptics[\"Long_Press\"]=\"long-press\";AndroidHaptics[\"Virtual_Key\"]=\"virtual-key\";AndroidHaptics[\"Virtual_Key_Release\"]=\"virtual-key-release\";AndroidHaptics[\"No_Haptics\"]=\"no-haptics\";AndroidHaptics[\"Segment_Tick\"]=\"segment-tick\";AndroidHaptics[\"Segment_Frequent_Tick\"]=\"segment-frequent-tick\";AndroidHaptics[\"Text_Handle_Move\"]=\"text-handle-move\";return AndroidHaptics;}({});","map":{"version":3,"names":["NotificationFeedbackType","ImpactFeedbackStyle","AndroidHaptics"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-haptics/src/Haptics.types.ts"],"sourcesContent":["// @needsAudit\n/**\n * The type of notification feedback generated by a `UINotificationFeedbackGenerator` object.\n * [`UINotificationFeedbackType`](https://developer.apple.com/documentation/uikit/uinotificationfeedbackgenerator/feedbacktype).\n */\nexport enum NotificationFeedbackType {\n  /**\n   * A notification feedback type indicating that a task has completed successfully.\n   */\n  Success = 'success',\n  /**\n   * A notification feedback type indicating that a task has produced a warning.\n   */\n  Warning = 'warning',\n  /**\n   * A notification feedback type indicating that a task has failed.\n   */\n  Error = 'error',\n}\n\n// @needsAudit\n/**\n * The mass of the objects in the collision simulated by a `UIImpactFeedbackGenerator` object\n * [`UINotificationFeedbackStyle`](https://developer.apple.com/documentation/uikit/uiimpactfeedbackgenerator/feedbackstyle).\n */\nexport enum ImpactFeedbackStyle {\n  /**\n   * A collision between small, light user interface elements.\n   */\n  Light = 'light',\n  /**\n   * A collision between moderately sized user interface elements.\n   */\n  Medium = 'medium',\n  /**\n   * A collision between large, heavy user interface elements.\n   */\n  Heavy = 'heavy',\n  /**\n   * A collision between user interface elements that are soft, exhibiting a large amount of compression or elasticity.\n   */\n  Soft = 'soft',\n  /**\n   * A collision between user interface elements that are rigid, exhibiting a small amount of compression or elasticity.\n   */\n  Rigid = 'rigid',\n}\n\n/**\n * @platform android\n */\nexport enum AndroidHaptics {\n  /**\n   * A haptic effect to signal the confirmation or successful completion of a user interaction.\n   */\n  Confirm = 'confirm',\n  /**\n   * A haptic effect to signal the rejection or failure of a user interaction.\n   */\n  Reject = 'reject',\n  /**\n   * The user has started a gesture (for example, on the soft keyboard).\n   */\n  Gesture_Start = 'gesture-start',\n  /**\n   * The user has finished a gesture (for example, on the soft keyboard).\n   */\n  Gesture_End = 'gesture-end',\n  /**\n   * The user has toggled a switch or button into the on position.\n   */\n  Toggle_On = 'toggle-on',\n  /**\n   * The user has toggled a switch or button into the off position.\n   */\n  Toggle_Off = 'toggle-off',\n  /**\n   * The user has pressed either an hour or minute tick of a Clock.\n   */\n  Clock_Tick = 'clock-tick',\n  /**\n   * The user has performed a context click on an object.\n   */\n  Context_Click = 'context-click',\n  /**\n   * The user has started a drag-and-drop gesture. The drag target has just been \"picked up\".\n   */\n  Drag_Start = 'drag-start',\n  /**\n   * The user has pressed a soft keyboard key.\n   */\n  Keyboard_Tap = 'keyboard-tap',\n  /**\n   * The user has pressed a virtual or software keyboard key.\n   */\n  Keyboard_Press = 'keyboard-press',\n  /**\n   * The user has released a virtual keyboard key.\n   */\n  Keyboard_Release = 'keyboard-release',\n  /**\n   * The user has performed a long press on an object that results in an action being performed.\n   */\n  Long_Press = 'long-press',\n  /**\n   * The user has pressed on a virtual on-screen key.\n   */\n  Virtual_Key = 'virtual-key',\n  /**\n   * The user has released a virtual key.\n   */\n  Virtual_Key_Release = 'virtual-key-release',\n  /**\n   * No haptic feedback should be performed.\n   */\n  No_Haptics = 'no-haptics',\n  /**\n   * The user is switching between a series of potential choices. For example, items in a list or discrete points on a slider.\n   */\n  Segment_Tick = 'segment-tick',\n  /**\n   * The user is switching between a series of many potential choices. For example, minutes on a clock face or individual percentages.\n   * This constant is expected to be very soft, so as not to be uncomfortable when performed a lot in quick succession.\n   * If the device can't make a suitably soft vibration, then it may not make any vibration.\n   */\n  Segment_Frequent_Tick = 'segment-frequent-tick',\n  /**\n   * The user has performed a selection/insertion handle move on text field.\n   */\n  Text_Handle_Move = 'text-handle-move',\n}\n"],"mappings":"AAKA,UAAY,CAAAA,wBAAwB,UAAxBA,wBAAwB,EAAxBA,wBAAwB,sBAAxBA,wBAAwB,sBAAxBA,wBAAwB,wBAAxB,CAAAA,wBAAwB,OAoBpC,UAAY,CAAAC,mBAAmB,UAAnBA,mBAAmB,EAAnBA,mBAAmB,kBAAnBA,mBAAmB,oBAAnBA,mBAAmB,kBAAnBA,mBAAmB,gBAAnBA,mBAAmB,wBAAnB,CAAAA,mBAAmB,OA0B/B,UAAY,CAAAC,cAAc,UAAdA,cAAc,EAAdA,cAAc,sBAAdA,cAAc,oBAAdA,cAAc,kCAAdA,cAAc,8BAAdA,cAAc,0BAAdA,cAAc,4BAAdA,cAAc,4BAAdA,cAAc,kCAAdA,cAAc,4BAAdA,cAAc,gCAAdA,cAAc,oCAAdA,cAAc,wCAAdA,cAAc,4BAAdA,cAAc,8BAAdA,cAAc,8CAAdA,cAAc,4BAAdA,cAAc,gCAAdA,cAAc,kDAAdA,cAAc,8CAAd,CAAAA,cAAc","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}