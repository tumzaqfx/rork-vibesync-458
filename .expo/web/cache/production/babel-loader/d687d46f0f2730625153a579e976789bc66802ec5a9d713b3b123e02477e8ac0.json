{"ast":null,"code":"\"use strict\";import*as React from'react';import{NavigationBuilderContext}from\"./NavigationBuilderContext.js\";import{NavigationRouteContext}from\"./NavigationRouteContext.js\";const VISITED_ROUTE_KEYS=Symbol('VISITED_ROUTE_KEYS');export const shouldPreventRemove=(emitter,beforeRemoveListeners,currentRoutes,nextRoutes,action)=>{const nextRouteKeys=nextRoutes.map(route=>route.key);const removedRoutes=currentRoutes.filter(route=>!nextRouteKeys.includes(route.key)).reverse();const visitedRouteKeys=action[VISITED_ROUTE_KEYS]??new Set();const beforeRemoveAction=Object.assign({},action,{[VISITED_ROUTE_KEYS]:visitedRouteKeys});for(const route of removedRoutes){if(visitedRouteKeys.has(route.key)){continue;}const isPrevented=beforeRemoveListeners[route.key]?.(beforeRemoveAction);if(isPrevented){return true;}visitedRouteKeys.add(route.key);const event=emitter.emit({type:'beforeRemove',target:route.key,data:{action:beforeRemoveAction},canPreventDefault:true});if(event.defaultPrevented){return true;}}return false;};export function useOnPreventRemove({getState,emitter,beforeRemoveListeners}){const{addKeyedListener}=React.useContext(NavigationBuilderContext);const route=React.useContext(NavigationRouteContext);const routeKey=route?.key;React.useEffect(()=>{if(routeKey){return addKeyedListener?.('beforeRemove',routeKey,action=>{const state=getState();return shouldPreventRemove(emitter,beforeRemoveListeners,state.routes,[],action);});}},[addKeyedListener,beforeRemoveListeners,emitter,getState,routeKey]);}","map":{"version":3,"names":["React","NavigationBuilderContext","NavigationRouteContext","VISITED_ROUTE_KEYS","Symbol","shouldPreventRemove","emitter","beforeRemoveListeners","currentRoutes","nextRoutes","action","nextRouteKeys","map","route","key","removedRoutes","filter","includes","reverse","visitedRouteKeys","Set","beforeRemoveAction","Object","assign","has","isPrevented","add","event","emit","type","target","data","canPreventDefault","defaultPrevented","useOnPreventRemove","getState","addKeyedListener","useContext","routeKey","useEffect","state","routes"],"sources":["/home/user/rork-vibesync-458/node_modules/@react-navigation/core/src/useOnPreventRemove.tsx"],"sourcesContent":["import type {\n  NavigationAction,\n  NavigationState,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport {\n  type ChildBeforeRemoveListener,\n  NavigationBuilderContext,\n} from './NavigationBuilderContext';\nimport { NavigationRouteContext } from './NavigationRouteContext';\nimport type { EventMapCore } from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\ntype Options = {\n  getState: () => NavigationState;\n  emitter: NavigationEventEmitter<EventMapCore<any>>;\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>;\n};\n\nconst VISITED_ROUTE_KEYS = Symbol('VISITED_ROUTE_KEYS');\n\nexport const shouldPreventRemove = (\n  emitter: NavigationEventEmitter<EventMapCore<any>>,\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>,\n  currentRoutes: { key: string }[],\n  nextRoutes: { key?: string | undefined }[],\n  action: NavigationAction\n) => {\n  const nextRouteKeys = nextRoutes.map((route) => route.key);\n\n  // Call these in reverse order so last screens handle the event first\n  const removedRoutes = currentRoutes\n    .filter((route) => !nextRouteKeys.includes(route.key))\n    .reverse();\n\n  const visitedRouteKeys: Set<string> =\n    // @ts-expect-error: add this property to mark that we've already emitted this action\n    action[VISITED_ROUTE_KEYS] ?? new Set<string>();\n\n  const beforeRemoveAction = {\n    ...action,\n    [VISITED_ROUTE_KEYS]: visitedRouteKeys,\n  };\n\n  for (const route of removedRoutes) {\n    if (visitedRouteKeys.has(route.key)) {\n      // Skip if we've already emitted this action for this screen\n      continue;\n    }\n\n    // First, we need to check if any child screens want to prevent it\n    const isPrevented = beforeRemoveListeners[route.key]?.(beforeRemoveAction);\n\n    if (isPrevented) {\n      return true;\n    }\n\n    visitedRouteKeys.add(route.key);\n\n    const event = emitter.emit({\n      type: 'beforeRemove',\n      target: route.key,\n      data: { action: beforeRemoveAction },\n      canPreventDefault: true,\n    });\n\n    if (event.defaultPrevented) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport function useOnPreventRemove({\n  getState,\n  emitter,\n  beforeRemoveListeners,\n}: Options) {\n  const { addKeyedListener } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const routeKey = route?.key;\n\n  React.useEffect(() => {\n    if (routeKey) {\n      return addKeyedListener?.('beforeRemove', routeKey, (action) => {\n        const state = getState();\n\n        return shouldPreventRemove(\n          emitter,\n          beforeRemoveListeners,\n          state.routes,\n          [],\n          action\n        );\n      });\n    }\n  }, [addKeyedListener, beforeRemoveListeners, emitter, getState, routeKey]);\n}\n"],"mappings":"aAIA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAE9B,OAEEC,wBAAwB,KACnB,+BAA4B,CACnC,OAASC,sBAAsB,KAAQ,6BAA0B,CAUjE,KAAM,CAAAC,kBAAkB,CAAGC,MAAM,CAAC,oBAAoB,CAAC,CAEvD,MAAO,MAAM,CAAAC,mBAAmB,CAAGA,CACjCC,OAAkD,CAClDC,qBAA4E,CAC5EC,aAAgC,CAChCC,UAA0C,CAC1CC,MAAwB,GACrB,CACH,KAAM,CAAAC,aAAa,CAAGF,UAAU,CAACG,GAAG,CAAEC,KAAK,EAAKA,KAAK,CAACC,GAAG,CAAC,CAG1D,KAAM,CAAAC,aAAa,CAAGP,aAAa,CAChCQ,MAAM,CAAEH,KAAK,EAAK,CAACF,aAAa,CAACM,QAAQ,CAACJ,KAAK,CAACC,GAAG,CAAC,CAAC,CACrDI,OAAO,CAAC,CAAC,CAEZ,KAAM,CAAAC,gBAA6B,CAEjCT,MAAM,CAACP,kBAAkB,CAAC,EAAI,GAAI,CAAAiB,GAAG,CAAS,CAAC,CAEjD,KAAM,CAAAC,kBAAkB,CAAAC,MAAA,CAAAC,MAAA,IACnBb,MAAM,EACT,CAACP,kBAAkB,EAAGgB,gBAAA,EACvB,CAED,IAAK,KAAM,CAAAN,KAAK,GAAI,CAAAE,aAAa,CAAE,CACjC,GAAII,gBAAgB,CAACK,GAAG,CAACX,KAAK,CAACC,GAAG,CAAC,CAAE,CAEnC,SACF,CAGA,KAAM,CAAAW,WAAW,CAAGlB,qBAAqB,CAACM,KAAK,CAACC,GAAG,CAAC,GAAGO,kBAAkB,CAAC,CAE1E,GAAII,WAAW,CAAE,CACf,MAAO,KAAI,CACb,CAEAN,gBAAgB,CAACO,GAAG,CAACb,KAAK,CAACC,GAAG,CAAC,CAE/B,KAAM,CAAAa,KAAK,CAAGrB,OAAO,CAACsB,IAAI,CAAC,CACzBC,IAAI,CAAE,cAAc,CACpBC,MAAM,CAAEjB,KAAK,CAACC,GAAG,CACjBiB,IAAI,CAAE,CAAErB,MAAM,CAAEW,kBAAmB,CAAC,CACpCW,iBAAiB,CAAE,IACrB,CAAC,CAAC,CAEF,GAAIL,KAAK,CAACM,gBAAgB,CAAE,CAC1B,MAAO,KAAI,CACb,CACF,CAEA,MAAO,MAAK,CACd,CAAC,CAED,MAAO,SAAS,CAAAC,kBAAkBA,CAAC,CACjCC,QAAQ,CACR7B,OAAO,CACPC,qBACO,CAAC,CAAE,CACV,KAAM,CAAE6B,gBAAiB,CAAC,CAAGpC,KAAK,CAACqC,UAAU,CAACpC,wBAAwB,CAAC,CACvE,KAAM,CAAAY,KAAK,CAAGb,KAAK,CAACqC,UAAU,CAACnC,sBAAsB,CAAC,CACtD,KAAM,CAAAoC,QAAQ,CAAGzB,KAAK,EAAEC,GAAG,CAE3Bd,KAAK,CAACuC,SAAS,CAAC,IAAM,CACpB,GAAID,QAAQ,CAAE,CACZ,MAAO,CAAAF,gBAAgB,GAAG,cAAc,CAAEE,QAAQ,CAAG5B,MAAM,EAAK,CAC9D,KAAM,CAAA8B,KAAK,CAAGL,QAAQ,CAAC,CAAC,CAExB,MAAO,CAAA9B,mBAAmB,CACxBC,OAAO,CACPC,qBAAqB,CACrBiC,KAAK,CAACC,MAAM,CACZ,EAAE,CACF/B,MACF,CAAC,CACH,CAAC,CAAC,CACJ,CACF,CAAC,CAAE,CAAC0B,gBAAgB,CAAE7B,qBAAqB,CAAED,OAAO,CAAE6B,QAAQ,CAAEG,QAAQ,CAAC,CAAC,CAC5E","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}