{"ast":null,"code":"'use strict';import{useEffect,useRef}from'react';import FrameCallbackRegistryJS from\"../frameCallback/FrameCallbackRegistryJS.js\";const frameCallbackRegistry=new FrameCallbackRegistryJS();export function useFrameCallback(callback,autostart=true){const ref=useRef({setActive:isActive=>{frameCallbackRegistry.manageStateFrameCallback(ref.current.callbackId,isActive);ref.current.isActive=isActive;},isActive:autostart,callbackId:-1});useEffect(()=>{ref.current.callbackId=frameCallbackRegistry.registerFrameCallback(callback);const memoizedFrameCallback=ref.current;ref.current.setActive(ref.current.isActive);return()=>{frameCallbackRegistry.unregisterFrameCallback(memoizedFrameCallback.callbackId);memoizedFrameCallback.callbackId=-1;};},[callback,autostart]);return ref.current;}","map":{"version":3,"names":["useEffect","useRef","FrameCallbackRegistryJS","frameCallbackRegistry","useFrameCallback","callback","autostart","ref","setActive","isActive","manageStateFrameCallback","current","callbackId","registerFrameCallback","memoizedFrameCallback","unregisterFrameCallback"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/hook/useFrameCallback.ts"],"sourcesContent":["'use strict';\nimport { useEffect, useRef } from 'react';\nimport FrameCallbackRegistryJS from '../frameCallback/FrameCallbackRegistryJS';\nimport type { FrameInfo } from '../frameCallback/FrameCallbackRegistryUI';\n\n/**\n * @param setActive - A function that lets you start the frame callback or stop\n *   it from running.\n * @param isActive - A boolean indicating whether a callback is running.\n * @param callbackId - A number indicating a unique identifier of the frame\n *   callback.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useFrameCallback#returns\n */\nexport type FrameCallback = {\n  setActive: (isActive: boolean) => void;\n  isActive: boolean;\n  callbackId: number;\n};\nconst frameCallbackRegistry = new FrameCallbackRegistryJS();\n\n/**\n * Lets you run a function on every frame update.\n *\n * @param callback - A function executed on every frame update.\n * @param autostart - Whether the callback should start automatically. Defaults\n *   to `true`.\n * @returns A frame callback object - {@link FrameCallback}.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useFrameCallback\n */\nexport function useFrameCallback(\n  callback: (frameInfo: FrameInfo) => void,\n  autostart = true\n): FrameCallback {\n  const ref = useRef<FrameCallback>({\n    setActive: (isActive: boolean) => {\n      frameCallbackRegistry.manageStateFrameCallback(\n        ref.current.callbackId,\n        isActive\n      );\n      ref.current.isActive = isActive;\n    },\n    isActive: autostart,\n    callbackId: -1,\n  });\n\n  useEffect(() => {\n    ref.current.callbackId =\n      frameCallbackRegistry.registerFrameCallback(callback);\n    const memoizedFrameCallback = ref.current;\n    ref.current.setActive(ref.current.isActive);\n\n    return () => {\n      frameCallbackRegistry.unregisterFrameCallback(\n        memoizedFrameCallback.callbackId\n      );\n      memoizedFrameCallback.callbackId = -1;\n    };\n  }, [callback, autostart]);\n\n  return ref.current;\n}\n"],"mappings":"AAAA,YAAY,CACZ,OAASA,SAAS,CAAEC,MAAM,KAAQ,OAAO,CACzC,MAAO,CAAAC,uBAAuB,KAAM,6CAA0C,CAgB9E,KAAM,CAAAC,qBAAqB,CAAG,GAAI,CAAAD,uBAAuB,CAAC,CAAC,CAW3D,MAAO,SAAS,CAAAE,gBAAgBA,CAC9BC,QAAwC,CACxCC,SAAS,CAAG,IAAI,CACD,CACf,KAAM,CAAAC,GAAG,CAAGN,MAAM,CAAgB,CAChCO,SAAS,CAAGC,QAAiB,EAAK,CAChCN,qBAAqB,CAACO,wBAAwB,CAC5CH,GAAG,CAACI,OAAO,CAACC,UAAU,CACtBH,QACF,CAAC,CACDF,GAAG,CAACI,OAAO,CAACF,QAAQ,CAAGA,QAAQ,CACjC,CAAC,CACDA,QAAQ,CAAEH,SAAS,CACnBM,UAAU,CAAE,CAAC,CACf,CAAC,CAAC,CAEFZ,SAAS,CAAC,IAAM,CACdO,GAAG,CAACI,OAAO,CAACC,UAAU,CACpBT,qBAAqB,CAACU,qBAAqB,CAACR,QAAQ,CAAC,CACvD,KAAM,CAAAS,qBAAqB,CAAGP,GAAG,CAACI,OAAO,CACzCJ,GAAG,CAACI,OAAO,CAACH,SAAS,CAACD,GAAG,CAACI,OAAO,CAACF,QAAQ,CAAC,CAE3C,MAAO,IAAM,CACXN,qBAAqB,CAACY,uBAAuB,CAC3CD,qBAAqB,CAACF,UACxB,CAAC,CACDE,qBAAqB,CAACF,UAAU,CAAG,CAAC,CAAC,CACvC,CAAC,CACH,CAAC,CAAE,CAACP,QAAQ,CAAEC,SAAS,CAAC,CAAC,CAEzB,MAAO,CAAAC,GAAG,CAACI,OAAO,CACpB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}