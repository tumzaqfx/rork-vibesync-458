{"ast":null,"code":"import{useEffect,useState,useMemo}from'react';import decode from'./decode';import{isBlurhashString}from'../resolveSources';const DEFAULT_SIZE={width:32,height:32};const scaleRatio=10;export function useBlurhash(blurhash,punch=1){punch=punch||1;const[uri,setUri]=useState(null);const isBlurhash=(blurhash?.uri&&isBlurhashString(blurhash.uri))??false;useEffect(()=>{let isCanceled=false;if(!blurhash||!blurhash.uri||!isBlurhash){return;}const strippedBlurhashString=blurhash.uri.replace(/blurhash:\\//,'');const pixels=decode(strippedBlurhashString,blurhash.width??DEFAULT_SIZE.width,blurhash.height??DEFAULT_SIZE.height,punch);const canvas=document.createElement('canvas');const upscaledCanvas=document.createElement('canvas');canvas.width=blurhash.width??DEFAULT_SIZE.width;canvas.height=blurhash.height??DEFAULT_SIZE.height;upscaledCanvas.width=(blurhash.width??DEFAULT_SIZE.width)*scaleRatio;upscaledCanvas.height=(blurhash.height??DEFAULT_SIZE.height)*scaleRatio;const context=canvas.getContext('2d');if(!context){console.warn('Failed to decode blurhash');return;}const imageData=context.createImageData(canvas.width,canvas.height);imageData.data.set(pixels);context.putImageData(imageData,0,0);const upscaledContext=upscaledCanvas.getContext('2d');if(!upscaledContext){console.warn('Failed to decode blurhash');return;}upscaledContext.scale(scaleRatio,scaleRatio);upscaledContext.drawImage(canvas,0,0);upscaledCanvas.toBlob(blob=>{if(!isCanceled){setUri(oldUrl=>{if(oldUrl){URL.revokeObjectURL(oldUrl);}return blob?URL.createObjectURL(blob):oldUrl;});}});return function cleanupBlurhash(){isCanceled=true;setUri(oldUrl=>{if(oldUrl){URL.revokeObjectURL(oldUrl);}return null;});};},[blurhash?.uri,blurhash?.height,blurhash?.width,punch,isBlurhash]);const source=useMemo(()=>uri?{uri}:null,[uri]);return[source,isBlurhash];}","map":{"version":3,"names":["useEffect","useState","useMemo","decode","isBlurhashString","DEFAULT_SIZE","width","height","scaleRatio","useBlurhash","blurhash","punch","uri","setUri","isBlurhash","isCanceled","strippedBlurhashString","replace","pixels","canvas","document","createElement","upscaledCanvas","context","getContext","console","warn","imageData","createImageData","data","set","putImageData","upscaledContext","scale","drawImage","toBlob","blob","oldUrl","URL","revokeObjectURL","createObjectURL","cleanupBlurhash","source"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-image/src/utils/blurhash/useBlurhash.tsx"],"sourcesContent":["// adapted from https://gist.github.com/ngbrown/d62eb518753378eb0a9bf02bb4723235\n// modified from https://gist.github.com/WorldMaker/a3cbe0059acd827edee568198376b95a\n// https://github.com/woltapp/react-blurhash/issues/3\n\nimport { useEffect, useState, useMemo } from 'react';\n\nimport decode from './decode';\nimport { isBlurhashString } from '../resolveSources';\n\nconst DEFAULT_SIZE = {\n  width: 32,\n  height: 32,\n};\n\n// We scale up the canvas to avoid an irritating visual glitch when animating in Chrome.\nconst scaleRatio = 10;\n\nexport function useBlurhash(\n  blurhash: { uri?: string; width?: number | null; height?: number | null } | undefined | null,\n  punch: number = 1\n) {\n  punch = punch || 1;\n\n  const [uri, setUri] = useState<string | null>(null);\n  const isBlurhash = (blurhash?.uri && isBlurhashString(blurhash.uri)) ?? false;\n  useEffect(() => {\n    let isCanceled = false;\n\n    if (!blurhash || !blurhash.uri || !isBlurhash) {\n      return;\n    }\n    const strippedBlurhashString = blurhash.uri.replace(/blurhash:\\//, '');\n\n    const pixels = decode(\n      strippedBlurhashString,\n      blurhash.width ?? DEFAULT_SIZE.width,\n      blurhash.height ?? DEFAULT_SIZE.height,\n      punch\n    );\n\n    const canvas = document.createElement('canvas');\n    const upscaledCanvas = document.createElement('canvas');\n    canvas.width = blurhash.width ?? DEFAULT_SIZE.width;\n    canvas.height = blurhash.height ?? DEFAULT_SIZE.height;\n    upscaledCanvas.width = (blurhash.width ?? DEFAULT_SIZE.width) * scaleRatio;\n    upscaledCanvas.height = (blurhash.height ?? DEFAULT_SIZE.height) * scaleRatio;\n    const context = canvas.getContext('2d');\n    if (!context) {\n      console.warn('Failed to decode blurhash');\n      return;\n    }\n    const imageData = context.createImageData(canvas.width, canvas.height);\n    imageData.data.set(pixels);\n    context.putImageData(imageData, 0, 0);\n    const upscaledContext = upscaledCanvas.getContext('2d');\n    if (!upscaledContext) {\n      console.warn('Failed to decode blurhash');\n      return;\n    }\n    upscaledContext.scale(scaleRatio, scaleRatio);\n    upscaledContext.drawImage(canvas, 0, 0);\n    upscaledCanvas.toBlob((blob) => {\n      if (!isCanceled) {\n        setUri((oldUrl) => {\n          if (oldUrl) {\n            URL.revokeObjectURL(oldUrl);\n          }\n          return blob ? URL.createObjectURL(blob) : oldUrl;\n        });\n      }\n    });\n\n    return function cleanupBlurhash() {\n      isCanceled = true;\n      setUri((oldUrl) => {\n        if (oldUrl) {\n          URL.revokeObjectURL(oldUrl);\n        }\n        return null;\n      });\n    };\n  }, [blurhash?.uri, blurhash?.height, blurhash?.width, punch, isBlurhash]);\n  const source = useMemo(() => (uri ? { uri } : null), [uri]);\n  return [source, isBlurhash] as const;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}