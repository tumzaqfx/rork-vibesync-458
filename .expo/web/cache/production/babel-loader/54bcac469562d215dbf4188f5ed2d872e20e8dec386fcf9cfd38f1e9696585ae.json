{"ast":null,"code":"function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import CircularBuffer from'./CircularBuffer';import LeastSquareSolver from'./LeastSquareSolver';export default class VelocityTracker{constructor(){_defineProperty(this,\"assumePointerMoveStoppedMilliseconds\",40);_defineProperty(this,\"historySize\",20);_defineProperty(this,\"horizonMilliseconds\",300);_defineProperty(this,\"minSampleSize\",3);_defineProperty(this,\"samples\",void 0);this.samples=new CircularBuffer(this.historySize);}add(event){this.samples.push(event);}getVelocityEstimate(){const x=[];const y=[];const w=[];const time=[];let sampleCount=0;let index=this.samples.size-1;const newestSample=this.samples.get(index);if(!newestSample){return null;}let previousSample=newestSample;while(sampleCount<this.samples.size){const sample=this.samples.get(index);const age=newestSample.time-sample.time;const delta=Math.abs(sample.time-previousSample.time);previousSample=sample;if(age>this.horizonMilliseconds||delta>this.assumePointerMoveStoppedMilliseconds){break;}x.push(sample.x);y.push(sample.y);w.push(1);time.push(-age);sampleCount++;index--;}if(sampleCount>=this.minSampleSize){const xSolver=new LeastSquareSolver(time,x,w);const xFit=xSolver.solve(2);if(xFit!==null){const ySolver=new LeastSquareSolver(time,y,w);const yFit=ySolver.solve(2);if(yFit!==null){const xVelocity=xFit.coefficients[1]*1000;const yVelocity=yFit.coefficients[1]*1000;return[xVelocity,yVelocity];}}}return null;}get velocity(){const estimate=this.getVelocityEstimate();if(estimate!==null){return estimate;}return[0,0];}reset(){this.samples.clear();}}","map":{"version":3,"names":["CircularBuffer","LeastSquareSolver","VelocityTracker","constructor","_defineProperty","samples","historySize","add","event","push","getVelocityEstimate","x","y","w","time","sampleCount","index","size","newestSample","get","previousSample","sample","age","delta","Math","abs","horizonMilliseconds","assumePointerMoveStoppedMilliseconds","minSampleSize","xSolver","xFit","solve","ySolver","yFit","xVelocity","coefficients","yVelocity","velocity","estimate","reset","clear"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-gesture-handler/lib/module/web/tools/VelocityTracker.ts"],"sourcesContent":["import { AdaptedEvent } from '../interfaces';\nimport CircularBuffer from './CircularBuffer';\nimport LeastSquareSolver from './LeastSquareSolver';\n\nexport default class VelocityTracker {\n  private assumePointerMoveStoppedMilliseconds = 40;\n  private historySize = 20;\n  private horizonMilliseconds = 300;\n  private minSampleSize = 3;\n\n  private samples: CircularBuffer<AdaptedEvent>;\n\n  constructor() {\n    this.samples = new CircularBuffer<AdaptedEvent>(this.historySize);\n  }\n\n  public add(event: AdaptedEvent): void {\n    this.samples.push(event);\n  }\n\n  // Returns an estimate of the velocity of the object being tracked by the\n  // tracker given the current information available to the tracker.\n  //\n  // Information is added using [addPosition].\n  //\n  // Returns null if there is no data on which to base an estimate.\n  private getVelocityEstimate(): [number, number] | null {\n    const x = [];\n    const y = [];\n    const w = [];\n    const time = [];\n\n    let sampleCount = 0;\n    let index = this.samples.size - 1;\n    const newestSample = this.samples.get(index);\n    if (!newestSample) {\n      return null;\n    }\n\n    let previousSample = newestSample;\n\n    // Starting with the most recent PointAtTime sample, iterate backwards while\n    // the samples represent continuous motion.\n    while (sampleCount < this.samples.size) {\n      const sample = this.samples.get(index);\n\n      const age = newestSample.time - sample.time;\n      const delta = Math.abs(sample.time - previousSample.time);\n      previousSample = sample;\n\n      if (\n        age > this.horizonMilliseconds ||\n        delta > this.assumePointerMoveStoppedMilliseconds\n      ) {\n        break;\n      }\n\n      x.push(sample.x);\n      y.push(sample.y);\n      w.push(1);\n      time.push(-age);\n\n      sampleCount++;\n      index--;\n    }\n\n    if (sampleCount >= this.minSampleSize) {\n      const xSolver = new LeastSquareSolver(time, x, w);\n      const xFit = xSolver.solve(2);\n\n      if (xFit !== null) {\n        const ySolver = new LeastSquareSolver(time, y, w);\n        const yFit = ySolver.solve(2);\n\n        if (yFit !== null) {\n          const xVelocity = xFit.coefficients[1] * 1000;\n          const yVelocity = yFit.coefficients[1] * 1000;\n\n          return [xVelocity, yVelocity];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  public get velocity(): [number, number] {\n    const estimate = this.getVelocityEstimate();\n    if (estimate !== null) {\n      return estimate;\n    }\n    return [0, 0];\n  }\n\n  public reset(): void {\n    this.samples.clear();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}