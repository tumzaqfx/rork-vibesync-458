{"ast":null,"code":"'use strict';const _worklet_8092936786998_init_data={code:\"function valueSetter_reactNativeReanimated_valueSetterJs1(mutable,value,forceUpdate=false){const previousAnimation=mutable._animation;if(previousAnimation){previousAnimation.cancelled=true;mutable._animation=null;}if(typeof value==='function'||value!==null&&typeof value==='object'&&value.onFrame!==undefined){const animation=typeof value==='function'?value():value;if(mutable._value===animation.current&&!animation.isHigherOrder&&!forceUpdate){animation.callback&&animation.callback(true);return;}const initializeAnimation=function(timestamp){animation.onStart(animation,mutable.value,timestamp,previousAnimation);};const currentTimestamp=global.__frameTimestamp||global._getAnimationTimestamp();initializeAnimation(currentTimestamp);const step=function(newTimestamp){const timestamp=newTimestamp<(animation.timestamp||0)?animation.timestamp:newTimestamp;if(animation.cancelled){animation.callback&&animation.callback(false);return;}const finished=animation.onFrame(animation,timestamp);animation.finished=true;animation.timestamp=timestamp;mutable._value=animation.current;if(finished){animation.callback&&animation.callback(true);}else{requestAnimationFrame(step);}};mutable._animation=animation;step(currentTimestamp);}else{if(mutable._value===value&&!forceUpdate){return;}mutable._value=value;}}\"};export const valueSetter=function(){const valueSetter=function(mutable,value,forceUpdate=false){const previousAnimation=mutable._animation;if(previousAnimation){previousAnimation.cancelled=true;mutable._animation=null;}if(typeof value==='function'||value!==null&&typeof value==='object'&&value.onFrame!==undefined){const animation=typeof value==='function'?value():value;if(mutable._value===animation.current&&!animation.isHigherOrder&&!forceUpdate){animation.callback&&animation.callback(true);return;}const initializeAnimation=timestamp=>{animation.onStart(animation,mutable.value,timestamp,previousAnimation);};const currentTimestamp=global.__frameTimestamp||global._getAnimationTimestamp();initializeAnimation(currentTimestamp);const step=newTimestamp=>{const timestamp=newTimestamp<(animation.timestamp||0)?animation.timestamp:newTimestamp;if(animation.cancelled){animation.callback&&animation.callback(false);return;}const finished=animation.onFrame(animation,timestamp);animation.finished=true;animation.timestamp=timestamp;mutable._value=animation.current;if(finished){animation.callback&&animation.callback(true);}else{requestAnimationFrame(step);}};mutable._animation=animation;step(currentTimestamp);}else{if(mutable._value===value&&!forceUpdate){return;}mutable._value=value;}};valueSetter.__closure={};valueSetter.__workletHash=8092936786998;valueSetter.__initData=_worklet_8092936786998_init_data;return valueSetter;}();","map":{"version":3,"names":["_worklet_8092936786998_init_data","code","valueSetter","mutable","value","forceUpdate","previousAnimation","_animation","cancelled","onFrame","undefined","animation","_value","current","isHigherOrder","callback","initializeAnimation","timestamp","onStart","currentTimestamp","global","__frameTimestamp","_getAnimationTimestamp","step","newTimestamp","finished","requestAnimationFrame","__closure","__workletHash","__initData"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/valueSetter.ts"],"sourcesContent":["'use strict';\nimport type { AnimationObject, Mutable } from './commonTypes';\n\nexport function valueSetter<Value>(\n  mutable: Mutable<Value>,\n  value: Value,\n  forceUpdate = false\n): void {\n  'worklet';\n  const previousAnimation = mutable._animation;\n  if (previousAnimation) {\n    previousAnimation.cancelled = true;\n    mutable._animation = null;\n  }\n  if (\n    typeof value === 'function' ||\n    (value !== null &&\n      typeof value === 'object' &&\n      // TODO TYPESCRIPT fix this after fixing AnimationObject type\n      (value as unknown as AnimationObject).onFrame !== undefined)\n  ) {\n    const animation: AnimationObject<Value> =\n      typeof value === 'function'\n        ? // TODO TYPESCRIPT fix this after fixing AnimationObject type\n          (value as () => AnimationObject<Value>)()\n        : // TODO TYPESCRIPT fix this after fixing AnimationObject type\n          (value as unknown as AnimationObject<Value>);\n    // prevent setting again to the same value\n    // and triggering the mappers that treat this value as an input\n    // this happens when the animation's target value(stored in animation.current until animation.onStart is called) is set to the same value as a current one(this._value)\n    // built in animations that are not higher order(withTiming, withSpring) hold target value in .current\n    if (\n      mutable._value === animation.current &&\n      !animation.isHigherOrder &&\n      !forceUpdate\n    ) {\n      animation.callback && animation.callback(true);\n      return;\n    }\n    // animated set\n    const initializeAnimation = (timestamp: number) => {\n      animation.onStart(animation, mutable.value, timestamp, previousAnimation);\n    };\n    const currentTimestamp =\n      global.__frameTimestamp || global._getAnimationTimestamp();\n    initializeAnimation(currentTimestamp);\n\n    const step = (newTimestamp: number) => {\n      // Function `requestAnimationFrame` adds callback to an array, all the callbacks are flushed with function `__flushAnimationFrame`\n      // Usually we flush them inside function `nativeRequestAnimationFrame` and then the given timestamp is the timestamp of end of the current frame.\n      // However function `__flushAnimationFrame` may also be called inside `registerEventHandler` - then we get actual timestamp which is earlier than the end of the frame.\n\n      const timestamp =\n        newTimestamp < (animation.timestamp || 0)\n          ? animation.timestamp\n          : newTimestamp;\n\n      if (animation.cancelled) {\n        animation.callback && animation.callback(false /* finished */);\n        return;\n      }\n      const finished = animation.onFrame(animation, timestamp);\n      animation.finished = true;\n      animation.timestamp = timestamp;\n      // TODO TYPESCRIPT\n      // For now I'll assume that `animation.current` is always defined\n      // but actually need to dive into animations to understand it\n      mutable._value = animation.current!;\n      if (finished) {\n        animation.callback && animation.callback(true /* finished */);\n      } else {\n        requestAnimationFrame(step);\n      }\n    };\n\n    mutable._animation = animation;\n\n    step(currentTimestamp);\n  } else {\n    // prevent setting again to the same value\n    // and triggering the mappers that treat this value as an input\n    if (mutable._value === value && !forceUpdate) {\n      return;\n    }\n    mutable._value = value;\n  }\n}\n"],"mappings":"AAAA,YAAY,OAAAA,gCAAA,EAAAC,IAAA,yxCAGZ,aAAAC,WAAA,CAAO,iBAAAA,WAAA,SAAAA,CACLC,OAAuB,CACvBC,KAAY,CACZC,WAAW,CAAG,KAAK,CACb,CAEN,KAAM,CAAAC,iBAAiB,CAAGH,OAAO,CAACI,UAAU,CAC5C,GAAID,iBAAiB,CAAE,CACrBA,iBAAiB,CAACE,SAAS,CAAG,IAAI,CAClCL,OAAO,CAACI,UAAU,CAAG,IAAI,CAC3B,CACA,GACE,MAAO,CAAAH,KAAK,GAAK,UAAU,EAC1BA,KAAK,GAAK,IAAI,EACb,MAAO,CAAAA,KAAK,GAAK,QAAQ,EAExBA,KAAK,CAAgCK,OAAO,GAAKC,SAAU,CAC9D,CACA,KAAM,CAAAC,SAAiC,CACrC,MAAO,CAAAP,KAAK,GAAK,UAAU,CAEtBA,KAAK,CAAkC,CAAC,CAExCA,KAA2C,CAKlD,GACED,OAAO,CAACS,MAAM,GAAKD,SAAS,CAACE,OAAO,EACpC,CAACF,SAAS,CAACG,aAAa,EACxB,CAACT,WAAW,CACZ,CACAM,SAAS,CAACI,QAAQ,EAAIJ,SAAS,CAACI,QAAQ,CAAC,IAAI,CAAC,CAC9C,OACF,CAEA,KAAM,CAAAC,mBAAmB,CAAIC,SAAiB,EAAK,CACjDN,SAAS,CAACO,OAAO,CAACP,SAAS,CAAER,OAAO,CAACC,KAAK,CAAEa,SAAS,CAAEX,iBAAiB,CAAC,CAC3E,CAAC,CACD,KAAM,CAAAa,gBAAgB,CACpBC,MAAM,CAACC,gBAAgB,EAAID,MAAM,CAACE,sBAAsB,CAAC,CAAC,CAC5DN,mBAAmB,CAACG,gBAAgB,CAAC,CAErC,KAAM,CAAAI,IAAI,CAAIC,YAAoB,EAAK,CAKrC,KAAM,CAAAP,SAAS,CACbO,YAAY,EAAIb,SAAS,CAACM,SAAS,EAAI,CAAC,CAAC,CACrCN,SAAS,CAACM,SAAS,CACnBO,YAAY,CAElB,GAAIb,SAAS,CAACH,SAAS,CAAE,CACvBG,SAAS,CAACI,QAAQ,EAAIJ,SAAS,CAACI,QAAQ,CAAC,KAAoB,CAAC,CAC9D,OACF,CACA,KAAM,CAAAU,QAAQ,CAAGd,SAAS,CAACF,OAAO,CAACE,SAAS,CAAEM,SAAS,CAAC,CACxDN,SAAS,CAACc,QAAQ,CAAG,IAAI,CACzBd,SAAS,CAACM,SAAS,CAAGA,SAAS,CAI/Bd,OAAO,CAACS,MAAM,CAAGD,SAAS,CAACE,OAAQ,CACnC,GAAIY,QAAQ,CAAE,CACZd,SAAS,CAACI,QAAQ,EAAIJ,SAAS,CAACI,QAAQ,CAAC,IAAmB,CAAC,CAC/D,CAAC,IAAM,CACLW,qBAAqB,CAACH,IAAI,CAAC,CAC7B,CACF,CAAC,CAEDpB,OAAO,CAACI,UAAU,CAAGI,SAAS,CAE9BY,IAAI,CAACJ,gBAAgB,CAAC,CACxB,CAAC,IAAM,CAGL,GAAIhB,OAAO,CAACS,MAAM,GAAKR,KAAK,EAAI,CAACC,WAAW,CAAE,CAC5C,OACF,CACAF,OAAO,CAACS,MAAM,CAAGR,KAAK,CACxB,CACF,EAAAF,WAAA,CAAAyB,SAAA,IAAAzB,WAAA,CAAA0B,aAAA,eAAA1B,WAAA,CAAA2B,UAAA,CAAA7B,gCAAA,QAAAE,WAAA,EAnFO","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}