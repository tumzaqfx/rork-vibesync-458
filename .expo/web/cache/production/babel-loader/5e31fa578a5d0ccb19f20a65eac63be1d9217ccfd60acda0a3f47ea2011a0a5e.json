{"ast":null,"code":"\"use strict\";var _reactJsxRuntime=require(\"react/jsx-runtime\");var _objectWithoutPropertiesLoose=require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");const _excluded=[\"children\"];var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||(\"get\"in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function(){return m[k];}};}Object.defineProperty(o,k2,desc);}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,\"default\",{enumerable:true,value:v});}:function(o,v){o[\"default\"]=v;});var __importStar=this&&this.__importStar||function(){var ownKeys=function(o){ownKeys=Object.getOwnPropertyNames||function(o){var ar=[];for(var k in o)if(Object.prototype.hasOwnProperty.call(o,k))ar[ar.length]=k;return ar;};return ownKeys(o);};return function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k=ownKeys(mod),i=0;i<k.length;i++)if(k[i]!==\"default\")__createBinding(result,mod,k[i]);__setModuleDefault(result,mod);return result;};}();Object.defineProperty(exports,\"__esModule\",{value:true});exports.useFilterScreenChildren=useFilterScreenChildren;exports.withLayoutContext=withLayoutContext;const react_1=__importStar(require(\"react\"));const Route_1=require(\"../Route\");const useScreens_1=require(\"../useScreens\");const Protected_1=require(\"../views/Protected\");const Screen_1=require(\"../views/Screen\");function useFilterScreenChildren(children,{isCustomNavigator,contextKey}={}){return(0,react_1.useMemo)(()=>{const customChildren=[];const screens=[];const protectedScreens=new Set();function flattenChild(child,exclude=false){if((0,Screen_1.isScreen)(child,contextKey)){if(exclude){protectedScreens.add(child.props.name);}else{screens.push(child.props);}return;}if((0,Protected_1.isProtectedReactElement)(child)){if(child.props.guard){react_1.Children.forEach(child.props.children,protectedChild=>flattenChild(protectedChild));}else{react_1.Children.forEach(child.props.children,protectedChild=>{flattenChild(protectedChild,true);});}return;}if(isCustomNavigator){customChildren.push(child);}console.warn(`Layout children must be of type Screen, all other children are ignored. To use custom children, create a custom <Layout />. Update Layout Route at: \"app${contextKey}/_layout\"`);return null;}react_1.Children.forEach(children,child=>flattenChild(child));if(false){const names=screens?.map(screen=>screen&&typeof screen==='object'&&'name'in screen&&screen.name);if(names&&new Set(names).size!==names.length){throw new Error('Screen names must be unique: '+names);}}return{screens,children:customChildren,protectedScreens};},[children]);}function withLayoutContext(Nav,processor){return Object.assign((0,react_1.forwardRef)((_ref,ref)=>{let{children:userDefinedChildren}=_ref,props=_objectWithoutPropertiesLoose(_ref,_excluded);const contextKey=(0,Route_1.useContextKey)();const{screens,protectedScreens}=useFilterScreenChildren(userDefinedChildren,{contextKey});const processed=processor?processor(screens??[]):screens;const sorted=(0,useScreens_1.useSortedScreens)(processed??[],protectedScreens);if(!sorted.length){return null;}return _reactJsxRuntime.jsx(Nav,Object.assign({},props,{id:contextKey,ref:ref,children:sorted}));}),{Screen:Screen_1.Screen,Protected:Protected_1.Protected});}","map":{"version":3,"names":["exports","useFilterScreenChildren","withLayoutContext","react_1","__importStar","require","Route_1","useScreens_1","Protected_1","Screen_1","children","isCustomNavigator","contextKey","useMemo","customChildren","screens","protectedScreens","Set","flattenChild","child","exclude","isScreen","add","props","name","push","isProtectedReactElement","guard","Children","forEach","protectedChild","console","warn","names","map","screen","size","length","Error","Nav","processor","Object","assign","forwardRef","_ref","ref","userDefinedChildren","_objectWithoutPropertiesLoose","_excluded","useContextKey","processed","sorted","useSortedScreens","_reactJsxRuntime","jsx","id","Screen","Protected"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-router/src/layouts/withLayoutContext.tsx"],"sourcesContent":["import { EventMapBase, NavigationState } from '@react-navigation/native';\nimport React, {\n  Children,\n  forwardRef,\n  ComponentProps,\n  ComponentType,\n  ForwardRefExoticComponent,\n  PropsWithoutRef,\n  ReactNode,\n  RefAttributes,\n  useMemo,\n} from 'react';\n\nimport { useContextKey } from '../Route';\nimport { PickPartial } from '../types';\nimport { useSortedScreens, ScreenProps } from '../useScreens';\nimport { isProtectedReactElement, Protected } from '../views/Protected';\nimport { isScreen, Screen } from '../views/Screen';\n\nexport function useFilterScreenChildren(\n  children: ReactNode,\n  {\n    isCustomNavigator,\n    contextKey,\n  }: {\n    isCustomNavigator?: boolean;\n    /** Used for sending developer hints */\n    contextKey?: string;\n  } = {}\n) {\n  return useMemo(() => {\n    const customChildren: any[] = [];\n\n    const screens: (ScreenProps & { name: string })[] = [];\n    const protectedScreens = new Set<string>();\n\n    function flattenChild(child: ReactNode, exclude = false) {\n      if (isScreen(child, contextKey)) {\n        if (exclude) {\n          protectedScreens.add(child.props.name);\n        } else {\n          screens.push(child.props);\n        }\n        return;\n      }\n\n      if (isProtectedReactElement(child)) {\n        if (child.props.guard) {\n          Children.forEach(child.props.children, (protectedChild) => flattenChild(protectedChild));\n        } else {\n          Children.forEach(child.props.children, (protectedChild) => {\n            flattenChild(protectedChild, true);\n          });\n        }\n        return;\n      }\n\n      if (isCustomNavigator) {\n        customChildren.push(child);\n      }\n\n      console.warn(\n        `Layout children must be of type Screen, all other children are ignored. To use custom children, create a custom <Layout />. Update Layout Route at: \"app${contextKey}/_layout\"`\n      );\n\n      return null;\n    }\n\n    Children.forEach(children, (child) => flattenChild(child));\n\n    // Add an assertion for development\n    if (process.env.NODE_ENV !== 'production') {\n      // Assert if names are not unique\n      const names = screens?.map(\n        (screen) => screen && typeof screen === 'object' && 'name' in screen && screen.name\n      );\n      if (names && new Set(names).size !== names.length) {\n        throw new Error('Screen names must be unique: ' + names);\n      }\n    }\n\n    return {\n      screens,\n      children: customChildren,\n      protectedScreens,\n    };\n  }, [children]);\n}\n\n/**\n * Returns a navigator that automatically injects matched routes and renders nothing when there are no children.\n * Return type with `children` prop optional.\n * \n * Enables use of other built-in React Navigation navigators and other navigators built with the React Navigation custom navigator API.\n *\n *  @example\n * ```tsx app/_layout.tsx\n * import { ParamListBase, TabNavigationState } from \"@react-navigation/native\";\n * import {\n *   createMaterialTopTabNavigator,\n *   MaterialTopTabNavigationOptions,\n *   MaterialTopTabNavigationEventMap,\n * } from \"@react-navigation/material-top-tabs\";\n * import { withLayoutContext } from \"expo-router\";\n * \n * const MaterialTopTabs = createMaterialTopTabNavigator();\n * \n * const ExpoRouterMaterialTopTabs = withLayoutContext<\n *   MaterialTopTabNavigationOptions,\n *   typeof MaterialTopTabs.Navigator,\n *   TabNavigationState<ParamListBase>,\n *   MaterialTopTabNavigationEventMap\n * >(MaterialTopTabs.Navigator);\n\n * export default function TabLayout() {\n *   return <ExpoRouterMaterialTopTabs />;\n * }\n * ```\n */\nexport function withLayoutContext<\n  TOptions extends object,\n  T extends ComponentType<any>,\n  TState extends NavigationState,\n  TEventMap extends EventMapBase,\n>(Nav: T, processor?: (options: ScreenProps[]) => ScreenProps[]) {\n  return Object.assign(\n    forwardRef(({ children: userDefinedChildren, ...props }: any, ref) => {\n      const contextKey = useContextKey();\n\n      const { screens, protectedScreens } = useFilterScreenChildren(userDefinedChildren, {\n        contextKey,\n      });\n\n      const processed = processor ? processor(screens ?? []) : screens;\n\n      const sorted = useSortedScreens(processed ?? [], protectedScreens);\n\n      // Prevent throwing an error when there are no screens.\n      if (!sorted.length) {\n        return null;\n      }\n\n      return <Nav {...props} id={contextKey} ref={ref} children={sorted} />;\n    }),\n    {\n      Screen,\n      Protected,\n    }\n  ) as ForwardRefExoticComponent<\n    PropsWithoutRef<PickPartial<ComponentProps<T>, 'children'>> & RefAttributes<unknown>\n  > & {\n    Screen: (props: ScreenProps<TOptions, TState, TEventMap>) => null;\n    Protected: typeof Protected;\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}