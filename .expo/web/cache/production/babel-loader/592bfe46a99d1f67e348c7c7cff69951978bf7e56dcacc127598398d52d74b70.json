{"ast":null,"code":"'use strict';import{addWhitelistedNativeProps}from\"./ConfigHelper.js\";export function createAnimatedPropAdapter(adapter,nativeProps){const nativePropsToAdd={};nativeProps?.forEach(prop=>{nativePropsToAdd[prop]=true;});addWhitelistedNativeProps(nativePropsToAdd);return adapter;}","map":{"version":3,"names":["addWhitelistedNativeProps","createAnimatedPropAdapter","adapter","nativeProps","nativePropsToAdd","forEach","prop"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/PropAdapters.ts"],"sourcesContent":["'use strict';\nimport { addWhitelistedNativeProps } from './ConfigHelper';\nimport type {\n  AnimatedPropsAdapterFunction,\n  AnimatedPropsAdapterWorklet,\n} from './commonTypes';\n\n// @ts-expect-error This overload is required by our API.\nexport function createAnimatedPropAdapter(\n  adapter: AnimatedPropsAdapterFunction,\n  nativeProps?: string[]\n): AnimatedPropsAdapterFunction;\n\nexport function createAnimatedPropAdapter(\n  adapter: AnimatedPropsAdapterWorklet,\n  nativeProps?: string[]\n): AnimatedPropsAdapterWorklet {\n  const nativePropsToAdd: { [key: string]: boolean } = {};\n  nativeProps?.forEach((prop) => {\n    nativePropsToAdd[prop] = true;\n  });\n  addWhitelistedNativeProps(nativePropsToAdd);\n  return adapter;\n}\n"],"mappings":"AAAA,YAAY,CACZ,OAASA,yBAAyB,KAAQ,mBAAgB,CAY1D,MAAO,SAAS,CAAAC,yBAAyBA,CACvCC,OAAoC,CACpCC,WAAsB,CACO,CAC7B,KAAM,CAAAC,gBAA4C,CAAG,CAAC,CAAC,CACvDD,WAAW,EAAEE,OAAO,CAAEC,IAAI,EAAK,CAC7BF,gBAAgB,CAACE,IAAI,CAAC,CAAG,IAAI,CAC/B,CAAC,CAAC,CACFN,yBAAyB,CAACI,gBAAgB,CAAC,CAC3C,MAAO,CAAAF,OAAO,CAChB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}