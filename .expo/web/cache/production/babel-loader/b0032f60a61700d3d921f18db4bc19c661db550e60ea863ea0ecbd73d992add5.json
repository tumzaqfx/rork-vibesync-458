{"ast":null,"code":"function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r]);}return n;},_extends.apply(null,arguments);}import*as React from'react';import{Component,useEffect,useMemo,useState}from'react';import{fetchText}from'./utils/fetchData';import{tags}from'./xmlTags';function missingTag(){return null;}export function SvgAst({ast,override}){if(!ast){return null;}const{props,children}=ast;const Svg=tags.svg;return React.createElement(Svg,_extends({},props,override),children);}const err=console.error.bind(console);export function SvgXml(props){const{onError=err,xml,override,fallback}=props;try{const ast=useMemo(()=>xml!==null?parse(xml):null,[xml]);return React.createElement(SvgAst,{ast:ast,override:override||props});}catch(error){onError(error);return fallback??null;}}export function SvgUri(props){const{onError=err,uri,onLoad,fallback}=props;const[xml,setXml]=useState(null);const[isError,setIsError]=useState(false);useEffect(()=>{uri?fetchText(uri).then(data=>{setXml(data);isError&&setIsError(false);onLoad===null||onLoad===void 0||onLoad();}).catch(e=>{onError(e);setIsError(true);}):setXml(null);},[onError,uri,onLoad]);if(isError){return fallback??null;}return React.createElement(SvgXml,{xml:xml,override:props,fallback:fallback});}export class SvgFromXml extends Component{state={ast:null};componentDidMount(){this.parse(this.props.xml);}componentDidUpdate(prevProps){const{xml}=this.props;if(xml!==prevProps.xml){this.parse(xml);}}parse(xml){const{onError=err}=this.props;try{this.setState({ast:xml?parse(xml):null});}catch(e){const error=e;onError(Object.assign({},error,{message:`[RNSVG] Couldn't parse SVG, reason: ${error.message}`}));}}render(){const{props,state:{ast}}=this;return React.createElement(SvgAst,{ast:ast,override:props.override||props});}}export class SvgFromUri extends Component{state={xml:null};componentDidMount(){this.fetch(this.props.uri);}componentDidUpdate(prevProps){const{uri}=this.props;if(uri!==prevProps.uri){this.fetch(uri);}}async fetch(uri){try{this.setState({xml:uri?await fetchText(uri):null});}catch(e){console.error(e);}}render(){const{props,state:{xml}}=this;return React.createElement(SvgFromXml,{xml:xml,override:props,onError:props.onError});}}const upperCase=(_match,letter)=>letter.toUpperCase();export const camelCase=phrase=>phrase.replace(/[:-]([a-z])/g,upperCase);export function getStyle(string){const style={};const declarations=string.split(';').filter(v=>v.trim());const{length}=declarations;for(let i=0;i<length;i++){const declaration=declarations[i];if(declaration.length!==0){const split=declaration.split(':');const property=split[0];const value=split[1];style[camelCase(property.trim())]=value.trim();}}return style;}export function astToReact(value,index){if(typeof value==='object'){const{Tag,props,children}=value;if(props!==null&&props!==void 0&&props.class){props.className=props.class;delete props.class;}return React.createElement(Tag,_extends({key:index},props),children.map(astToReact));}return value;}function repeat(str,i){let result='';while(i--){result+=str;}return result;}const toSpaces=tabs=>repeat('  ',tabs.length);function locate(source,i){const lines=source.split('\\n');const nLines=lines.length;let column=i;let line=0;for(;line<nLines;line++){const{length}=lines[line];if(column>=length){column-=length;}else{break;}}const before=source.slice(0,i).replace(/^\\t+/,toSpaces);const beforeExec=/(^|\\n).*$/.exec(before);const beforeLine=beforeExec&&beforeExec[0]||'';const after=source.slice(i);const afterExec=/.*(\\n|$)/.exec(after);const afterLine=afterExec&&afterExec[0];const pad=repeat(' ',beforeLine.length);const snippet=`${beforeLine}${afterLine}\\n${pad}^`;return{line,column,snippet};}const validNameCharacters=/[a-zA-Z0-9:_-]/;const commentStart=/<!--/;const whitespace=/[\\s\\t\\r\\n]/;const quotemarks=/['\"]/;export function parse(source,middleware){const length=source.length;let currentElement=null;let state=metadata;let children=null;let root;const stack=[];function error(message){const{line,column,snippet}=locate(source,i);throw new Error(`${message} (${line}:${column}). If this is valid SVG, it's probably a bug. Please raise an issue\\n\\n${snippet}`);}function metadata(){while(i+1<length&&(source[i]!=='<'||!(validNameCharacters.test(source[i+1])||commentStart.test(source.slice(i,i+4))))){i++;}return neutral();}function neutral(){let text='';let char;while(i<length&&(char=source[i])!=='<'){text+=char;i+=1;}if(/\\S/.test(text)){children.push(text);}if(source[i]==='<'){return openingTag;}return neutral;}function openingTag(){const char=source[i];if(char==='?'){return neutral;}if(char==='!'){const start=i+1;if(source.slice(start,i+3)==='--'){return comment;}const end=i+8;if(source.slice(start,end)==='[CDATA['){return cdata;}if(/doctype/i.test(source.slice(start,end))){return neutral;}}if(char==='/'){return closingTag;}const tag=getName();const props={};const element={tag,props,children:[],parent:currentElement,Tag:tags[tag]||missingTag};if(currentElement){children.push(element);}else{root=element;}getAttributes(props);const{style}=props;if(typeof style==='string'){element.styles=style;props.style=getStyle(style);}let selfClosing=false;if(source[i]==='/'){i+=1;selfClosing=true;}if(source[i]!=='>'){error('Expected >');}if(!selfClosing){currentElement=element;({children}=element);stack.push(element);}return neutral;}function comment(){const index=source.indexOf('-->',i);if(!~index){error('expected -->');}i=index+2;return neutral;}function cdata(){const index=source.indexOf(']]>',i);if(!~index){error('expected ]]>');}children.push(source.slice(i+7,index));i=index+2;return neutral;}function closingTag(){const tag=getName();if(!tag){error('Expected tag name');}if(currentElement&&tag!==currentElement.tag){error(`Expected closing tag </${tag}> to match opening tag <${currentElement.tag}>`);}allowSpaces();if(source[i]!=='>'){error('Expected >');}stack.pop();currentElement=stack[stack.length-1];if(currentElement){({children}=currentElement);}return neutral;}function getName(){let name='';let char;while(i<length&&validNameCharacters.test(char=source[i])){name+=char;i+=1;}return name;}function getAttributes(props){while(i<length){if(!whitespace.test(source[i])){return;}allowSpaces();const name=getName();if(!name){return;}let value=true;allowSpaces();if(source[i]==='='){i+=1;allowSpaces();value=getAttributeValue();if(name!=='id'&&!isNaN(+value)&&value.trim()!==''){value=+value;}}props[camelCase(name)]=value;}}function getAttributeValue(){return quotemarks.test(source[i])?getQuotedAttributeValue():getUnquotedAttributeValue();}function getUnquotedAttributeValue(){let value='';do{const char=source[i];if(char===' '||char==='>'||char==='/'){return value;}value+=char;i+=1;}while(i<length);return value;}function getQuotedAttributeValue(){const quotemark=source[i++];let value='';let escaped=false;while(i<length){const char=source[i++];if(char===quotemark&&!escaped){return value;}if(char==='\\\\'&&!escaped){escaped=true;}value+=escaped?`\\\\${char}`:char;escaped=false;}return value;}function allowSpaces(){while(i<length&&whitespace.test(source[i])){i+=1;}}let i=0;while(i<length){if(!state){error('Unexpected character');}state=state();i+=1;}if(state!==neutral){error('Unexpected end of input');}if(root){const xml=(middleware?middleware(root):root)||root;const ast=xml.children.map(astToReact);const jsx=xml;jsx.children=ast;return jsx;}return null;}export{tags};","map":{"version":3,"names":["React","Component","useEffect","useMemo","useState","fetchText","tags","missingTag","SvgAst","ast","override","props","children","Svg","svg","createElement","_extends","err","console","error","bind","SvgXml","onError","xml","fallback","parse","SvgUri","uri","onLoad","setXml","isError","setIsError","then","data","catch","e","SvgFromXml","state","componentDidMount","componentDidUpdate","prevProps","setState","Object","assign","message","render","SvgFromUri","fetch","upperCase","_match","letter","toUpperCase","camelCase","phrase","replace","getStyle","string","style","declarations","split","filter","v","trim","length","i","declaration","property","value","astToReact","index","Tag","class","className","key","map","repeat","str","result","toSpaces","tabs","locate","source","lines","nLines","column","line","before","slice","beforeExec","exec","beforeLine","after","afterExec","afterLine","pad","snippet","validNameCharacters","commentStart","whitespace","quotemarks","middleware","currentElement","metadata","root","stack","Error","test","neutral","text","char","push","openingTag","start","comment","end","cdata","closingTag","tag","getName","element","parent","getAttributes","styles","selfClosing","indexOf","allowSpaces","pop","name","getAttributeValue","isNaN","getQuotedAttributeValue","getUnquotedAttributeValue","quotemark","escaped","jsx"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-svg/src/xml.tsx"],"sourcesContent":["import type { ComponentType, ComponentProps } from 'react';\nimport * as React from 'react';\nimport { Component, useEffect, useMemo, useState } from 'react';\nimport { fetchText } from './utils/fetchData';\nimport type { SvgProps } from './elements/Svg';\nimport { tags } from './xmlTags';\n\nfunction missingTag() {\n  return null;\n}\n\ntype Tag = ComponentType<ComponentProps<(typeof tags)[keyof typeof tags]>>;\nexport interface AST {\n  tag: string;\n  style?: Styles;\n  styles?: string;\n  priority?: Map<string, boolean | undefined>;\n  parent: AST | null;\n  children: (AST | string)[] | (JSX.Element | string)[];\n  props: {\n    [prop: string]: Styles | string | undefined;\n  };\n  Tag: Tag;\n}\n\nexport interface XmlAST extends AST {\n  children: (XmlAST | string)[];\n  parent: XmlAST | null;\n}\n\nexport interface JsxAST extends AST {\n  children: (JSX.Element | string)[];\n}\n\nexport type AdditionalProps = {\n  onError?: (error: Error) => void;\n  override?: object;\n  onLoad?: () => void;\n  fallback?: JSX.Element;\n};\n\nexport type UriProps = SvgProps & { uri: string | null } & AdditionalProps;\nexport type UriState = { xml: string | null };\n\nexport type XmlProps = SvgProps & { xml: string | null } & AdditionalProps;\nexport type XmlState = { ast: JsxAST | null };\n\nexport type AstProps = SvgProps & { ast: JsxAST | null } & AdditionalProps;\n\nexport function SvgAst({ ast, override }: AstProps) {\n  if (!ast) {\n    return null;\n  }\n  const { props, children } = ast;\n\n  const Svg = tags.svg;\n\n  return (\n    <Svg {...props} {...override}>\n      {children}\n    </Svg>\n  );\n}\n\nconst err = console.error.bind(console);\n\nexport function SvgXml(props: XmlProps) {\n  const { onError = err, xml, override, fallback } = props;\n\n  try {\n    const ast = useMemo<JsxAST | null>(\n      () => (xml !== null ? parse(xml) : null),\n      [xml]\n    );\n    return <SvgAst ast={ast} override={override || props} />;\n  } catch (error) {\n    onError(error);\n    return fallback ?? null;\n  }\n}\n\nexport function SvgUri(props: UriProps) {\n  const { onError = err, uri, onLoad, fallback } = props;\n  const [xml, setXml] = useState<string | null>(null);\n  const [isError, setIsError] = useState(false);\n  useEffect(() => {\n    uri\n      ? fetchText(uri)\n          .then((data) => {\n            setXml(data);\n            isError && setIsError(false);\n            onLoad?.();\n          })\n          .catch((e) => {\n            onError(e);\n            setIsError(true);\n          })\n      : setXml(null);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onError, uri, onLoad]);\n  if (isError) {\n    return fallback ?? null;\n  }\n  return <SvgXml xml={xml} override={props} fallback={fallback} />;\n}\n\n// Extending Component is required for Animated support.\n\nexport class SvgFromXml extends Component<XmlProps, XmlState> {\n  state = { ast: null };\n  componentDidMount() {\n    this.parse(this.props.xml);\n  }\n\n  componentDidUpdate(prevProps: { xml: string | null }) {\n    const { xml } = this.props;\n    if (xml !== prevProps.xml) {\n      this.parse(xml);\n    }\n  }\n\n  parse(xml: string | null) {\n    const { onError = err } = this.props;\n    try {\n      this.setState({ ast: xml ? parse(xml) : null });\n    } catch (e) {\n      const error = e as Error;\n      onError({\n        ...error,\n        message: `[RNSVG] Couldn't parse SVG, reason: ${error.message}`,\n      });\n    }\n  }\n\n  render() {\n    const {\n      props,\n      state: { ast },\n    } = this;\n    return <SvgAst ast={ast} override={props.override || props} />;\n  }\n}\n\nexport class SvgFromUri extends Component<UriProps, UriState> {\n  state = { xml: null };\n  componentDidMount() {\n    this.fetch(this.props.uri);\n  }\n\n  componentDidUpdate(prevProps: { uri: string | null }) {\n    const { uri } = this.props;\n    if (uri !== prevProps.uri) {\n      this.fetch(uri);\n    }\n  }\n\n  async fetch(uri: string | null) {\n    try {\n      this.setState({ xml: uri ? await fetchText(uri) : null });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    const {\n      props,\n      state: { xml },\n    } = this;\n    return <SvgFromXml xml={xml} override={props} onError={props.onError} />;\n  }\n}\n\nconst upperCase = (_match: string, letter: string) => letter.toUpperCase();\n\nexport const camelCase = (phrase: string) =>\n  phrase.replace(/[:-]([a-z])/g, upperCase);\n\nexport type Styles = { [property: string]: string };\n\nexport function getStyle(string: string): Styles {\n  const style: Styles = {};\n  const declarations = string.split(';').filter((v) => v.trim());\n  const { length } = declarations;\n  for (let i = 0; i < length; i++) {\n    const declaration = declarations[i];\n    if (declaration.length !== 0) {\n      const split = declaration.split(':');\n      const property = split[0];\n      const value = split[1];\n      style[camelCase(property.trim())] = value.trim();\n    }\n  }\n  return style;\n}\n\nexport function astToReact(\n  value: AST | string,\n  index: number\n): JSX.Element | string {\n  if (typeof value === 'object') {\n    const { Tag, props, children } = value;\n    if (props?.class) {\n      props.className = props.class;\n      delete props.class;\n    }\n\n    return (\n      <Tag key={index} {...props}>\n        {(children as (AST | string)[]).map(astToReact)}\n      </Tag>\n    );\n  }\n  return value;\n}\n\n// slimmed down parser based on https://github.com/Rich-Harris/svg-parser\n\nfunction repeat(str: string, i: number) {\n  let result = '';\n  while (i--) {\n    result += str;\n  }\n  return result;\n}\n\nconst toSpaces = (tabs: string) => repeat('  ', tabs.length);\n\nfunction locate(source: string, i: number) {\n  const lines = source.split('\\n');\n  const nLines = lines.length;\n  let column = i;\n  let line = 0;\n  for (; line < nLines; line++) {\n    const { length } = lines[line];\n    if (column >= length) {\n      column -= length;\n    } else {\n      break;\n    }\n  }\n  const before = source.slice(0, i).replace(/^\\t+/, toSpaces);\n  const beforeExec = /(^|\\n).*$/.exec(before);\n  const beforeLine = (beforeExec && beforeExec[0]) || '';\n  const after = source.slice(i);\n  const afterExec = /.*(\\n|$)/.exec(after);\n  const afterLine = afterExec && afterExec[0];\n  const pad = repeat(' ', beforeLine.length);\n  const snippet = `${beforeLine}${afterLine}\\n${pad}^`;\n  return { line, column, snippet };\n}\n\nconst validNameCharacters = /[a-zA-Z0-9:_-]/;\nconst commentStart = /<!--/;\nconst whitespace = /[\\s\\t\\r\\n]/;\nconst quotemarks = /['\"]/;\n\nexport type Middleware = (ast: XmlAST) => XmlAST;\n\nexport function parse(source: string, middleware?: Middleware): JsxAST | null {\n  const length = source.length;\n  let currentElement: XmlAST | null = null;\n  let state = metadata;\n  let children = null;\n  let root: XmlAST | undefined;\n  const stack: XmlAST[] = [];\n\n  function error(message: string) {\n    const { line, column, snippet } = locate(source, i);\n    throw new Error(\n      `${message} (${line}:${column}). If this is valid SVG, it's probably a bug. Please raise an issue\\n\\n${snippet}`\n    );\n  }\n\n  function metadata() {\n    while (\n      i + 1 < length &&\n      (source[i] !== '<' ||\n        !(\n          validNameCharacters.test(source[i + 1]) ||\n          commentStart.test(source.slice(i, i + 4))\n        ))\n    ) {\n      i++;\n    }\n\n    return neutral();\n  }\n\n  function neutral() {\n    let text = '';\n    let char;\n    while (i < length && (char = source[i]) !== '<') {\n      text += char;\n      i += 1;\n    }\n\n    if (/\\S/.test(text)) {\n      children.push(text);\n    }\n\n    if (source[i] === '<') {\n      return openingTag;\n    }\n\n    return neutral;\n  }\n\n  function openingTag() {\n    const char = source[i];\n\n    if (char === '?') {\n      return neutral;\n    } // <?xml...\n\n    if (char === '!') {\n      const start = i + 1;\n      if (source.slice(start, i + 3) === '--') {\n        return comment;\n      }\n      const end = i + 8;\n      if (source.slice(start, end) === '[CDATA[') {\n        return cdata;\n      }\n      if (/doctype/i.test(source.slice(start, end))) {\n        return neutral;\n      }\n    }\n\n    if (char === '/') {\n      return closingTag;\n    }\n\n    const tag = getName() as keyof typeof tags;\n    const props: { [prop: string]: Styles | string | undefined } = {};\n    const element: XmlAST = {\n      tag,\n      props,\n      children: [],\n      parent: currentElement,\n      Tag: (tags[tag] || missingTag) as Tag,\n    };\n\n    if (currentElement) {\n      children.push(element);\n    } else {\n      root = element;\n    }\n\n    getAttributes(props);\n\n    const { style } = props;\n    if (typeof style === 'string') {\n      element.styles = style;\n      props.style = getStyle(style);\n    }\n\n    let selfClosing = false;\n\n    if (source[i] === '/') {\n      i += 1;\n      selfClosing = true;\n    }\n\n    if (source[i] !== '>') {\n      error('Expected >');\n    }\n\n    if (!selfClosing) {\n      currentElement = element;\n      ({ children } = element);\n      stack.push(element);\n    }\n\n    return neutral;\n  }\n\n  function comment() {\n    const index = source.indexOf('-->', i);\n    if (!~index) {\n      error('expected -->');\n    }\n\n    i = index + 2;\n    return neutral;\n  }\n\n  function cdata() {\n    const index = source.indexOf(']]>', i);\n    if (!~index) {\n      error('expected ]]>');\n    }\n\n    children.push(source.slice(i + 7, index));\n\n    i = index + 2;\n    return neutral;\n  }\n\n  function closingTag() {\n    const tag = getName();\n\n    if (!tag) {\n      error('Expected tag name');\n    }\n\n    if (currentElement && tag !== currentElement.tag) {\n      error(\n        `Expected closing tag </${tag}> to match opening tag <${currentElement.tag}>`\n      );\n    }\n\n    allowSpaces();\n    if (source[i] !== '>') {\n      error('Expected >');\n    }\n\n    stack.pop();\n    currentElement = stack[stack.length - 1];\n    if (currentElement) {\n      ({ children } = currentElement);\n    }\n\n    return neutral;\n  }\n\n  function getName() {\n    let name = '';\n    let char;\n    while (i < length && validNameCharacters.test((char = source[i]))) {\n      name += char;\n      i += 1;\n    }\n\n    return name;\n  }\n\n  function getAttributes(props: {\n    [x: string]: Styles | string | number | boolean | undefined;\n    style?: string | Styles | undefined;\n  }) {\n    while (i < length) {\n      if (!whitespace.test(source[i])) {\n        return;\n      }\n      allowSpaces();\n\n      const name = getName();\n      if (!name) {\n        return;\n      }\n\n      let value: boolean | number | string = true;\n\n      allowSpaces();\n      if (source[i] === '=') {\n        i += 1;\n        allowSpaces();\n\n        value = getAttributeValue();\n        if (name !== 'id' && !isNaN(+value) && value.trim() !== '') {\n          value = +value;\n        }\n      }\n\n      props[camelCase(name)] = value;\n    }\n  }\n\n  function getAttributeValue(): string {\n    return quotemarks.test(source[i])\n      ? getQuotedAttributeValue()\n      : getUnquotedAttributeValue();\n  }\n\n  function getUnquotedAttributeValue() {\n    let value = '';\n    do {\n      const char = source[i];\n      if (char === ' ' || char === '>' || char === '/') {\n        return value;\n      }\n\n      value += char;\n      i += 1;\n    } while (i < length);\n\n    return value;\n  }\n\n  function getQuotedAttributeValue() {\n    const quotemark = source[i++];\n\n    let value = '';\n    let escaped = false;\n\n    while (i < length) {\n      const char = source[i++];\n      if (char === quotemark && !escaped) {\n        return value;\n      }\n\n      if (char === '\\\\' && !escaped) {\n        escaped = true;\n      }\n\n      value += escaped ? `\\\\${char}` : char;\n      escaped = false;\n    }\n\n    return value;\n  }\n\n  function allowSpaces() {\n    while (i < length && whitespace.test(source[i])) {\n      i += 1;\n    }\n  }\n\n  let i = 0;\n  while (i < length) {\n    if (!state) {\n      error('Unexpected character');\n    }\n    state = state();\n    i += 1;\n  }\n\n  if (state !== neutral) {\n    error('Unexpected end of input');\n  }\n\n  if (root) {\n    const xml: XmlAST = (middleware ? middleware(root) : root) || root;\n    const ast: (JSX.Element | string)[] = xml.children.map(astToReact);\n    const jsx: JsxAST = xml as JsxAST;\n    jsx.children = ast;\n    return jsx;\n  }\n\n  return null;\n}\nexport { tags };\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}