{"ast":null,"code":"\"use strict\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"state\"];import*as React from'react';import{isRecordEqual}from\"./isRecordEqual.js\";export const CHILD_STATE=Symbol('CHILD_STATE');export function useRouteCache(routes){const cache=React.useMemo(()=>({current:new Map()}),[]);if(true){return routes;}cache.current=routes.reduce((acc,route)=>{const previous=cache.current.get(route.key);const{state}=route,routeWithoutState=_objectWithoutPropertiesLoose(route,_excluded);let proxy;if(previous&&isRecordEqual(previous,routeWithoutState)){proxy=previous;}else{proxy=routeWithoutState;}if(false){for(const key in proxy){const value=proxy[key];Object.defineProperty(proxy,key,{enumerable:true,configurable:true,writable:false,value});}}Object.defineProperty(proxy,CHILD_STATE,{enumerable:false,configurable:true,value:state});acc.set(route.key,proxy);return acc;},new Map());return Array.from(cache.current.values());}","map":{"version":3,"names":["React","isRecordEqual","CHILD_STATE","Symbol","useRouteCache","routes","cache","useMemo","current","Map","reduce","acc","route","previous","get","key","state","routeWithoutState","_objectWithoutPropertiesLoose","_excluded","proxy","value","Object","defineProperty","enumerable","configurable","writable","set","Array","from","values"],"sources":["/home/user/rork-vibesync-458/node_modules/@react-navigation/core/src/useRouteCache.tsx"],"sourcesContent":["import type { NavigationState, ParamListBase } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport { isRecordEqual } from './isRecordEqual';\nimport type { RouteProp } from './types';\n\ntype RouteCache = Map<string, RouteProp<ParamListBase>>;\n\n/**\n * Utilities such as `getFocusedRouteNameFromRoute` need to access state.\n * So we need a way to suppress the warning for those use cases.\n * This is fine since they are internal utilities and this is not public API.\n */\nexport const CHILD_STATE = Symbol('CHILD_STATE');\n\n/**\n * Hook to cache route props for each screen in the navigator.\n * This lets add warnings and modifications to the route object but keep references between renders.\n */\nexport function useRouteCache<State extends NavigationState>(\n  routes: State['routes']\n) {\n  // Cache object which holds route objects for each screen\n  const cache = React.useMemo(() => ({ current: new Map() as RouteCache }), []);\n\n  if (process.env.NODE_ENV === 'production') {\n    // We don't want the overhead of creating extra maps every render in prod\n    return routes;\n  }\n\n  cache.current = routes.reduce((acc, route) => {\n    const previous = cache.current.get(route.key);\n    const { state, ...routeWithoutState } = route;\n\n    let proxy;\n\n    if (previous && isRecordEqual(previous, routeWithoutState)) {\n      // If a cached route object already exists, reuse it\n      proxy = previous;\n    } else {\n      proxy = routeWithoutState;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // FIXME: since the state is updated with mutation, the route object cannot be frozen\n      // As a workaround, loop through the object and make the properties readonly\n      for (const key in proxy) {\n        // @ts-expect-error: this is fine since we are looping through the object\n        const value = proxy[key];\n\n        Object.defineProperty(proxy, key, {\n          enumerable: true,\n          configurable: true,\n          writable: false,\n          value,\n        });\n      }\n    }\n\n    Object.defineProperty(proxy, CHILD_STATE, {\n      enumerable: false,\n      configurable: true,\n      value: state,\n    });\n\n    acc.set(route.key, proxy);\n\n    return acc;\n  }, new Map() as RouteCache);\n\n  return Array.from(cache.current.values());\n}\n"],"mappings":"sIACA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAE9B,OAASC,aAAa,KAAQ,oBAAiB,CAU/C,MAAO,MAAM,CAAAC,WAAW,CAAGC,MAAM,CAAC,aAAa,CAAC,CAMhD,MAAO,SAAS,CAAAC,aAAaA,CAC3BC,MAAuB,CACvB,CAEA,KAAM,CAAAC,KAAK,CAAGN,KAAK,CAACO,OAAO,CAAC,KAAO,CAAEC,OAAO,CAAE,GAAI,CAAAC,GAAG,CAAC,CAAgB,CAAC,CAAC,CAAE,EAAE,CAAC,CAE7E,QAA2C,CAEzC,MAAO,CAAAJ,MAAM,CACf,CAEAC,KAAK,CAACE,OAAO,CAAGH,MAAM,CAACK,MAAM,CAAC,CAACC,GAAG,CAAEC,KAAK,GAAK,CAC5C,KAAM,CAAAC,QAAQ,CAAGP,KAAK,CAACE,OAAO,CAACM,GAAG,CAACF,KAAK,CAACG,GAAG,CAAC,CAC7C,KAAM,CAAEC,KAA4B,CAAC,CAAGJ,KAAK,CAA3BK,iBAAA,CAAAC,6BAAA,CAAsBN,KAAK,CAAAO,SAAA,EAE7C,GAAI,CAAAC,KAAK,CAET,GAAIP,QAAQ,EAAIZ,aAAa,CAACY,QAAQ,CAAEI,iBAAiB,CAAC,CAAE,CAE1DG,KAAK,CAAGP,QAAQ,CAClB,CAAC,IAAM,CACLO,KAAK,CAAGH,iBAAiB,CAC3B,CAEA,SAA2C,CAGzC,IAAK,KAAM,CAAAF,GAAG,GAAI,CAAAK,KAAK,CAAE,CAEvB,KAAM,CAAAC,KAAK,CAAGD,KAAK,CAACL,GAAG,CAAC,CAExBO,MAAM,CAACC,cAAc,CAACH,KAAK,CAAEL,GAAG,CAAE,CAChCS,UAAU,CAAE,IAAI,CAChBC,YAAY,CAAE,IAAI,CAClBC,QAAQ,CAAE,KAAK,CACfL,KACF,CAAC,CAAC,CACJ,CACF,CAEAC,MAAM,CAACC,cAAc,CAACH,KAAK,CAAElB,WAAW,CAAE,CACxCsB,UAAU,CAAE,KAAK,CACjBC,YAAY,CAAE,IAAI,CAClBJ,KAAK,CAAEL,KACT,CAAC,CAAC,CAEFL,GAAG,CAACgB,GAAG,CAACf,KAAK,CAACG,GAAG,CAAEK,KAAK,CAAC,CAEzB,MAAO,CAAAT,GAAG,CACZ,CAAC,CAAE,GAAI,CAAAF,GAAG,CAAC,CAAe,CAAC,CAE3B,MAAO,CAAAmB,KAAK,CAACC,IAAI,CAACvB,KAAK,CAACE,OAAO,CAACsB,MAAM,CAAC,CAAC,CAAC,CAC3C","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}