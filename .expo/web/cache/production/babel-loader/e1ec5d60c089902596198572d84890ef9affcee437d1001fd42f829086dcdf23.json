{"ast":null,"code":"import Platform from\"react-native-web/dist/exports/Platform\";import{TokenManager}from'./token-manager';export class NetworkError extends Error{constructor(message,statusCode){super(message);this.name='NetworkError';this.statusCode=statusCode;this.isNetworkError=true;}}export class ApiClient{static DEFAULT_TIMEOUT=30000;static MAX_RETRIES=3;static RETRY_DELAY=1000;static async request(url,config={}){const{method='GET',headers={},body,timeout=this.DEFAULT_TIMEOUT,retries=this.MAX_RETRIES,requiresAuth=true}=config;let lastError=null;for(let attempt=0;attempt<=retries;attempt++){try{if(attempt>0){await this.delay(this.RETRY_DELAY*attempt);console.log(`Retry attempt ${attempt} for ${url}`);}const controller=new AbortController();const timeoutId=setTimeout(()=>controller.abort(),timeout);const requestHeaders=Object.assign({'Content-Type':'application/json','X-Platform':\"web\",'X-App-Version':'1.0.0'},headers);if(requiresAuth){const token=await TokenManager.getAccessToken();if(token){requestHeaders['Authorization']=`Bearer ${token}`;}}const response=await fetch(url,{method,headers:requestHeaders,body:body?JSON.stringify(body):undefined,signal:controller.signal});clearTimeout(timeoutId);if(!response.ok){if(response.status===401){console.log('Unauthorized, clearing tokens');await TokenManager.clearTokens();throw new NetworkError('Authentication required',401);}if(response.status>=500){throw new NetworkError(`Server error: ${response.status}`,response.status);}const errorData=await response.json().catch(()=>({}));throw new NetworkError(errorData.message||`Request failed with status ${response.status}`,response.status);}const data=await response.json();return{success:true,data,statusCode:response.status};}catch(error){lastError=error;if(error.name==='AbortError'){console.error('Request timeout:',url);lastError=new NetworkError('Request timeout',408);}if(attempt===retries){break;}if(error.statusCode&&error.statusCode<500){break;}}}console.error('Request failed after retries:',url,lastError);return{success:false,error:lastError?.message||'Network request failed',statusCode:lastError?.statusCode};}static async get(url,config){return this.request(url,Object.assign({},config,{method:'GET'}));}static async post(url,body,config){return this.request(url,Object.assign({},config,{method:'POST',body}));}static async put(url,body,config){return this.request(url,Object.assign({},config,{method:'PUT',body}));}static async delete(url,config){return this.request(url,Object.assign({},config,{method:'DELETE'}));}static async patch(url,body,config){return this.request(url,Object.assign({},config,{method:'PATCH',body}));}static delay(ms){return new Promise(resolve=>setTimeout(resolve,ms));}static isNetworkError(error){return error?.isNetworkError===true;}static handleError(error){if(this.isNetworkError(error)){if(error.statusCode===401){return'Please log in to continue';}if(error.statusCode===403){return'You do not have permission to perform this action';}if(error.statusCode===404){return'The requested resource was not found';}if(error.statusCode&&error.statusCode>=500){return'Server error. Please try again later';}return error.message;}if(error?.message){return error.message;}return'An unexpected error occurred';}}export class ConnectionMonitor{static isOnline=true;static listeners=new Set();static initialize(){if(true){window.addEventListener('online',()=>this.setOnlineStatus(true));window.addEventListener('offline',()=>this.setOnlineStatus(false));this.isOnline=navigator.onLine;}}static getStatus(){return this.isOnline;}static subscribe(listener){this.listeners.add(listener);return()=>this.listeners.delete(listener);}static setOnlineStatus(status){if(this.isOnline!==status){this.isOnline=status;console.log(`Network status changed: ${status?'online':'offline'}`);this.listeners.forEach(listener=>listener(status));}}}","map":{"version":3,"names":["TokenManager","NetworkError","Error","constructor","message","statusCode","name","isNetworkError","ApiClient","DEFAULT_TIMEOUT","MAX_RETRIES","RETRY_DELAY","request","url","config","method","headers","body","timeout","retries","requiresAuth","lastError","attempt","delay","console","log","controller","AbortController","timeoutId","setTimeout","abort","requestHeaders","Object","assign","token","getAccessToken","response","fetch","JSON","stringify","undefined","signal","clearTimeout","ok","status","clearTokens","errorData","json","catch","data","success","error","get","post","put","delete","patch","ms","Promise","resolve","handleError","ConnectionMonitor","isOnline","listeners","Set","initialize","window","addEventListener","setOnlineStatus","navigator","onLine","getStatus","subscribe","listener","add","forEach"],"sources":["/home/user/rork-vibesync-458/utils/network.ts"],"sourcesContent":["import { Platform } from 'react-native';\nimport { TokenManager } from './token-manager';\n\nexport interface ApiResponse<T = any> {\n  success: boolean;\n  data?: T;\n  error?: string;\n  statusCode?: number;\n}\n\nexport interface RequestConfig {\n  method?: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH';\n  headers?: Record<string, string>;\n  body?: any;\n  timeout?: number;\n  retries?: number;\n  requiresAuth?: boolean;\n}\n\nexport class NetworkError extends Error {\n  statusCode?: number;\n  isNetworkError: boolean;\n\n  constructor(message: string, statusCode?: number) {\n    super(message);\n    this.name = 'NetworkError';\n    this.statusCode = statusCode;\n    this.isNetworkError = true;\n  }\n}\n\nexport class ApiClient {\n  private static readonly DEFAULT_TIMEOUT = 30000;\n  private static readonly MAX_RETRIES = 3;\n  private static readonly RETRY_DELAY = 1000;\n\n  static async request<T = any>(\n    url: string,\n    config: RequestConfig = {}\n  ): Promise<ApiResponse<T>> {\n    const {\n      method = 'GET',\n      headers = {},\n      body,\n      timeout = this.DEFAULT_TIMEOUT,\n      retries = this.MAX_RETRIES,\n      requiresAuth = true,\n    } = config;\n\n    let lastError: Error | null = null;\n\n    for (let attempt = 0; attempt <= retries; attempt++) {\n      try {\n        if (attempt > 0) {\n          await this.delay(this.RETRY_DELAY * attempt);\n          console.log(`Retry attempt ${attempt} for ${url}`);\n        }\n\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), timeout);\n\n        const requestHeaders: Record<string, string> = {\n          'Content-Type': 'application/json',\n          'X-Platform': Platform.OS,\n          'X-App-Version': '1.0.0',\n          ...headers,\n        };\n\n        if (requiresAuth) {\n          const token = await TokenManager.getAccessToken();\n          if (token) {\n            requestHeaders['Authorization'] = `Bearer ${token}`;\n          }\n        }\n\n        const response = await fetch(url, {\n          method,\n          headers: requestHeaders,\n          body: body ? JSON.stringify(body) : undefined,\n          signal: controller.signal,\n        });\n\n        clearTimeout(timeoutId);\n\n        if (!response.ok) {\n          if (response.status === 401) {\n            console.log('Unauthorized, clearing tokens');\n            await TokenManager.clearTokens();\n            throw new NetworkError('Authentication required', 401);\n          }\n\n          if (response.status >= 500) {\n            throw new NetworkError(`Server error: ${response.status}`, response.status);\n          }\n\n          const errorData = await response.json().catch(() => ({}));\n          throw new NetworkError(\n            errorData.message || `Request failed with status ${response.status}`,\n            response.status\n          );\n        }\n\n        const data = await response.json();\n        \n        return {\n          success: true,\n          data,\n          statusCode: response.status,\n        };\n      } catch (error: any) {\n        lastError = error;\n\n        if (error.name === 'AbortError') {\n          console.error('Request timeout:', url);\n          lastError = new NetworkError('Request timeout', 408);\n        }\n\n        if (attempt === retries) {\n          break;\n        }\n\n        if (error.statusCode && error.statusCode < 500) {\n          break;\n        }\n      }\n    }\n\n    console.error('Request failed after retries:', url, lastError);\n    \n    return {\n      success: false,\n      error: lastError?.message || 'Network request failed',\n      statusCode: (lastError as NetworkError)?.statusCode,\n    };\n  }\n\n  static async get<T = any>(url: string, config?: Omit<RequestConfig, 'method' | 'body'>): Promise<ApiResponse<T>> {\n    return this.request<T>(url, { ...config, method: 'GET' });\n  }\n\n  static async post<T = any>(url: string, body?: any, config?: Omit<RequestConfig, 'method'>): Promise<ApiResponse<T>> {\n    return this.request<T>(url, { ...config, method: 'POST', body });\n  }\n\n  static async put<T = any>(url: string, body?: any, config?: Omit<RequestConfig, 'method'>): Promise<ApiResponse<T>> {\n    return this.request<T>(url, { ...config, method: 'PUT', body });\n  }\n\n  static async delete<T = any>(url: string, config?: Omit<RequestConfig, 'method' | 'body'>): Promise<ApiResponse<T>> {\n    return this.request<T>(url, { ...config, method: 'DELETE' });\n  }\n\n  static async patch<T = any>(url: string, body?: any, config?: Omit<RequestConfig, 'method'>): Promise<ApiResponse<T>> {\n    return this.request<T>(url, { ...config, method: 'PATCH', body });\n  }\n\n  private static delay(ms: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  static isNetworkError(error: any): error is NetworkError {\n    return error?.isNetworkError === true;\n  }\n\n  static handleError(error: any): string {\n    if (this.isNetworkError(error)) {\n      if (error.statusCode === 401) {\n        return 'Please log in to continue';\n      }\n      if (error.statusCode === 403) {\n        return 'You do not have permission to perform this action';\n      }\n      if (error.statusCode === 404) {\n        return 'The requested resource was not found';\n      }\n      if (error.statusCode && error.statusCode >= 500) {\n        return 'Server error. Please try again later';\n      }\n      return error.message;\n    }\n\n    if (error?.message) {\n      return error.message;\n    }\n\n    return 'An unexpected error occurred';\n  }\n}\n\nexport class ConnectionMonitor {\n  private static isOnline: boolean = true;\n  private static listeners: Set<(isOnline: boolean) => void> = new Set();\n\n  static initialize(): void {\n    if (Platform.OS === 'web') {\n      window.addEventListener('online', () => this.setOnlineStatus(true));\n      window.addEventListener('offline', () => this.setOnlineStatus(false));\n      this.isOnline = navigator.onLine;\n    }\n  }\n\n  static getStatus(): boolean {\n    return this.isOnline;\n  }\n\n  static subscribe(listener: (isOnline: boolean) => void): () => void {\n    this.listeners.add(listener);\n    return () => this.listeners.delete(listener);\n  }\n\n  private static setOnlineStatus(status: boolean): void {\n    if (this.isOnline !== status) {\n      this.isOnline = status;\n      console.log(`Network status changed: ${status ? 'online' : 'offline'}`);\n      this.listeners.forEach(listener => listener(status));\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}