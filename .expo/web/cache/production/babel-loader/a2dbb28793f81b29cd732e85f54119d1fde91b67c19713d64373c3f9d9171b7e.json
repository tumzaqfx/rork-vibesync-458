{"ast":null,"code":"\"use strict\";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||(\"get\"in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function(){return m[k];}};}Object.defineProperty(o,k2,desc);}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,\"default\",{enumerable:true,value:v});}:function(o,v){o[\"default\"]=v;});var __importStar=this&&this.__importStar||function(){var ownKeys=function(o){ownKeys=Object.getOwnPropertyNames||function(o){var ar=[];for(var k in o)if(Object.prototype.hasOwnProperty.call(o,k))ar[ar.length]=k;return ar;};return ownKeys(o);};return function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k=ownKeys(mod),i=0;i<k.length;i++)if(k[i]!==\"default\")__createBinding(result,mod,k[i]);__setModuleDefault(result,mod);return result;};}();Object.defineProperty(exports,\"__esModule\",{value:true});exports.getPathFromState=exports.getStateFromPath=void 0;exports.getInitialURL=getInitialURL;exports.getRootURL=getRootURL;exports.subscribe=subscribe;const Linking=__importStar(require(\"expo-linking\"));const react_native_1=require(\"react-native-web/dist/index\");const extractPathFromURL_1=require(\"../fork/extractPathFromURL\");const getPathFromState_1=require(\"../fork/getPathFromState\");Object.defineProperty(exports,\"getPathFromState\",{enumerable:true,get:function(){return getPathFromState_1.getPathFromState;}});const getStateFromPath_1=require(\"../fork/getStateFromPath\");Object.defineProperty(exports,\"getStateFromPath\",{enumerable:true,get:function(){return getStateFromPath_1.getStateFromPath;}});const useLinking_1=require(\"../fork/useLinking\");const getRoutesRedirects_1=require(\"../getRoutesRedirects\");const isExpoGo=typeof expo!=='undefined'&&globalThis.expo?.modules?.ExpoGo;function getInitialURL(){if(false){return'';}if(react_native_1.Platform.OS==='web'&&window.location?.href){return window.location.href;}if(react_native_1.Platform.OS==='ios'){const url=Linking.getLinkingURL();return parseExpoGoUrlFromListener(url)??getRootURL();}return Promise.resolve((0,useLinking_1.getInitialURLWithTimeout)()).then(url=>parseExpoGoUrlFromListener(url)??getRootURL());}let _rootURL;function getRootURL(){if(_rootURL===undefined){_rootURL=Linking.createURL('/');if(isExpoGo){_rootURL=(0,extractPathFromURL_1.parsePathFromExpoGoLink)(_rootURL);}}return _rootURL;}function parseExpoGoUrlFromListener(url){if(!url||!isExpoGo){return url;}const{pathname,queryString}=(0,extractPathFromURL_1.parsePathAndParamsFromExpoGoLink)(url);if(!pathname||pathname==='/'){return getRootURL()+queryString;}return url;}function subscribe(nativeLinking,redirects){return listener=>{let callback;const legacySubscription=nativeLinking?.legacy_subscribe?.(listener);if(isExpoGo){callback=async({url})=>{let href=parseExpoGoUrlFromListener(url);href=(0,getRoutesRedirects_1.applyRedirects)(href,redirects);if(href&&nativeLinking?.redirectSystemPath){href=await nativeLinking.redirectSystemPath({path:href,initial:false});}if(href){listener(href);}};}else{callback=async({url})=>{let href=(0,getRoutesRedirects_1.applyRedirects)(url,redirects);if(href&&nativeLinking?.redirectSystemPath){href=await nativeLinking.redirectSystemPath({path:href,initial:false});}if(href){listener(href);}};}const subscription=Linking.addEventListener('url',callback);return()=>{subscription?.remove?.();legacySubscription?.();};};}","map":{"version":3,"names":["exports","getInitialURL","getRootURL","subscribe","Linking","__importStar","require","react_native_1","extractPathFromURL_1","getPathFromState_1","Object","defineProperty","enumerable","get","getPathFromState","getStateFromPath_1","getStateFromPath","useLinking_1","getRoutesRedirects_1","isExpoGo","expo","globalThis","modules","ExpoGo","Platform","OS","window","location","href","url","getLinkingURL","parseExpoGoUrlFromListener","Promise","resolve","getInitialURLWithTimeout","then","_rootURL","undefined","createURL","parsePathFromExpoGoLink","pathname","queryString","parsePathAndParamsFromExpoGoLink","nativeLinking","redirects","listener","callback","legacySubscription","legacy_subscribe","applyRedirects","redirectSystemPath","path","initial","subscription","addEventListener","remove"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-router/src/link/linking.ts"],"sourcesContent":["import { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\nimport { Platform } from 'react-native';\n\nimport {\n  parsePathAndParamsFromExpoGoLink,\n  parsePathFromExpoGoLink,\n} from '../fork/extractPathFromURL';\nimport { getPathFromState } from '../fork/getPathFromState';\nimport { getStateFromPath } from '../fork/getStateFromPath';\nimport { getInitialURLWithTimeout } from '../fork/useLinking';\nimport { applyRedirects } from '../getRoutesRedirects';\nimport { StoreRedirects } from '../global-state/router-store';\nimport { NativeIntent } from '../types';\n\nconst isExpoGo = typeof expo !== 'undefined' && globalThis.expo?.modules?.ExpoGo;\n\n// A custom getInitialURL is used on native to ensure the app always starts at\n// the root path if it's launched from something other than a deep link.\n// This helps keep the native functionality working like the web functionality.\n// For example, if you had a root navigator where the first screen was `/settings` and the second was `/index`\n// then `/index` would be used on web and `/settings` would be used on native.\nexport function getInitialURL(): ReturnType<\n  NonNullable<LinkingOptions<Record<string, unknown>>['getInitialURL']>\n> {\n  if (typeof window === 'undefined') {\n    return '';\n  }\n  if (Platform.OS === 'web' && window.location?.href) {\n    return window.location.href;\n  }\n  if (Platform.OS === 'ios') {\n    // Use the new Expo API for iOS. This has better support for App Clips and handoff.\n    const url = Linking.getLinkingURL();\n    return (\n      parseExpoGoUrlFromListener(url) ??\n      // The path will be nullish in bare apps when the app is launched from the home screen.\n      // TODO(EvanBacon): define some policy around notifications.\n      getRootURL()\n    );\n  }\n\n  // TODO: Figure out if expo-linking on Android has full interop with the React Native implementation.\n  return Promise.resolve(getInitialURLWithTimeout()).then(\n    (url) =>\n      parseExpoGoUrlFromListener(url) ??\n      // The path will be nullish in bare apps when the app is launched from the home screen.\n      // TODO(EvanBacon): define some policy around notifications.\n      getRootURL()\n  );\n}\n\nlet _rootURL: string | undefined;\n\nexport function getRootURL(): string {\n  if (_rootURL === undefined) {\n    _rootURL = Linking.createURL('/');\n    if (isExpoGo) {\n      _rootURL = parsePathFromExpoGoLink(_rootURL);\n    }\n  }\n  return _rootURL;\n}\n\n// Expo Go is weird and requires the root path to be `/--/`\nfunction parseExpoGoUrlFromListener<T extends string | null>(url: T): T {\n  if (!url || !isExpoGo) {\n    return url;\n  }\n  const { pathname, queryString } = parsePathAndParamsFromExpoGoLink(url);\n  // If the URL is defined (default in Expo Go dev apps) and the URL has no path:\n  // `exp://192.168.87.39:19000/` then use the default `exp://192.168.87.39:19000/--/`\n  if (!pathname || pathname === '/') {\n    return (getRootURL() + queryString) as T;\n  }\n  return url;\n}\n\nexport function subscribe(\n  nativeLinking: NativeIntent | undefined,\n  redirects: StoreRedirects[] | undefined\n) {\n  return (listener: (url: string) => void) => {\n    let callback: (({ url }: { url: string }) => void) | undefined;\n\n    const legacySubscription = nativeLinking?.legacy_subscribe?.(listener);\n\n    if (isExpoGo) {\n      // This extra work is only done in the Expo Go app.\n      callback = async ({ url }) => {\n        let href: string | undefined | null = parseExpoGoUrlFromListener(url);\n        href = applyRedirects(href, redirects);\n        if (href && nativeLinking?.redirectSystemPath) {\n          href = await nativeLinking.redirectSystemPath({ path: href, initial: false });\n        }\n\n        if (href) {\n          listener(href);\n        }\n      };\n    } else {\n      callback = async ({ url }) => {\n        let href = applyRedirects(url, redirects);\n        if (href && nativeLinking?.redirectSystemPath) {\n          href = await nativeLinking.redirectSystemPath({ path: href, initial: false });\n        }\n\n        if (href) {\n          listener(href);\n        }\n      };\n    }\n\n    const subscription = Linking.addEventListener('url', callback);\n\n    return () => {\n      // https://github.com/facebook/react-native/commit/6d1aca806cee86ad76de771ed3a1cc62982ebcd7\n      subscription?.remove?.();\n      legacySubscription?.();\n    };\n  };\n}\n\nexport { getStateFromPath, getPathFromState };\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}