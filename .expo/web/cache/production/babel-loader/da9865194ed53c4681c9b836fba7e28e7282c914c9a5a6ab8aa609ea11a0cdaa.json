{"ast":null,"code":"\"use strict\";var _objectWithoutPropertiesLoose=require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");const _excluded=[\"preserveDynamicRoutes\",\"preserveGroups\",\"shouldEncodeURISegment\"],_excluded2=[\"#\"];var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||(\"get\"in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function(){return m[k];}};}Object.defineProperty(o,k2,desc);}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,\"default\",{enumerable:true,value:v});}:function(o,v){o[\"default\"]=v;});var __importStar=this&&this.__importStar||function(){var ownKeys=function(o){ownKeys=Object.getOwnPropertyNames||function(o){var ar=[];for(var k in o)if(Object.prototype.hasOwnProperty.call(o,k))ar[ar.length]=k;return ar;};return ownKeys(o);};return function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k=ownKeys(mod),i=0;i<k.length;i++)if(k[i]!==\"default\")__createBinding(result,mod,k[i]);__setModuleDefault(result,mod);return result;};}();Object.defineProperty(exports,\"__esModule\",{value:true});exports.getParamName=void 0;exports.validatePathConfig=validatePathConfig;exports.fixCurrentParams=fixCurrentParams;exports.appendQueryAndHash=appendQueryAndHash;exports.appendBaseUrl=appendBaseUrl;exports.getPathWithConventionsCollapsed=getPathWithConventionsCollapsed;exports.isDynamicPart=isDynamicPart;const native_1=require(\"@react-navigation/native\");const queryString=__importStar(require(\"query-string\"));const matchers_1=require(\"../matchers\");function validatePathConfig(_ref){let options=_objectWithoutPropertiesLoose(_ref,_excluded);(0,native_1.validatePathConfig)(options);}function fixCurrentParams(allParams,route,stringify){const currentParams=Object.fromEntries(Object.entries(route.params).flatMap(([key,value])=>{if(key==='screen'||key==='params'){return[];}return[[key,stringify?.[key]?stringify[key](value):Array.isArray(value)?value.map(String):String(value)]];}));Object.assign(allParams,currentParams);return currentParams;}function appendQueryAndHash(path,_ref2){let{'#':hash}=_ref2,focusedParams=_objectWithoutPropertiesLoose(_ref2,_excluded2);const query=queryString.stringify(focusedParams,{sort:false});if(query){path+=`?${query}`;}if(hash){path+=`#${hash}`;}return path;}function appendBaseUrl(path,baseUrl=\"\"){if(true){if(baseUrl){return`/${baseUrl.replace(/^\\/+/,'').replace(/\\/$/,'')}${path}`;}}return path;}function getPathWithConventionsCollapsed({pattern,route,params,preserveGroups,preserveDynamicRoutes,shouldEncodeURISegment=true,initialRouteName}){const segments=pattern.split('/');return segments.map((p,i)=>{const name=(0,exports.getParamName)(p);if(p.startsWith('*')){if(preserveDynamicRoutes){if(name==='not-found'){return'+not-found';}return`[...${name}]`;}else if(params[name]){if(Array.isArray(params[name])){return params[name].join('/');}return params[name];}else if(route.name.startsWith('[')&&route.name.endsWith(']')){return'';}else if(p==='*not-found'){return'';}else{return route.name;}}if(p.startsWith(':')){if(preserveDynamicRoutes){return`[${name}]`;}const value=params[name];if(value===undefined&&p.endsWith('?')){return;}return(shouldEncodeURISegment?encodeURISegment(value):value)??'undefined';}if(!preserveGroups&&(0,matchers_1.matchGroupName)(p)!=null){if(segments.length-1===i){if(initialRouteName){if(segmentMatchesConvention(initialRouteName)){return'';}return shouldEncodeURISegment?encodeURISegment(initialRouteName,{preserveBrackets:true}):initialRouteName;}}return'';}return shouldEncodeURISegment?encodeURISegment(p,{preserveBrackets:true}):p;}).map(v=>v??'').join('/');}const getParamName=pattern=>pattern.replace(/^[:*]/,'').replace(/\\?$/,'');exports.getParamName=getParamName;function isDynamicPart(p){return p.startsWith(':')||p.startsWith('*');}function segmentMatchesConvention(segment){return segment==='index'||(0,matchers_1.matchDynamicName)(segment)!=null||(0,matchers_1.matchGroupName)(segment)!=null||(0,matchers_1.matchDeepDynamicRouteName)(segment)!=null;}function encodeURISegment(str,{preserveBrackets=false}={}){str=String(str).replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]/g,char=>encodeURIComponent(char));if(preserveBrackets){str=str.replace(/%5B/g,'[').replace(/%5D/g,']');}return str;}","map":{"version":3,"names":["exports","validatePathConfig","fixCurrentParams","appendQueryAndHash","appendBaseUrl","getPathWithConventionsCollapsed","isDynamicPart","native_1","require","queryString","__importStar","matchers_1","_ref","options","_objectWithoutPropertiesLoose","_excluded","allParams","route","stringify","currentParams","Object","fromEntries","entries","params","flatMap","key","value","Array","isArray","map","String","assign","path","_ref2","hash","focusedParams","_excluded2","query","sort","baseUrl","replace","pattern","preserveGroups","preserveDynamicRoutes","shouldEncodeURISegment","initialRouteName","segments","split","p","i","name","getParamName","startsWith","join","endsWith","undefined","encodeURISegment","matchGroupName","length","segmentMatchesConvention","preserveBrackets","v","segment","matchDynamicName","matchDeepDynamicRouteName","str","char","encodeURIComponent"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-router/src/fork/getPathFromState-forks.ts"],"sourcesContent":["import { validatePathConfig as RNValidatePathConfig, type Route } from '@react-navigation/native';\nimport * as queryString from 'query-string';\n\nimport type { Options, State, StringifyConfig } from './getPathFromState';\nimport { matchDeepDynamicRouteName, matchDynamicName, matchGroupName } from '../matchers';\n\nexport type ExpoOptions = {\n  preserveDynamicRoutes?: boolean;\n  preserveGroups?: boolean;\n  shouldEncodeURISegment?: boolean;\n};\n\nexport type ExpoConfigItem = {\n  // Used as fallback for groups\n  initialRouteName?: string;\n};\n\nexport function validatePathConfig<ParamList extends object>({\n  preserveDynamicRoutes,\n  preserveGroups,\n  shouldEncodeURISegment,\n  ...options\n}: Options<ParamList>) {\n  RNValidatePathConfig(options);\n}\n\nexport function fixCurrentParams(\n  allParams: Record<string, any>,\n  route: Route<string> & {\n    state?: State;\n  },\n  stringify?: StringifyConfig\n) {\n  // Better handle array params\n  const currentParams = Object.fromEntries(\n    Object.entries(route.params!).flatMap(([key, value]) => {\n      if (key === 'screen' || key === 'params') {\n        return [];\n      }\n\n      return [\n        [\n          key,\n          stringify?.[key]\n            ? stringify[key](value)\n            : Array.isArray(value)\n              ? value.map(String)\n              : String(value),\n        ],\n      ];\n    })\n  );\n\n  // We always assign params, as non pattern routes may still have query params\n  Object.assign(allParams, currentParams);\n\n  return currentParams;\n}\n\nexport function appendQueryAndHash(\n  path: string,\n  { '#': hash, ...focusedParams }: Record<string, any>\n) {\n  const query = queryString.stringify(focusedParams, { sort: false });\n\n  if (query) {\n    path += `?${query}`;\n  }\n\n  if (hash) {\n    path += `#${hash}`;\n  }\n\n  return path;\n}\n\nexport function appendBaseUrl(\n  path: string,\n  baseUrl: string | undefined = process.env.EXPO_BASE_URL\n) {\n  if (process.env.NODE_ENV !== 'development') {\n    if (baseUrl) {\n      return `/${baseUrl.replace(/^\\/+/, '').replace(/\\/$/, '')}${path}`;\n    }\n  }\n\n  return path;\n}\n\nexport function getPathWithConventionsCollapsed({\n  pattern,\n  route,\n  params,\n  preserveGroups,\n  preserveDynamicRoutes,\n  shouldEncodeURISegment = true,\n  initialRouteName,\n}: ExpoOptions & {\n  pattern: string;\n  route: Route<any>;\n  params: Record<string, any>;\n  initialRouteName?: string;\n}) {\n  const segments = pattern.split('/');\n\n  return segments\n    .map((p, i) => {\n      const name = getParamName(p);\n\n      // Showing the route name seems ok, though whatever we show here will be incorrect\n      // Since the page doesn't actually exist\n      if (p.startsWith('*')) {\n        if (preserveDynamicRoutes) {\n          if (name === 'not-found') {\n            return '+not-found';\n          }\n\n          return `[...${name}]`;\n        } else if (params[name]) {\n          if (Array.isArray(params[name])) {\n            return params[name].join('/');\n          }\n          return params[name];\n        } else if (route.name.startsWith('[') && route.name.endsWith(']')) {\n          return '';\n        } else if (p === '*not-found') {\n          return '';\n        } else {\n          return route.name;\n        }\n      }\n\n      // If the path has a pattern for a param, put the param in the path\n      if (p.startsWith(':')) {\n        if (preserveDynamicRoutes) {\n          return `[${name}]`;\n        }\n        // Optional params without value assigned in route.params should be ignored\n        const value = params[name];\n        if (value === undefined && p.endsWith('?')) {\n          return;\n        }\n\n        return (shouldEncodeURISegment ? encodeURISegment(value) : value) ?? 'undefined';\n      }\n\n      if (!preserveGroups && matchGroupName(p) != null) {\n        // When the last part is a group it could be a shared URL\n        // if the route has an initialRouteName defined, then we should\n        // use that as the component path as we can assume it will be shown.\n        if (segments.length - 1 === i) {\n          if (initialRouteName) {\n            // Return an empty string if the init route is ambiguous.\n            if (segmentMatchesConvention(initialRouteName)) {\n              return '';\n            }\n            return shouldEncodeURISegment\n              ? encodeURISegment(initialRouteName, { preserveBrackets: true })\n              : initialRouteName;\n          }\n        }\n        return '';\n      }\n      // Preserve dynamic syntax for rehydration\n      return shouldEncodeURISegment ? encodeURISegment(p, { preserveBrackets: true }) : p;\n    })\n    .map((v) => v ?? '')\n    .join('/');\n}\n\nexport const getParamName = (pattern: string) => pattern.replace(/^[:*]/, '').replace(/\\?$/, '');\n\nexport function isDynamicPart(p: string) {\n  return p.startsWith(':') || p.startsWith('*');\n}\n\nfunction segmentMatchesConvention(segment: string): boolean {\n  return (\n    segment === 'index' ||\n    matchDynamicName(segment) != null ||\n    matchGroupName(segment) != null ||\n    matchDeepDynamicRouteName(segment) != null\n  );\n}\n\nfunction encodeURISegment(str: string, { preserveBrackets = false } = {}) {\n  // Valid characters according to\n  // https://datatracker.ietf.org/doc/html/rfc3986#section-3.3 (see pchar definition)\n  str = String(str).replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]/g, (char) => encodeURIComponent(char));\n\n  if (preserveBrackets) {\n    // Preserve brackets\n    str = str.replace(/%5B/g, '[').replace(/%5D/g, ']');\n  }\n  return str;\n}\n"],"mappings":"iyCAiBAA,OAAA,CAAAC,kBAAA,CAAAA,kBAAA,CASAD,OAAA,CAAAE,gBAAA,CAAAA,gBAAA,CAiCAF,OAAA,CAAAG,kBAAA,CAAAA,kBAAA,CAiBAH,OAAA,CAAAI,aAAA,CAAAA,aAAA,CAaAJ,OAAA,CAAAK,+BAAA,CAAAA,+BAAA,CAmFAL,OAAA,CAAAM,aAAA,CAAAA,aAAA,CA5KA,MAAAC,QAAA,CAAAC,OAAA,6BACA,MAAAC,WAAA,CAAAC,YAAA,CAAAF,OAAA,kBAGA,MAAAG,UAAA,CAAAH,OAAA,gBAaA,QAAgB,CAAAP,kBAAkBA,CAAAW,IAAA,CAKb,IADhB,CAAAC,OAAO,CAAAC,6BAAA,CAAAF,IAAA,CAAAG,SAAA,EAEV,GAAAR,QAAA,CAAAN,kBAAoB,EAACY,OAAO,CAAC,CAC/B,CAEA,QAAgB,CAAAX,gBAAgBA,CAC9Bc,SAA8B,CAC9BC,KAEC,CACDC,SAA2B,EAG3B,KAAM,CAAAC,aAAa,CAAGC,MAAM,CAACC,WAAW,CACtCD,MAAM,CAACE,OAAO,CAACL,KAAK,CAACM,MAAO,CAAC,CAACC,OAAO,CAAC,CAAC,CAACC,GAAG,CAAEC,KAAK,CAAC,GAAI,CACrD,GAAID,GAAG,GAAK,QAAQ,EAAIA,GAAG,GAAK,QAAQ,CAAE,CACxC,MAAO,EAAE,CACX,CAEA,MAAO,CACL,CACEA,GAAG,CACHP,SAAS,GAAGO,GAAG,CAAC,CACZP,SAAS,CAACO,GAAG,CAAC,CAACC,KAAK,CAAC,CACrBC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,CAClBA,KAAK,CAACG,GAAG,CAACC,MAAM,CAAC,CACjBA,MAAM,CAACJ,KAAK,CAAC,CACpB,CACF,CACH,CAAC,CAAC,CACH,CAGDN,MAAM,CAACW,MAAM,CAACf,SAAS,CAAEG,aAAa,CAAC,CAEvC,MAAO,CAAAA,aAAa,CACtB,CAEA,QAAgB,CAAAhB,kBAAkBA,CAChC6B,IAAY,CAAAC,KAAA,CACwC,IAApD,CAAE,GAAG,CAAEC,IAAsB,CAAuB,CAAAD,KAAA,CAApCE,aAAa,CAAArB,6BAAA,CAAAmB,KAAA,CAAAG,UAAA,EAE7B,KAAM,CAAAC,KAAK,CAAG5B,WAAW,CAACS,SAAS,CAACiB,aAAa,CAAE,CAAEG,IAAI,CAAE,KAAK,CAAE,CAAC,CAEnE,GAAID,KAAK,CAAE,CACTL,IAAI,EAAI,IAAIK,KAAK,EAAE,CACrB,CAEA,GAAIH,IAAI,CAAE,CACRF,IAAI,EAAI,IAAIE,IAAI,EAAE,CACpB,CAEA,MAAO,CAAAF,IAAI,CACb,CAEA,QAAgB,CAAA5B,aAAaA,CAC3B4B,IAAY,CACZO,OAAA,GAAuD,EAEvD,QAA4C,CAC1C,GAAIA,OAAO,CAAE,CACX,MAAO,IAAIA,OAAO,CAACC,OAAO,CAAC,MAAM,CAAE,EAAE,CAAC,CAACA,OAAO,CAAC,KAAK,CAAE,EAAE,CAAC,GAAGR,IAAI,EAAE,CACpE,CACF,CAEA,MAAO,CAAAA,IAAI,CACb,CAEA,QAAgB,CAAA3B,+BAA+BA,CAAC,CAC9CoC,OAAO,CACPxB,KAAK,CACLM,MAAM,CACNmB,cAAc,CACdC,qBAAqB,CACrBC,sBAAsB,CAAG,IAAI,CAC7BC,gBAAgB,CAMjB,EACC,KAAM,CAAAC,QAAQ,CAAGL,OAAO,CAACM,KAAK,CAAC,GAAG,CAAC,CAEnC,MAAO,CAAAD,QAAQ,CACZjB,GAAG,CAAC,CAACmB,CAAC,CAAEC,CAAC,GAAI,CACZ,KAAM,CAAAC,IAAI,CAAG,GAAAlD,OAAA,CAAAmD,YAAY,EAACH,CAAC,CAAC,CAI5B,GAAIA,CAAC,CAACI,UAAU,CAAC,GAAG,CAAC,CAAE,CACrB,GAAIT,qBAAqB,CAAE,CACzB,GAAIO,IAAI,GAAK,WAAW,CAAE,CACxB,MAAO,YAAY,CACrB,CAEA,MAAO,OAAOA,IAAI,GAAG,CACvB,CAAC,IAAM,IAAI3B,MAAM,CAAC2B,IAAI,CAAC,CAAE,CACvB,GAAIvB,KAAK,CAACC,OAAO,CAACL,MAAM,CAAC2B,IAAI,CAAC,CAAC,CAAE,CAC/B,MAAO,CAAA3B,MAAM,CAAC2B,IAAI,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC,CAC/B,CACA,MAAO,CAAA9B,MAAM,CAAC2B,IAAI,CAAC,CACrB,CAAC,IAAM,IAAIjC,KAAK,CAACiC,IAAI,CAACE,UAAU,CAAC,GAAG,CAAC,EAAInC,KAAK,CAACiC,IAAI,CAACI,QAAQ,CAAC,GAAG,CAAC,CAAE,CACjE,MAAO,EAAE,CACX,CAAC,IAAM,IAAIN,CAAC,GAAK,YAAY,CAAE,CAC7B,MAAO,EAAE,CACX,CAAC,IAAM,CACL,MAAO,CAAA/B,KAAK,CAACiC,IAAI,CACnB,CACF,CAGA,GAAIF,CAAC,CAACI,UAAU,CAAC,GAAG,CAAC,CAAE,CACrB,GAAIT,qBAAqB,CAAE,CACzB,MAAO,IAAIO,IAAI,GAAG,CACpB,CAEA,KAAM,CAAAxB,KAAK,CAAGH,MAAM,CAAC2B,IAAI,CAAC,CAC1B,GAAIxB,KAAK,GAAK6B,SAAS,EAAIP,CAAC,CAACM,QAAQ,CAAC,GAAG,CAAC,CAAE,CAC1C,OACF,CAEA,MAAO,CAACV,sBAAsB,CAAGY,gBAAgB,CAAC9B,KAAK,CAAC,CAAGA,KAAK,GAAK,WAAW,CAClF,CAEA,GAAI,CAACgB,cAAc,EAAI,GAAA/B,UAAA,CAAA8C,cAAc,EAACT,CAAC,CAAC,EAAI,IAAI,CAAE,CAIhD,GAAIF,QAAQ,CAACY,MAAM,CAAG,CAAC,GAAKT,CAAC,CAAE,CAC7B,GAAIJ,gBAAgB,CAAE,CAEpB,GAAIc,wBAAwB,CAACd,gBAAgB,CAAC,CAAE,CAC9C,MAAO,EAAE,CACX,CACA,MAAO,CAAAD,sBAAsB,CACzBY,gBAAgB,CAACX,gBAAgB,CAAE,CAAEe,gBAAgB,CAAE,IAAI,CAAE,CAAC,CAC9Df,gBAAgB,CACtB,CACF,CACA,MAAO,EAAE,CACX,CAEA,MAAO,CAAAD,sBAAsB,CAAGY,gBAAgB,CAACR,CAAC,CAAE,CAAEY,gBAAgB,CAAE,IAAI,CAAE,CAAC,CAAGZ,CAAC,CACrF,CAAC,CAAC,CACDnB,GAAG,CAAEgC,CAAC,EAAKA,CAAC,EAAI,EAAE,CAAC,CACnBR,IAAI,CAAC,GAAG,CAAC,CACd,CAEO,KAAM,CAAAF,YAAY,CAAIV,OAAe,EAAKA,OAAO,CAACD,OAAO,CAAC,OAAO,CAAE,EAAE,CAAC,CAACA,OAAO,CAAC,KAAK,CAAE,EAAE,CAAC,CAAnFxC,OAAA,CAAAmD,YAAY,CAAAA,YAAA,CAEzB,QAAgB,CAAA7C,aAAaA,CAAC0C,CAAS,EACrC,MAAO,CAAAA,CAAC,CAACI,UAAU,CAAC,GAAG,CAAC,EAAIJ,CAAC,CAACI,UAAU,CAAC,GAAG,CAAC,CAC/C,CAEA,QAAS,CAAAO,wBAAwBA,CAACG,OAAe,EAC/C,MACE,CAAAA,OAAO,GAAK,OAAO,EACnB,GAAAnD,UAAA,CAAAoD,gBAAgB,EAACD,OAAO,CAAC,EAAI,IAAI,EACjC,GAAAnD,UAAA,CAAA8C,cAAc,EAACK,OAAO,CAAC,EAAI,IAAI,EAC/B,GAAAnD,UAAA,CAAAqD,yBAAyB,EAACF,OAAO,CAAC,EAAI,IAAI,CAE9C,CAEA,QAAS,CAAAN,gBAAgBA,CAACS,GAAW,CAAE,CAAEL,gBAAgB,CAAG,KAAK,CAAE,CAAG,EAAE,EAGtEK,GAAG,CAAGnC,MAAM,CAACmC,GAAG,CAAC,CAACzB,OAAO,CAAC,iCAAiC,CAAG0B,IAAI,EAAKC,kBAAkB,CAACD,IAAI,CAAC,CAAC,CAEhG,GAAIN,gBAAgB,CAAE,CAEpBK,GAAG,CAAGA,GAAG,CAACzB,OAAO,CAAC,MAAM,CAAE,GAAG,CAAC,CAACA,OAAO,CAAC,MAAM,CAAE,GAAG,CAAC,CACrD,CACA,MAAO,CAAAyB,GAAG,CACZ","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}