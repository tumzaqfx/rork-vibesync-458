{"ast":null,"code":"\"use strict\";'use client';Object.defineProperty(exports,\"__esModule\",{value:true});exports.useNavigation=useNavigation;const native_1=require(\"@react-navigation/native\");const constants_1=require(\"./constants\");const href_1=require(\"./link/href\");function useNavigation(parent){let navigation=(0,native_1.useNavigation)();let state=(0,native_1.useStateForPath)();const currentId=navigation.getId();if(currentId===''||currentId===`/expo-router/build/views/Navigator`){return navigation;}if(typeof parent==='object'){parent=(0,href_1.resolveHref)(parent);}if(parent==='/'){return navigation.getParent(`/expo-router/build/views/Navigator`)??navigation.getParent(``);}else if(parent?.startsWith('../')){const names=[];while(state){const route=state.routes[0];state=route.state;if(state){names.push(route.name);}}const originalParent=parent;if(parent.endsWith('/')){parent=parent.slice(0,-1);}const segments=parent.split('/');if(!segments.every(segment=>segment==='..')){throw new Error(`Invalid parent path \"${originalParent}\". Only \"../\" segments are allowed when using relative paths.`);}const levels=segments.length;const index=names.length-1-levels;if(index<0){throw new Error(`Invalid parent path \"${originalParent}\". Cannot go up ${levels} levels from the current route.`);}parent=names[index];if(parent&&parent!==constants_1.INTERNAL_SLOT_NAME){parent=`/${parent}`;}}navigation=navigation.getParent(parent);if(false){if(!navigation){const ids=[];while(navigation){ids.push(navigation.getId()||'/');navigation=navigation.getParent();}throw new Error(`Could not find parent navigation with route \"${parent}\". Available routes are: '${ids.join(\"', '\")}'`);}}return navigation;}","map":{"version":3,"names":["exports","useNavigation","native_1","require","constants_1","href_1","parent","navigation","state","useStateForPath","currentId","getId","resolveHref","getParent","startsWith","names","route","routes","push","name","originalParent","endsWith","slice","segments","split","every","segment","Error","levels","length","index","INTERNAL_SLOT_NAME","ids","join"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-router/src/useNavigation.ts"],"sourcesContent":["'use client';\nimport {\n  useNavigation as useUpstreamNavigation,\n  NavigationProp,\n  NavigationState,\n  useStateForPath,\n} from '@react-navigation/native';\n\nimport { INTERNAL_SLOT_NAME } from './constants';\nimport { resolveHref } from './link/href';\nimport { Href } from './types';\n\n/**\n * Returns the underlying React Navigation [`navigation` object](https://reactnavigation.org/docs/navigation-object)\n * to imperatively access layout-specific functionality like `navigation.openDrawer()` in a\n * [Drawer](/router/advanced/drawer/) layout.\n *\n * @example\n * ```tsx app/index.tsx\n * import { useNavigation } from 'expo-router';\n *\n * export default function Route() {\n *   // Access the current navigation object for the current route.\n *   const navigation = useNavigation();\n *\n *   return (\n *     <View>\n *       <Text onPress={() => {\n *         // Open the drawer view.\n *         navigation.openDrawer();\n *       }}>\n *         Open Drawer\n *       </Text>\n *     </View>\n *   );\n * }\n * ```\n *\n * When using nested layouts, you can access higher-order layouts by passing a secondary argument denoting the layout route.\n * For example, `/menu/_layout.tsx` is nested inside `/app/orders/`, you can use `useNavigation('/orders/menu/')`.\n *\n * @example\n * ```tsx app/orders/menu/index.tsx\n * import { useNavigation } from 'expo-router';\n *\n * export default function MenuRoute() {\n *   const rootLayout = useNavigation('/');\n *   const ordersLayout = useNavigation('/orders');\n *\n *   // Same as the default results of `useNavigation()` when invoked in this route.\n *   const parentLayout = useNavigation('/orders/menu');\n * }\n * ```\n *\n * If you attempt to access a layout that doesn't exist, an error such as\n * `Could not find parent navigation with route \"/non-existent\"` is thrown.\n *\n *\n * @param parent Provide an absolute path such as `/(root)` to the parent route or a relative path like `../../` to the parent route.\n * @returns The navigation object for the current route.\n *\n * @see React Navigation documentation on [navigation dependent functions](https://reactnavigation.org/docs/navigation-object/#navigator-dependent-functions)\n * for more information.\n */\nexport function useNavigation<\n  T = Omit<NavigationProp<ReactNavigation.RootParamList>, 'getState'> & {\n    getState(): NavigationState | undefined;\n  },\n>(parent?: string | Href): T {\n  let navigation = useUpstreamNavigation<any>();\n  let state = useStateForPath();\n\n  // Check for the top-level navigator - we cannot fetch anything higher!\n  const currentId = navigation.getId();\n  if (currentId === '' || currentId === `/expo-router/build/views/Navigator`) {\n    return navigation;\n  }\n\n  if (typeof parent === 'object') {\n    parent = resolveHref(parent);\n  }\n\n  if (parent === '/') {\n    // This is the root navigator\n    return navigation.getParent(`/expo-router/build/views/Navigator`) ?? navigation.getParent(``);\n  } else if (parent?.startsWith('../')) {\n    const names: string[] = [];\n\n    while (state) {\n      const route = state.routes[0];\n      state = route.state;\n      // Don't include the last router, as thats the current route\n      if (state) {\n        names.push(route.name);\n      }\n    }\n\n    // Removing the trailing slash to make splitting easier\n    const originalParent = parent;\n    if (parent.endsWith('/')) {\n      parent = parent.slice(0, -1);\n    }\n\n    const segments = parent.split('/');\n    if (!segments.every((segment) => segment === '..')) {\n      throw new Error(\n        `Invalid parent path \"${originalParent}\". Only \"../\" segments are allowed when using relative paths.`\n      );\n    }\n\n    const levels = segments.length;\n    const index = names.length - 1 - levels;\n\n    if (index < 0) {\n      throw new Error(\n        `Invalid parent path \"${originalParent}\". Cannot go up ${levels} levels from the current route.`\n      );\n    }\n\n    parent = names[index];\n\n    // Expo Router navigators use the context key as the name which has a leading `/`\n    // The exception to this is the INTERNAL_SLOT_NAME, and the root navigator which uses ''\n    if (parent && parent !== INTERNAL_SLOT_NAME) {\n      parent = `/${parent}`;\n    }\n  }\n\n  navigation = navigation.getParent(parent);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!navigation) {\n      const ids: (string | undefined)[] = [];\n      while (navigation) {\n        ids.push(navigation.getId() || '/');\n        navigation = navigation.getParent();\n      }\n\n      throw new Error(\n        `Could not find parent navigation with route \"${parent}\". Available routes are: '${ids.join(\"', '\")}'`\n      );\n    }\n  }\n\n  return navigation;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}