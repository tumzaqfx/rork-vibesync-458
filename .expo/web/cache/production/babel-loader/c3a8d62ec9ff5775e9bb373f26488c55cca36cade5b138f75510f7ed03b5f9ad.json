{"ast":null,"code":"import{InterruptionModeAndroid,InterruptionModeIOS}from'./Audio.types';import ExponentAV from'./ExponentAV';export*from'./Audio/Recording';export*from'./Audio/Sound';export{setIsEnabledAsync}from'./Audio/AudioAvailability';export{PitchCorrectionQuality}from'./AV';const _populateMissingKeys=(userAudioMode,defaultAudioMode)=>{for(const key in defaultAudioMode){if(!userAudioMode.hasOwnProperty(key)){const prop=key;userAudioMode[prop]=defaultAudioMode[prop];}}return userAudioMode;};const defaultMode={allowsRecordingIOS:false,interruptionModeIOS:InterruptionModeIOS.MixWithOthers,playsInSilentModeIOS:false,staysActiveInBackground:false,interruptionModeAndroid:InterruptionModeAndroid.DuckOthers,shouldDuckAndroid:true,playThroughEarpieceAndroid:false};let currentAudioMode=null;function getCurrentAudioMode(){if(!currentAudioMode){return defaultMode;}return currentAudioMode;}export async function setAudioModeAsync(partialMode){const mode=_populateMissingKeys(partialMode,getCurrentAudioMode());if(!InterruptionModeIOS[mode.interruptionModeIOS]){throw new Error(`\"interruptionModeIOS\" was set to an invalid value.`);}if(!InterruptionModeAndroid[mode.interruptionModeAndroid]){throw new Error(`\"interruptionModeAndroid\" was set to an invalid value.`);}if(typeof mode.allowsRecordingIOS!=='boolean'||typeof mode.playsInSilentModeIOS!=='boolean'||typeof mode.staysActiveInBackground!=='boolean'||typeof mode.shouldDuckAndroid!=='boolean'||typeof mode.playThroughEarpieceAndroid!=='boolean'){throw new Error('\"allowsRecordingIOS\", \"playsInSilentModeIOS\", \"playThroughEarpieceAndroid\", \"staysActiveInBackground\" and \"shouldDuckAndroid\" must be booleans.');}currentAudioMode=mode;return await ExponentAV.setAudioMode(mode);}","map":{"version":3,"names":["InterruptionModeAndroid","InterruptionModeIOS","ExponentAV","setIsEnabledAsync","PitchCorrectionQuality","_populateMissingKeys","userAudioMode","defaultAudioMode","key","hasOwnProperty","prop","defaultMode","allowsRecordingIOS","interruptionModeIOS","MixWithOthers","playsInSilentModeIOS","staysActiveInBackground","interruptionModeAndroid","DuckOthers","shouldDuckAndroid","playThroughEarpieceAndroid","currentAudioMode","getCurrentAudioMode","setAudioModeAsync","partialMode","mode","Error","setAudioMode"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-av/src/Audio.ts"],"sourcesContent":["import { AudioMode, InterruptionModeAndroid, InterruptionModeIOS } from './Audio.types';\nimport ExponentAV from './ExponentAV';\n\nexport * from './Audio/Recording';\nexport * from './Audio/Sound';\nexport { setIsEnabledAsync } from './Audio/AudioAvailability';\nexport { PitchCorrectionQuality } from './AV';\n\nconst _populateMissingKeys = (\n  userAudioMode: Partial<AudioMode>,\n  defaultAudioMode: AudioMode\n): AudioMode => {\n  for (const key in defaultAudioMode) {\n    if (!userAudioMode.hasOwnProperty(key)) {\n      const prop = key as keyof AudioMode;\n      userAudioMode[prop] = defaultAudioMode[prop] as any;\n    }\n  }\n  return userAudioMode as AudioMode;\n};\n\nconst defaultMode: AudioMode = {\n  allowsRecordingIOS: false,\n  interruptionModeIOS: InterruptionModeIOS.MixWithOthers,\n  playsInSilentModeIOS: false,\n  staysActiveInBackground: false,\n  interruptionModeAndroid: InterruptionModeAndroid.DuckOthers,\n  shouldDuckAndroid: true,\n  playThroughEarpieceAndroid: false,\n};\n\nlet currentAudioMode: AudioMode | null = null;\n\nfunction getCurrentAudioMode(): AudioMode {\n  if (!currentAudioMode) {\n    return defaultMode;\n  }\n  return currentAudioMode;\n}\n\n/**\n * We provide this API to customize the audio experience on iOS and Android.\n * @param partialMode\n * @return A `Promise` that will reject if the audio mode could not be enabled for the device.\n */\nexport async function setAudioModeAsync(partialMode: Partial<AudioMode>): Promise<void> {\n  const mode = _populateMissingKeys(partialMode, getCurrentAudioMode());\n\n  if (!InterruptionModeIOS[mode.interruptionModeIOS]) {\n    throw new Error(`\"interruptionModeIOS\" was set to an invalid value.`);\n  }\n  if (!InterruptionModeAndroid[mode.interruptionModeAndroid]) {\n    throw new Error(`\"interruptionModeAndroid\" was set to an invalid value.`);\n  }\n  if (\n    typeof mode.allowsRecordingIOS !== 'boolean' ||\n    typeof mode.playsInSilentModeIOS !== 'boolean' ||\n    typeof mode.staysActiveInBackground !== 'boolean' ||\n    typeof mode.shouldDuckAndroid !== 'boolean' ||\n    typeof mode.playThroughEarpieceAndroid !== 'boolean'\n  ) {\n    throw new Error(\n      '\"allowsRecordingIOS\", \"playsInSilentModeIOS\", \"playThroughEarpieceAndroid\", \"staysActiveInBackground\" and \"shouldDuckAndroid\" must be booleans.'\n    );\n  }\n  currentAudioMode = mode;\n  return await ExponentAV.setAudioMode(mode);\n}\n"],"mappings":"AAAA,OAAoBA,uBAAuB,CAAEC,mBAAmB,KAAQ,eAAe,CACvF,MAAO,CAAAC,UAAU,KAAM,cAAc,CAErC,WAAc,mBAAmB,CACjC,WAAc,eAAe,CAC7B,OAASC,iBAAiB,KAAQ,2BAA2B,CAC7D,OAASC,sBAAsB,KAAQ,MAAM,CAE7C,KAAM,CAAAC,oBAAoB,CAAGA,CAC3BC,aAAiC,CACjCC,gBAA2B,GACd,CACb,IAAK,KAAM,CAAAC,GAAG,GAAI,CAAAD,gBAAgB,CAAE,CAClC,GAAI,CAACD,aAAa,CAACG,cAAc,CAACD,GAAG,CAAC,CAAE,CACtC,KAAM,CAAAE,IAAI,CAAGF,GAAsB,CACnCF,aAAa,CAACI,IAAI,CAAC,CAAGH,gBAAgB,CAACG,IAAI,CAAQ,CACrD,CACF,CACA,MAAO,CAAAJ,aAA0B,CACnC,CAAC,CAED,KAAM,CAAAK,WAAW,CAAc,CAC7BC,kBAAkB,CAAE,KAAK,CACzBC,mBAAmB,CAAEZ,mBAAmB,CAACa,aAAa,CACtDC,oBAAoB,CAAE,KAAK,CAC3BC,uBAAuB,CAAE,KAAK,CAC9BC,uBAAuB,CAAEjB,uBAAuB,CAACkB,UAAU,CAC3DC,iBAAiB,CAAE,IAAI,CACvBC,0BAA0B,CAAE,K,CAC7B,CAED,GAAI,CAAAC,gBAAgB,CAAqB,IAAI,CAE7C,QAAS,CAAAC,mBAAmBA,CAAA,EAC1B,GAAI,CAACD,gBAAgB,CAAE,CACrB,MAAO,CAAAV,WAAW,CACpB,CACA,MAAO,CAAAU,gBAAgB,CACzB,CAOA,MAAO,eAAe,CAAAE,iBAAiBA,CAACC,WAA+B,EACrE,KAAM,CAAAC,IAAI,CAAGpB,oBAAoB,CAACmB,WAAW,CAAEF,mBAAmB,EAAE,CAAC,CAErE,GAAI,CAACrB,mBAAmB,CAACwB,IAAI,CAACZ,mBAAmB,CAAC,CAAE,CAClD,KAAM,IAAI,CAAAa,KAAK,CAAC,oDAAoD,CAAC,CACvE,CACA,GAAI,CAAC1B,uBAAuB,CAACyB,IAAI,CAACR,uBAAuB,CAAC,CAAE,CAC1D,KAAM,IAAI,CAAAS,KAAK,CAAC,wDAAwD,CAAC,CAC3E,CACA,GACE,MAAO,CAAAD,IAAI,CAACb,kBAAkB,GAAK,SAAS,EAC5C,MAAO,CAAAa,IAAI,CAACV,oBAAoB,GAAK,SAAS,EAC9C,MAAO,CAAAU,IAAI,CAACT,uBAAuB,GAAK,SAAS,EACjD,MAAO,CAAAS,IAAI,CAACN,iBAAiB,GAAK,SAAS,EAC3C,MAAO,CAAAM,IAAI,CAACL,0BAA0B,GAAK,SAAS,CACpD,CACA,KAAM,IAAI,CAAAM,KAAK,CACb,iJAAiJ,CAClJ,CACH,CACAL,gBAAgB,CAAGI,IAAI,CACvB,MAAO,MAAM,CAAAvB,UAAU,CAACyB,YAAY,CAACF,IAAI,CAAC,CAC5C","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}