{"ast":null,"code":"\"use strict\";import*as React from'react';const MISSING_CONTEXT_ERROR=\"Couldn't find an UnhandledLinkingContext context.\";export const UnhandledLinkingContext=React.createContext({get lastUnhandledLink(){throw new Error(MISSING_CONTEXT_ERROR);},get setLastUnhandledLink(){throw new Error(MISSING_CONTEXT_ERROR);}});UnhandledLinkingContext.displayName='UnhandledLinkingContext';","map":{"version":3,"names":["React","MISSING_CONTEXT_ERROR","UnhandledLinkingContext","createContext","lastUnhandledLink","Error","setLastUnhandledLink","displayName"],"sources":["/home/user/rork-vibesync-458/node_modules/@react-navigation/native/src/UnhandledLinkingContext.tsx"],"sourcesContent":["import * as React from 'react';\n\nconst MISSING_CONTEXT_ERROR =\n  \"Couldn't find an UnhandledLinkingContext context.\";\n\nexport const UnhandledLinkingContext = React.createContext<{\n  lastUnhandledLink: string | undefined;\n  setLastUnhandledLink: (lastUnhandledUrl: string | undefined) => void;\n}>({\n  get lastUnhandledLink(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get setLastUnhandledLink(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n});\n\nUnhandledLinkingContext.displayName = 'UnhandledLinkingContext';\n"],"mappings":"aAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAE9B,KAAM,CAAAC,qBAAqB,CACzB,mDAAmD,CAErD,MAAO,MAAM,CAAAC,uBAAuB,CAAGF,KAAK,CAACG,aAAa,CAGvD,CACD,GAAI,CAAAC,iBAAiBA,CAAA,CAAQ,CAC3B,KAAM,IAAI,CAAAC,KAAK,CAACJ,qBAAqB,CAAC,CACxC,CAAC,CACD,GAAI,CAAAK,oBAAoBA,CAAA,CAAQ,CAC9B,KAAM,IAAI,CAAAD,KAAK,CAACJ,qBAAqB,CAAC,CACxC,CACF,CAAC,CAAC,CAEFC,uBAAuB,CAACK,WAAW,CAAG,yBAAyB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}