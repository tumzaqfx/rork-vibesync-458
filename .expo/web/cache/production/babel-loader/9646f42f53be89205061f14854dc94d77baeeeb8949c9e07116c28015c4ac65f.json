{"ast":null,"code":"import React,{useState,useCallback,useMemo}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Platform from\"react-native-web/dist/exports/Platform\";import{LinearGradient}from'expo-linear-gradient';import{Avatar}from'@/components/ui/Avatar';import{VerifiedBadge}from'@/components/ui/VerifiedBadge';import{useTheme}from'@/hooks/theme-store';import{useDiscovery}from'@/hooks/discovery-store';import{router}from'expo-router';import{MapPin,Users}from'lucide-react-native';import*as Haptics from'expo-haptics';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CARD_WIDTH=140;const CARD_SPACING=12;export const SuggestedFriendsRow=({maxSuggestions=10})=>{const{colors}=useTheme();const{getHybridSuggestions}=useDiscovery();const[followedUsers,setFollowedUsers]=useState(new Set());const suggestions=useMemo(()=>{return getHybridSuggestions().slice(0,maxSuggestions);},[getHybridSuggestions,maxSuggestions]);const handleFollow=useCallback(userId=>{if(false){Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Medium);}setFollowedUsers(prev=>{const newSet=new Set(prev);if(newSet.has(userId)){newSet.delete(userId);}else{newSet.add(userId);}return newSet;});},[]);const handleUserPress=useCallback(userId=>{router.push(`/user/${userId}`);},[]);const getReasonLabel=useCallback(suggestion=>{if(suggestion.isContact){return'From Contacts';}if(suggestion.distance&&suggestion.mutualCount){return`${suggestion.distance}km • ${suggestion.mutualCount} mutuals`;}if(suggestion.distance){return`${suggestion.distance}km away`;}if(suggestion.mutualCount){return`${suggestion.mutualCount} mutual${suggestion.mutualCount>1?'s':''}`;}return'Suggested for you';},[]);const getSuggestionTypeLabel=useCallback(()=>{const types=new Set(suggestions.map(s=>s.primaryReason));if(types.has('contact'))return'Contacts on VibeSync';if(types.has('proximity')&&types.has('mutual'))return'Nearby Vibes • Mutuals';if(types.has('proximity'))return'Nearby Vibes';if(types.has('mutual'))return'Mutual Connections';return'Suggested for You';},[suggestions]);if(suggestions.length===0){return null;}return _jsxs(View,{style:[styles.container,{backgroundColor:colors.background}],children:[_jsxs(View,{style:styles.header,children:[_jsxs(View,{style:styles.headerLeft,children:[_jsx(Text,{style:[styles.headerTitle,{color:colors.text}],children:\"Suggested Friends\"}),_jsxs(View,{style:styles.headerBadge,children:[suggestions.some(s=>s.primaryReason==='proximity')&&_jsx(MapPin,{size:12,color:colors.primary}),suggestions.some(s=>s.primaryReason==='mutual')&&_jsx(Users,{size:12,color:colors.primary}),_jsx(Text,{style:[styles.headerBadgeText,{color:colors.primary}],children:getSuggestionTypeLabel()})]})]}),_jsx(TouchableOpacity,{onPress:()=>router.push('/(tabs)/discover'),children:_jsx(Text,{style:[styles.seeAllText,{color:colors.primary}],children:\"See All\"})})]}),_jsx(ScrollView,{horizontal:true,showsHorizontalScrollIndicator:false,contentContainerStyle:styles.scrollContent,decelerationRate:\"fast\",snapToInterval:CARD_WIDTH+CARD_SPACING,snapToAlignment:\"start\",children:suggestions.map((suggestion,index)=>{const isFollowed=followedUsers.has(suggestion.user.id);return _jsx(TouchableOpacity,{style:[styles.card,{backgroundColor:colors.card},index===0&&styles.firstCard],onPress:()=>handleUserPress(suggestion.user.id),activeOpacity:0.8,children:_jsxs(View,{style:styles.cardContent,children:[_jsxs(View,{style:styles.avatarContainer,children:[_jsx(Avatar,{uri:suggestion.user.profileImage,size:80}),suggestion.user.isVerified&&_jsx(View,{style:styles.verifiedBadge,children:_jsx(VerifiedBadge,{size:16})})]}),_jsxs(View,{style:styles.userInfo,children:[_jsx(Text,{style:[styles.displayName,{color:colors.text}],numberOfLines:1,children:suggestion.user.displayName}),_jsxs(Text,{style:[styles.username,{color:colors.textSecondary}],numberOfLines:1,children:[\"@\",suggestion.user.username]})]}),_jsx(View,{style:[styles.reasonBadge,{backgroundColor:colors.background}],children:_jsx(Text,{style:[styles.reasonText,{color:colors.textSecondary}],numberOfLines:1,children:getReasonLabel(suggestion)})}),_jsx(TouchableOpacity,{style:styles.followButton,onPress:()=>handleFollow(suggestion.user.id),activeOpacity:0.8,children:_jsx(LinearGradient,{colors:isFollowed?[colors.card,colors.card]:['#667eea','#764ba2'],start:{x:0,y:0},end:{x:1,y:1},style:[styles.followButtonGradient,isFollowed&&{borderWidth:1,borderColor:colors.border}],children:_jsx(Text,{style:[styles.followButtonText,{color:isFollowed?colors.text:'#FFFFFF'}],children:isFollowed?'Following':'Follow'})})})]})},suggestion.user.id);})})]});};const styles=StyleSheet.create({container:{paddingVertical:16},header:{flexDirection:'row',justifyContent:'space-between',alignItems:'center',paddingHorizontal:16,marginBottom:12},headerLeft:{flexDirection:'column',gap:4},headerTitle:{fontSize:18,fontWeight:'700'},headerBadge:{flexDirection:'row',alignItems:'center',gap:4},headerBadgeText:{fontSize:12,fontWeight:'600'},seeAllText:{fontSize:14,fontWeight:'600'},scrollContent:{paddingHorizontal:16,gap:CARD_SPACING},card:{width:CARD_WIDTH,borderRadius:16,overflow:'hidden',shadowColor:'#000',shadowOffset:{width:0,height:2},shadowOpacity:0.1,shadowRadius:8,elevation:3},firstCard:{marginLeft:0},cardContent:{padding:12,alignItems:'center'},avatarContainer:{position:'relative',marginBottom:8},verifiedBadge:{position:'absolute',bottom:0,right:0,backgroundColor:'#FFFFFF',borderRadius:12,padding:2},userInfo:{alignItems:'center',marginBottom:8,width:'100%'},displayName:{fontSize:14,fontWeight:'700',marginBottom:2},username:{fontSize:12,fontWeight:'500'},reasonBadge:{paddingHorizontal:8,paddingVertical:4,borderRadius:8,marginBottom:12,width:'100%'},reasonText:{fontSize:10,fontWeight:'600',textAlign:'center'},followButton:{width:'100%'},followButtonGradient:{paddingVertical:8,paddingHorizontal:16,borderRadius:20,alignItems:'center'},followButtonText:{fontSize:13,fontWeight:'700'}});","map":{"version":3,"names":["React","useState","useCallback","useMemo","StyleSheet","View","Text","ScrollView","TouchableOpacity","Platform","LinearGradient","Avatar","VerifiedBadge","useTheme","useDiscovery","router","MapPin","Users","Haptics","jsx","_jsx","jsxs","_jsxs","CARD_WIDTH","CARD_SPACING","SuggestedFriendsRow","maxSuggestions","colors","getHybridSuggestions","followedUsers","setFollowedUsers","Set","suggestions","slice","handleFollow","userId","impactAsync","ImpactFeedbackStyle","Medium","prev","newSet","has","delete","add","handleUserPress","push","getReasonLabel","suggestion","isContact","distance","mutualCount","getSuggestionTypeLabel","types","map","s","primaryReason","length","style","styles","container","backgroundColor","background","children","header","headerLeft","headerTitle","color","text","headerBadge","some","size","primary","headerBadgeText","onPress","seeAllText","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","scrollContent","decelerationRate","snapToInterval","snapToAlignment","index","isFollowed","user","id","card","firstCard","activeOpacity","cardContent","avatarContainer","uri","profileImage","isVerified","verifiedBadge","userInfo","displayName","numberOfLines","username","textSecondary","reasonBadge","reasonText","followButton","start","x","y","end","followButtonGradient","borderWidth","borderColor","border","followButtonText","create","paddingVertical","flexDirection","justifyContent","alignItems","paddingHorizontal","marginBottom","gap","fontSize","fontWeight","width","borderRadius","overflow","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","marginLeft","padding","position","bottom","right","textAlign"],"sources":["/home/user/rork-vibesync-458/components/discover/SuggestedFriendsRow.tsx"],"sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\nimport { StyleSheet, View, Text, ScrollView, TouchableOpacity, Platform } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Avatar } from '@/components/ui/Avatar';\nimport { VerifiedBadge } from '@/components/ui/VerifiedBadge';\nimport { useTheme } from '@/hooks/theme-store';\nimport { useDiscovery } from '@/hooks/discovery-store';\nimport { router } from 'expo-router';\nimport { MapPin, Users } from 'lucide-react-native';\nimport * as Haptics from 'expo-haptics';\n\nconst CARD_WIDTH = 140;\nconst CARD_SPACING = 12;\n\ninterface SuggestedFriendsRowProps {\n  maxSuggestions?: number;\n}\n\nexport const SuggestedFriendsRow: React.FC<SuggestedFriendsRowProps> = ({ maxSuggestions = 10 }) => {\n  const { colors } = useTheme();\n  const { getHybridSuggestions } = useDiscovery();\n  const [followedUsers, setFollowedUsers] = useState<Set<string>>(new Set());\n\n  const suggestions = useMemo(() => {\n    return getHybridSuggestions().slice(0, maxSuggestions);\n  }, [getHybridSuggestions, maxSuggestions]);\n\n  const handleFollow = useCallback((userId: string) => {\n    if (Platform.OS !== 'web') {\n      Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Medium);\n    }\n    setFollowedUsers((prev) => {\n      const newSet = new Set(prev);\n      if (newSet.has(userId)) {\n        newSet.delete(userId);\n      } else {\n        newSet.add(userId);\n      }\n      return newSet;\n    });\n  }, []);\n\n  const handleUserPress = useCallback((userId: string) => {\n    router.push(`/user/${userId}`);\n  }, []);\n\n  const getReasonLabel = useCallback((suggestion: any) => {\n    if (suggestion.isContact) {\n      return 'From Contacts';\n    }\n    if (suggestion.distance && suggestion.mutualCount) {\n      return `${suggestion.distance}km • ${suggestion.mutualCount} mutuals`;\n    }\n    if (suggestion.distance) {\n      return `${suggestion.distance}km away`;\n    }\n    if (suggestion.mutualCount) {\n      return `${suggestion.mutualCount} mutual${suggestion.mutualCount > 1 ? 's' : ''}`;\n    }\n    return 'Suggested for you';\n  }, []);\n\n  const getSuggestionTypeLabel = useCallback(() => {\n    const types = new Set(suggestions.map(s => s.primaryReason));\n    if (types.has('contact')) return 'Contacts on VibeSync';\n    if (types.has('proximity') && types.has('mutual')) return 'Nearby Vibes • Mutuals';\n    if (types.has('proximity')) return 'Nearby Vibes';\n    if (types.has('mutual')) return 'Mutual Connections';\n    return 'Suggested for You';\n  }, [suggestions]);\n\n  if (suggestions.length === 0) {\n    return null;\n  }\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background }]}>\n      <View style={styles.header}>\n        <View style={styles.headerLeft}>\n          <Text style={[styles.headerTitle, { color: colors.text }]}>Suggested Friends</Text>\n          <View style={styles.headerBadge}>\n            {suggestions.some(s => s.primaryReason === 'proximity') && (\n              <MapPin size={12} color={colors.primary} />\n            )}\n            {suggestions.some(s => s.primaryReason === 'mutual') && (\n              <Users size={12} color={colors.primary} />\n            )}\n            <Text style={[styles.headerBadgeText, { color: colors.primary }]}>\n              {getSuggestionTypeLabel()}\n            </Text>\n          </View>\n        </View>\n        <TouchableOpacity onPress={() => router.push('/(tabs)/discover')}>\n          <Text style={[styles.seeAllText, { color: colors.primary }]}>See All</Text>\n        </TouchableOpacity>\n      </View>\n\n      <ScrollView\n        horizontal\n        showsHorizontalScrollIndicator={false}\n        contentContainerStyle={styles.scrollContent}\n        decelerationRate=\"fast\"\n        snapToInterval={CARD_WIDTH + CARD_SPACING}\n        snapToAlignment=\"start\"\n      >\n        {suggestions.map((suggestion, index) => {\n          const isFollowed = followedUsers.has(suggestion.user.id);\n          \n          return (\n            <TouchableOpacity\n              key={suggestion.user.id}\n              style={[\n                styles.card,\n                { backgroundColor: colors.card },\n                index === 0 && styles.firstCard,\n              ]}\n              onPress={() => handleUserPress(suggestion.user.id)}\n              activeOpacity={0.8}\n            >\n              <View style={styles.cardContent}>\n                <View style={styles.avatarContainer}>\n                  <Avatar uri={suggestion.user.profileImage} size={80} />\n                  {suggestion.user.isVerified && (\n                    <View style={styles.verifiedBadge}>\n                      <VerifiedBadge size={16} />\n                    </View>\n                  )}\n                </View>\n\n                <View style={styles.userInfo}>\n                  <Text\n                    style={[styles.displayName, { color: colors.text }]}\n                    numberOfLines={1}\n                  >\n                    {suggestion.user.displayName}\n                  </Text>\n                  <Text\n                    style={[styles.username, { color: colors.textSecondary }]}\n                    numberOfLines={1}\n                  >\n                    @{suggestion.user.username}\n                  </Text>\n                </View>\n\n                <View style={[styles.reasonBadge, { backgroundColor: colors.background }]}>\n                  <Text\n                    style={[styles.reasonText, { color: colors.textSecondary }]}\n                    numberOfLines={1}\n                  >\n                    {getReasonLabel(suggestion)}\n                  </Text>\n                </View>\n\n                <TouchableOpacity\n                  style={styles.followButton}\n                  onPress={() => handleFollow(suggestion.user.id)}\n                  activeOpacity={0.8}\n                >\n                  <LinearGradient\n                    colors={isFollowed ? [colors.card, colors.card] : ['#667eea', '#764ba2']}\n                    start={{ x: 0, y: 0 }}\n                    end={{ x: 1, y: 1 }}\n                    style={[\n                      styles.followButtonGradient,\n                      isFollowed && { borderWidth: 1, borderColor: colors.border },\n                    ]}\n                  >\n                    <Text\n                      style={[\n                        styles.followButtonText,\n                        { color: isFollowed ? colors.text : '#FFFFFF' },\n                      ]}\n                    >\n                      {isFollowed ? 'Following' : 'Follow'}\n                    </Text>\n                  </LinearGradient>\n                </TouchableOpacity>\n              </View>\n            </TouchableOpacity>\n          );\n        })}\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 16,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 16,\n    marginBottom: 12,\n  },\n  headerLeft: {\n    flexDirection: 'column',\n    gap: 4,\n  },\n  headerTitle: {\n    fontSize: 18,\n    fontWeight: '700' as const,\n  },\n  headerBadge: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n  },\n  headerBadgeText: {\n    fontSize: 12,\n    fontWeight: '600' as const,\n  },\n  seeAllText: {\n    fontSize: 14,\n    fontWeight: '600' as const,\n  },\n  scrollContent: {\n    paddingHorizontal: 16,\n    gap: CARD_SPACING,\n  },\n  card: {\n    width: CARD_WIDTH,\n    borderRadius: 16,\n    overflow: 'hidden',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 3,\n  },\n  firstCard: {\n    marginLeft: 0,\n  },\n  cardContent: {\n    padding: 12,\n    alignItems: 'center',\n  },\n  avatarContainer: {\n    position: 'relative',\n    marginBottom: 8,\n  },\n  verifiedBadge: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    backgroundColor: '#FFFFFF',\n    borderRadius: 12,\n    padding: 2,\n  },\n  userInfo: {\n    alignItems: 'center',\n    marginBottom: 8,\n    width: '100%',\n  },\n  displayName: {\n    fontSize: 14,\n    fontWeight: '700' as const,\n    marginBottom: 2,\n  },\n  username: {\n    fontSize: 12,\n    fontWeight: '500' as const,\n  },\n  reasonBadge: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 8,\n    marginBottom: 12,\n    width: '100%',\n  },\n  reasonText: {\n    fontSize: 10,\n    fontWeight: '600' as const,\n    textAlign: 'center',\n  },\n  followButton: {\n    width: '100%',\n  },\n  followButtonGradient: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderRadius: 20,\n    alignItems: 'center',\n  },\n  followButtonText: {\n    fontSize: 13,\n    fontWeight: '700' as const,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}