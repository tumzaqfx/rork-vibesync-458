{"ast":null,"code":"'use strict';function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r]);}return n;},_extends.apply(null,arguments);}import React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import\"../layoutReanimation/animationsManager.js\";import invariant from'invariant';import{adaptViewConfig}from\"../ConfigHelper.js\";import{findHostInstance}from'../platform-specific/findHostInstance';import{enableLayoutAnimations}from\"../core.js\";import{SharedTransition,LayoutAnimationType}from\"../layoutReanimation/index.js\";import{getShadowNodeWrapperFromRef}from'../fabricUtils';import{removeFromPropsRegistry}from\"../PropsRegistry.js\";import{getReduceMotionFromConfig}from\"../animation/util.js\";import{maybeBuild}from\"../animationBuilder.js\";import{SkipEnteringContext}from\"../component/LayoutAnimationConfig.js\";import JSPropsUpdater from'./JSPropsUpdater';import{flattenArray}from\"./utils.js\";import setAndForwardRef from\"./setAndForwardRef.js\";import{isFabric,isJest,isWeb,shouldBeUseWeb}from\"../PlatformChecker.js\";import{InlinePropManager}from\"./InlinePropManager.js\";import{PropsFilter}from\"./PropsFilter.js\";import{startWebLayoutAnimation,tryActivateLayoutTransition,configureWebLayoutAnimations,getReducedMotionFromConfig,saveSnapshot}from\"../layoutReanimation/web/index.js\";import{updateLayoutAnimations}from\"../UpdateLayoutAnimations.js\";import{addHTMLMutationObserver}from\"../layoutReanimation/web/domUtils.js\";import{getViewInfo}from\"./getViewInfo.js\";import{NativeEventsManager}from\"./NativeEventsManager.js\";import{ReanimatedError}from\"../errors.js\";const IS_WEB=isWeb();const IS_JEST=isJest();const SHOULD_BE_USE_WEB=shouldBeUseWeb();if(IS_WEB){configureWebLayoutAnimations();}function onlyAnimatedStyles(styles){return styles.filter(style=>style?.viewDescriptors);}let id=0;export function createAnimatedComponent(Component,options){invariant(typeof Component!=='function'||Component.prototype&&Component.prototype.isReactComponent,`Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`);class AnimatedComponent extends React.Component{_styles=null;_isFirstRender=true;jestAnimatedStyle={value:{}};_componentRef=null;_sharedElementTransition=null;_jsPropsUpdater=new JSPropsUpdater();_InlinePropManager=new InlinePropManager();_PropsFilter=new PropsFilter();static contextType=SkipEnteringContext;reanimatedID=id++;constructor(props){super(props);if(IS_JEST){this.jestAnimatedStyle={value:{}};}const entering=this.props.entering;if(entering&&isFabric()){updateLayoutAnimations(this.reanimatedID,LayoutAnimationType.ENTERING,maybeBuild(entering,this.props?.style,AnimatedComponent.displayName));}}componentDidMount(){if(!IS_WEB){this._NativeEventsManager=new NativeEventsManager(this,options);}this._NativeEventsManager?.attachEvents();this._jsPropsUpdater.addOnJSPropsChangeListener(this);this._attachAnimatedStyles();this._InlinePropManager.attachInlineProps(this,this._getViewInfo());const layout=this.props.layout;if(layout){this._configureLayoutTransition();}if(IS_WEB){if(this.props.exiting){saveSnapshot(this._componentRef);}if(!this.props.entering||getReducedMotionFromConfig(this.props.entering)){this._isFirstRender=false;return;}const skipEntering=this.context?.current;if(!skipEntering){startWebLayoutAnimation(this.props,this._componentRef,LayoutAnimationType.ENTERING);}else{this._componentRef.style.visibility='initial';}}this._isFirstRender=false;}componentWillUnmount(){this._NativeEventsManager?.detachEvents();this._jsPropsUpdater.removeOnJSPropsChangeListener(this);this._detachStyles();this._InlinePropManager.detachInlineProps();if(this.props.sharedTransitionTag){this._configureSharedTransition(true);}this._sharedElementTransition?.unregisterTransition(this.getComponentViewTag(),true);const exiting=this.props.exiting;if(IS_WEB&&this._componentRef&&exiting&&!getReducedMotionFromConfig(exiting)){addHTMLMutationObserver();startWebLayoutAnimation(this.props,this._componentRef,LayoutAnimationType.EXITING);}else if(exiting&&!IS_WEB&&!isFabric()){const reduceMotionInExiting='getReduceMotion'in exiting&&typeof exiting.getReduceMotion==='function'?getReduceMotionFromConfig(exiting.getReduceMotion()):getReduceMotionFromConfig();if(!reduceMotionInExiting){updateLayoutAnimations(this.getComponentViewTag(),LayoutAnimationType.EXITING,maybeBuild(exiting,this.props?.style,AnimatedComponent.displayName));}}}getComponentViewTag(){return this._getViewInfo().viewTag;}_detachStyles(){const viewTag=this.getComponentViewTag();if(viewTag!==-1&&this._styles!==null){for(const style of this._styles){style.viewDescriptors.remove(viewTag);}if(this.props.animatedProps?.viewDescriptors){this.props.animatedProps.viewDescriptors.remove(viewTag);}if(isFabric()){removeFromPropsRegistry(viewTag);}}}_updateFromNative(props){if(options?.setNativeProps){options.setNativeProps(this._componentRef,props);}else{this._componentRef?.setNativeProps?.(props);}}_getViewInfo(){if(this._viewInfo!==undefined){return this._viewInfo;}let viewTag;let viewName;let shadowNodeWrapper=null;let viewConfig;if(SHOULD_BE_USE_WEB){viewTag=this._componentRef;viewName=null;shadowNodeWrapper=null;viewConfig=null;}else{const hostInstance=findHostInstance(this);if(!hostInstance){throw new ReanimatedError('Cannot find host instance for this component. Maybe it renders nothing?');}const viewInfo=getViewInfo(hostInstance);viewTag=viewInfo.viewTag;viewName=viewInfo.viewName;viewConfig=viewInfo.viewConfig;shadowNodeWrapper=isFabric()?getShadowNodeWrapperFromRef(this,hostInstance):null;}this._viewInfo={viewTag,viewName,shadowNodeWrapper,viewConfig};return this._viewInfo;}_attachAnimatedStyles(){const styles=this.props.style?onlyAnimatedStyles(flattenArray(this.props.style)):[];const prevStyles=this._styles;this._styles=styles;const prevAnimatedProps=this._animatedProps;this._animatedProps=this.props.animatedProps;const{viewTag,viewName,shadowNodeWrapper,viewConfig}=this._getViewInfo();const hasReanimated2Props=this.props.animatedProps?.viewDescriptors||styles.length;if(hasReanimated2Props&&viewConfig){adaptViewConfig(viewConfig);}if(prevStyles){const hasOneSameStyle=styles.length===1&&prevStyles.length===1&&styles[0]===prevStyles[0];if(!hasOneSameStyle){for(const prevStyle of prevStyles){const isPresent=styles.some(style=>style===prevStyle);if(!isPresent){prevStyle.viewDescriptors.remove(viewTag);}}}}styles.forEach(style=>{style.viewDescriptors.add({tag:viewTag,name:viewName,shadowNodeWrapper});if(IS_JEST){this.jestAnimatedStyle.value=Object.assign({},this.jestAnimatedStyle.value,style.initial.value);style.jestAnimatedStyle.current=this.jestAnimatedStyle;}});if(prevAnimatedProps&&prevAnimatedProps!==this.props.animatedProps){prevAnimatedProps.viewDescriptors.remove(viewTag);}if(this.props.animatedProps?.viewDescriptors){this.props.animatedProps.viewDescriptors.add({tag:viewTag,name:viewName,shadowNodeWrapper:shadowNodeWrapper});}}componentDidUpdate(prevProps,_prevState,snapshot){const layout=this.props.layout;const oldLayout=prevProps.layout;if(layout!==oldLayout){this._configureLayoutTransition();}if(this.props.sharedTransitionTag!==undefined||prevProps.sharedTransitionTag!==undefined){this._configureSharedTransition();}this._NativeEventsManager?.updateEvents(prevProps);this._attachAnimatedStyles();this._InlinePropManager.attachInlineProps(this,this._getViewInfo());if(IS_WEB&&this.props.exiting){saveSnapshot(this._componentRef);}if(IS_WEB&&snapshot!==null&&this.props.layout&&!getReducedMotionFromConfig(this.props.layout)){tryActivateLayoutTransition(this.props,this._componentRef,snapshot);}}_configureLayoutTransition(){if(IS_WEB){return;}const layout=this.props.layout?maybeBuild(this.props.layout,undefined,AnimatedComponent.displayName):undefined;updateLayoutAnimations(this.getComponentViewTag(),LayoutAnimationType.LAYOUT,layout);}_configureSharedTransition(isUnmounting=false){if(IS_WEB){return;}const{sharedTransitionTag}=this.props;if(!sharedTransitionTag){this._sharedElementTransition?.unregisterTransition(this.getComponentViewTag(),isUnmounting);this._sharedElementTransition=null;return;}const sharedElementTransition=this.props.sharedTransitionStyle??this._sharedElementTransition??new SharedTransition();sharedElementTransition.registerTransition(this.getComponentViewTag(),sharedTransitionTag,isUnmounting);this._sharedElementTransition=sharedElementTransition;}_resolveComponentRef=ref=>{const componentRef=ref;if(componentRef&&componentRef.getAnimatableRef){return componentRef.getAnimatableRef();}return componentRef;};_setComponentRef=setAndForwardRef({getForwardedRef:()=>this.props.forwardedRef,setLocalRef:ref=>{if(!ref){return;}if(ref!==this._componentRef){this._componentRef=this._resolveComponentRef(ref);this._viewInfo=undefined;}const tag=this.getComponentViewTag();const{layout,entering,exiting,sharedTransitionTag}=this.props;if(layout||entering||exiting||sharedTransitionTag){if(!SHOULD_BE_USE_WEB){enableLayoutAnimations(true,false);}if(sharedTransitionTag){this._configureSharedTransition();}if(exiting&&isFabric()){const reduceMotionInExiting='getReduceMotion'in exiting&&typeof exiting.getReduceMotion==='function'?getReduceMotionFromConfig(exiting.getReduceMotion()):getReduceMotionFromConfig();if(!reduceMotionInExiting){updateLayoutAnimations(tag,LayoutAnimationType.EXITING,maybeBuild(exiting,this.props?.style,AnimatedComponent.displayName));}}const skipEntering=this.context?.current;if(entering&&!skipEntering&&!IS_WEB){updateLayoutAnimations(tag,LayoutAnimationType.ENTERING,maybeBuild(entering,this.props?.style,AnimatedComponent.displayName));}}}});getSnapshotBeforeUpdate(){if(IS_WEB&&this._componentRef?.getBoundingClientRect!==undefined){return this._componentRef.getBoundingClientRect();}return null;}render(){const filteredProps=this._PropsFilter.filterNonAnimatedProps(this);if(IS_JEST){filteredProps.jestAnimatedStyle=this.jestAnimatedStyle;}if(this._isFirstRender&&IS_WEB&&filteredProps.entering&&!getReducedMotionFromConfig(filteredProps.entering)){filteredProps.style=Object.assign({},filteredProps.style??{},{visibility:'hidden'});}const platformProps={};const skipEntering=this.context?.current;const nativeID=skipEntering||!isFabric()?undefined:`${this.reanimatedID}`;const jestProps=IS_JEST?{jestInlineStyle:this.props.style,jestAnimatedStyle:this.jestAnimatedStyle}:{};return React.createElement(Component,_extends({nativeID:nativeID},filteredProps,jestProps,{ref:this._setComponentRef},platformProps));}}AnimatedComponent.displayName=`AnimatedComponent(${Component.displayName||Component.name||'Component'})`;return React.forwardRef((props,ref)=>{return React.createElement(AnimatedComponent,_extends({},props,ref===null?null:{forwardedRef:ref}));});}","map":{"version":3,"names":["_extends","Object","assign","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","React","Platform","invariant","adaptViewConfig","findHostInstance","enableLayoutAnimations","SharedTransition","LayoutAnimationType","getShadowNodeWrapperFromRef","removeFromPropsRegistry","getReduceMotionFromConfig","maybeBuild","SkipEnteringContext","JSPropsUpdater","flattenArray","setAndForwardRef","isFabric","isJest","isWeb","shouldBeUseWeb","InlinePropManager","PropsFilter","startWebLayoutAnimation","tryActivateLayoutTransition","configureWebLayoutAnimations","getReducedMotionFromConfig","saveSnapshot","updateLayoutAnimations","addHTMLMutationObserver","getViewInfo","NativeEventsManager","ReanimatedError","IS_WEB","IS_JEST","SHOULD_BE_USE_WEB","onlyAnimatedStyles","styles","filter","style","viewDescriptors","id","createAnimatedComponent","Component","options","prototype","isReactComponent","name","AnimatedComponent","_styles","_isFirstRender","jestAnimatedStyle","value","_componentRef","_sharedElementTransition","_jsPropsUpdater","_InlinePropManager","_PropsFilter","contextType","reanimatedID","constructor","props","entering","ENTERING","displayName","componentDidMount","_NativeEventsManager","attachEvents","addOnJSPropsChangeListener","_attachAnimatedStyles","attachInlineProps","_getViewInfo","layout","_configureLayoutTransition","exiting","skipEntering","context","current","visibility","componentWillUnmount","detachEvents","removeOnJSPropsChangeListener","_detachStyles","detachInlineProps","sharedTransitionTag","_configureSharedTransition","unregisterTransition","getComponentViewTag","EXITING","reduceMotionInExiting","getReduceMotion","viewTag","remove","animatedProps","_updateFromNative","setNativeProps","_viewInfo","undefined","viewName","shadowNodeWrapper","viewConfig","hostInstance","viewInfo","prevStyles","prevAnimatedProps","_animatedProps","hasReanimated2Props","hasOneSameStyle","prevStyle","isPresent","some","forEach","add","tag","initial","componentDidUpdate","prevProps","_prevState","snapshot","oldLayout","updateEvents","LAYOUT","isUnmounting","sharedElementTransition","sharedTransitionStyle","registerTransition","_resolveComponentRef","ref","componentRef","getAnimatableRef","_setComponentRef","getForwardedRef","forwardedRef","setLocalRef","getSnapshotBeforeUpdate","getBoundingClientRect","render","filteredProps","filterNonAnimatedProps","platformProps","nativeID","jestProps","jestInlineStyle","createElement","forwardRef"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/createAnimatedComponent/createAnimatedComponent.tsx"],"sourcesContent":["'use strict';\nimport type {\n  Component,\n  ComponentClass,\n  ComponentType,\n  FunctionComponent,\n  MutableRefObject,\n} from 'react';\nimport React from 'react';\nimport { Platform } from 'react-native';\nimport '../layoutReanimation/animationsManager';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from '../ConfigHelper';\nimport { findHostInstance } from '../platform-specific/findHostInstance';\nimport { enableLayoutAnimations } from '../core';\nimport { SharedTransition, LayoutAnimationType } from '../layoutReanimation';\nimport type { StyleProps, ShadowNodeWrapper } from '../commonTypes';\nimport { getShadowNodeWrapperFromRef } from '../fabricUtils';\nimport { removeFromPropsRegistry } from '../PropsRegistry';\nimport { getReduceMotionFromConfig } from '../animation/util';\nimport { maybeBuild } from '../animationBuilder';\nimport { SkipEnteringContext } from '../component/LayoutAnimationConfig';\nimport type { AnimateProps } from '../helperTypes';\nimport JSPropsUpdater from './JSPropsUpdater';\nimport type {\n  AnimatedComponentProps,\n  AnimatedProps,\n  InitialComponentProps,\n  AnimatedComponentRef,\n  IAnimatedComponentInternal,\n  ViewInfo,\n  INativeEventsManager,\n  NestedArray,\n} from './commonTypes';\nimport { flattenArray } from './utils';\nimport setAndForwardRef from './setAndForwardRef';\nimport { isFabric, isJest, isWeb, shouldBeUseWeb } from '../PlatformChecker';\nimport { InlinePropManager } from './InlinePropManager';\nimport { PropsFilter } from './PropsFilter';\nimport {\n  startWebLayoutAnimation,\n  tryActivateLayoutTransition,\n  configureWebLayoutAnimations,\n  getReducedMotionFromConfig,\n  saveSnapshot,\n} from '../layoutReanimation/web';\nimport { updateLayoutAnimations } from '../UpdateLayoutAnimations';\nimport type { CustomConfig } from '../layoutReanimation/web/config';\nimport type { FlatList, FlatListProps } from 'react-native';\nimport { addHTMLMutationObserver } from '../layoutReanimation/web/domUtils';\nimport { getViewInfo } from './getViewInfo';\nimport { NativeEventsManager } from './NativeEventsManager';\nimport type { ReanimatedHTMLElement } from '../js-reanimated';\nimport { ReanimatedError } from '../errors';\n\nconst IS_WEB = isWeb();\nconst IS_JEST = isJest();\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\nif (IS_WEB) {\n  configureWebLayoutAnimations();\n}\n\nfunction onlyAnimatedStyles(styles: StyleProps[]): StyleProps[] {\n  return styles.filter((style) => style?.viewDescriptors);\n}\n\ntype Options<P> = {\n  setNativeProps: (ref: AnimatedComponentRef, props: P) => void;\n};\n\n/**\n * Lets you create an Animated version of any React Native component.\n *\n * @param component - The component you want to make animatable.\n * @returns A component that Reanimated is capable of animating.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/createAnimatedComponent\n */\n\n// Don't change the order of overloads, since such a change breaks current behavior\nexport function createAnimatedComponent<P extends object>(\n  component: FunctionComponent<P>,\n  options?: Options<P>\n): FunctionComponent<AnimateProps<P>>;\n\nexport function createAnimatedComponent<P extends object>(\n  component: ComponentClass<P>,\n  options?: Options<P>\n): ComponentClass<AnimateProps<P>>;\n\nexport function createAnimatedComponent<P extends object>(\n  // Actually ComponentType<P = {}> = ComponentClass<P> | FunctionComponent<P> but we need this overload too\n  // since some external components (like FastImage) are typed just as ComponentType\n  component: ComponentType<P>,\n  options?: Options<P>\n): FunctionComponent<AnimateProps<P>> | ComponentClass<AnimateProps<P>>;\n\n/**\n * @deprecated Please use `Animated.FlatList` component instead of calling\n *   `Animated.createAnimatedComponent(FlatList)` manually.\n */\n// @ts-ignore This is required to create this overload, since type of createAnimatedComponent is incorrect and doesn't include typeof FlatList\nexport function createAnimatedComponent(\n  component: typeof FlatList<unknown>,\n  options?: Options<any>\n): ComponentClass<AnimateProps<FlatListProps<unknown>>>;\n\nlet id = 0;\n\nexport function createAnimatedComponent(\n  Component: ComponentType<InitialComponentProps>,\n  options?: Options<InitialComponentProps>\n): any {\n  invariant(\n    typeof Component !== 'function' ||\n      (Component.prototype && Component.prototype.isReactComponent),\n    `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`\n  );\n\n  class AnimatedComponent\n    extends React.Component<AnimatedComponentProps<InitialComponentProps>>\n    implements IAnimatedComponentInternal\n  {\n    _styles: StyleProps[] | null = null;\n    _animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n    _isFirstRender = true;\n    jestInlineStyle: NestedArray<StyleProps> | undefined;\n    jestAnimatedStyle: { value: StyleProps } = { value: {} };\n    _componentRef: AnimatedComponentRef | HTMLElement | null = null;\n    _sharedElementTransition: SharedTransition | null = null;\n    _jsPropsUpdater = new JSPropsUpdater();\n    _InlinePropManager = new InlinePropManager();\n    _PropsFilter = new PropsFilter();\n    _NativeEventsManager?: INativeEventsManager;\n    _viewInfo?: ViewInfo;\n    static displayName: string;\n    static contextType = SkipEnteringContext;\n    context!: React.ContextType<typeof SkipEnteringContext>;\n    reanimatedID = id++;\n\n    constructor(props: AnimatedComponentProps<InitialComponentProps>) {\n      super(props);\n      if (IS_JEST) {\n        this.jestAnimatedStyle = { value: {} };\n      }\n      const entering = this.props.entering;\n      if (entering && isFabric()) {\n        updateLayoutAnimations(\n          this.reanimatedID,\n          LayoutAnimationType.ENTERING,\n          maybeBuild(entering, this.props?.style, AnimatedComponent.displayName)\n        );\n      }\n    }\n\n    componentDidMount() {\n      if (!IS_WEB) {\n        // It exists only on native platforms. We initialize it here because the ref to the animated component is available only post-mount\n        this._NativeEventsManager = new NativeEventsManager(this, options);\n      }\n      this._NativeEventsManager?.attachEvents();\n      this._jsPropsUpdater.addOnJSPropsChangeListener(this);\n      this._attachAnimatedStyles();\n      this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n\n      const layout = this.props.layout;\n      if (layout) {\n        this._configureLayoutTransition();\n      }\n\n      if (IS_WEB) {\n        if (this.props.exiting) {\n          saveSnapshot(this._componentRef as HTMLElement);\n        }\n\n        if (\n          !this.props.entering ||\n          getReducedMotionFromConfig(this.props.entering as CustomConfig)\n        ) {\n          this._isFirstRender = false;\n          return;\n        }\n\n        const skipEntering = this.context?.current;\n\n        if (!skipEntering) {\n          startWebLayoutAnimation(\n            this.props,\n            this._componentRef as ReanimatedHTMLElement,\n            LayoutAnimationType.ENTERING\n          );\n        } else {\n          (this._componentRef as HTMLElement).style.visibility = 'initial';\n        }\n      }\n\n      this._isFirstRender = false;\n    }\n\n    componentWillUnmount() {\n      this._NativeEventsManager?.detachEvents();\n      this._jsPropsUpdater.removeOnJSPropsChangeListener(this);\n      this._detachStyles();\n      this._InlinePropManager.detachInlineProps();\n      if (this.props.sharedTransitionTag) {\n        this._configureSharedTransition(true);\n      }\n      this._sharedElementTransition?.unregisterTransition(\n        this.getComponentViewTag(),\n        true\n      );\n\n      const exiting = this.props.exiting;\n\n      if (\n        IS_WEB &&\n        this._componentRef &&\n        exiting &&\n        !getReducedMotionFromConfig(exiting as CustomConfig)\n      ) {\n        addHTMLMutationObserver();\n\n        startWebLayoutAnimation(\n          this.props,\n          this._componentRef as ReanimatedHTMLElement,\n          LayoutAnimationType.EXITING\n        );\n      } else if (exiting && !IS_WEB && !isFabric()) {\n        const reduceMotionInExiting =\n          'getReduceMotion' in exiting &&\n          typeof exiting.getReduceMotion === 'function'\n            ? getReduceMotionFromConfig(exiting.getReduceMotion())\n            : getReduceMotionFromConfig();\n        if (!reduceMotionInExiting) {\n          updateLayoutAnimations(\n            this.getComponentViewTag(),\n            LayoutAnimationType.EXITING,\n            maybeBuild(\n              exiting,\n              this.props?.style,\n              AnimatedComponent.displayName\n            )\n          );\n        }\n      }\n    }\n\n    getComponentViewTag() {\n      return this._getViewInfo().viewTag as number;\n    }\n\n    _detachStyles() {\n      const viewTag = this.getComponentViewTag();\n      if (viewTag !== -1 && this._styles !== null) {\n        for (const style of this._styles) {\n          style.viewDescriptors.remove(viewTag);\n        }\n        if (this.props.animatedProps?.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.remove(viewTag);\n        }\n        if (isFabric()) {\n          removeFromPropsRegistry(viewTag);\n        }\n      }\n    }\n\n    _updateFromNative(props: StyleProps) {\n      if (options?.setNativeProps) {\n        options.setNativeProps(\n          this._componentRef as AnimatedComponentRef,\n          props\n        );\n      } else {\n        (this._componentRef as AnimatedComponentRef)?.setNativeProps?.(props);\n      }\n    }\n\n    _getViewInfo(): ViewInfo {\n      if (this._viewInfo !== undefined) {\n        return this._viewInfo;\n      }\n\n      let viewTag: number | HTMLElement | null;\n      let viewName: string | null;\n      let shadowNodeWrapper: ShadowNodeWrapper | null = null;\n      let viewConfig;\n\n      if (SHOULD_BE_USE_WEB) {\n        // At this point I assume that `_setComponentRef` was already called and `_component` is set.\n        // `this._component` on web represents HTMLElement of our component, that's why we use casting\n        viewTag = this._componentRef as HTMLElement;\n        viewName = null;\n        shadowNodeWrapper = null;\n        viewConfig = null;\n      } else {\n        const hostInstance = findHostInstance(this);\n        if (!hostInstance) {\n          /* \n            findHostInstance can return null for a component that doesn't render anything \n            (render function returns null). Example: \n            svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n          */\n          throw new ReanimatedError(\n            'Cannot find host instance for this component. Maybe it renders nothing?'\n          );\n        }\n\n        const viewInfo = getViewInfo(hostInstance);\n        viewTag = viewInfo.viewTag;\n        viewName = viewInfo.viewName;\n        viewConfig = viewInfo.viewConfig;\n        shadowNodeWrapper = isFabric()\n          ? getShadowNodeWrapperFromRef(this, hostInstance)\n          : null;\n      }\n      this._viewInfo = { viewTag, viewName, shadowNodeWrapper, viewConfig };\n      return this._viewInfo;\n    }\n\n    _attachAnimatedStyles() {\n      const styles = this.props.style\n        ? onlyAnimatedStyles(flattenArray<StyleProps>(this.props.style))\n        : [];\n      const prevStyles = this._styles;\n      this._styles = styles;\n\n      const prevAnimatedProps = this._animatedProps;\n      this._animatedProps = this.props.animatedProps;\n\n      const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n        this._getViewInfo();\n\n      // update UI props whitelist for this view\n      const hasReanimated2Props =\n        this.props.animatedProps?.viewDescriptors || styles.length;\n      if (hasReanimated2Props && viewConfig) {\n        adaptViewConfig(viewConfig);\n      }\n\n      // remove old styles\n      if (prevStyles) {\n        // in most of the cases, views have only a single animated style and it remains unchanged\n        const hasOneSameStyle =\n          styles.length === 1 &&\n          prevStyles.length === 1 &&\n          styles[0] === prevStyles[0];\n\n        if (!hasOneSameStyle) {\n          // otherwise, remove each style that is not present in new styles\n          for (const prevStyle of prevStyles) {\n            const isPresent = styles.some((style) => style === prevStyle);\n            if (!isPresent) {\n              prevStyle.viewDescriptors.remove(viewTag);\n            }\n          }\n        }\n      }\n\n      styles.forEach((style) => {\n        style.viewDescriptors.add({\n          tag: viewTag,\n          name: viewName,\n          shadowNodeWrapper,\n        });\n        if (IS_JEST) {\n          /**\n           * We need to connect Jest's TestObject instance whose contains just\n           * props object with the updateProps() function where we update the\n           * properties of the component. We can't update props object directly\n           * because TestObject contains a copy of props - look at render\n           * function: const props = this._filterNonAnimatedProps(this.props);\n           */\n          this.jestAnimatedStyle.value = {\n            ...this.jestAnimatedStyle.value,\n            ...style.initial.value,\n          };\n          style.jestAnimatedStyle.current = this.jestAnimatedStyle;\n        }\n      });\n\n      // detach old animatedProps\n      if (prevAnimatedProps && prevAnimatedProps !== this.props.animatedProps) {\n        prevAnimatedProps.viewDescriptors!.remove(viewTag as number);\n      }\n\n      // attach animatedProps property\n      if (this.props.animatedProps?.viewDescriptors) {\n        this.props.animatedProps.viewDescriptors.add({\n          tag: viewTag as number,\n          name: viewName!,\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n    }\n\n    componentDidUpdate(\n      prevProps: AnimatedComponentProps<InitialComponentProps>,\n      _prevState: Readonly<unknown>,\n      // This type comes straight from React\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      snapshot: DOMRect | null\n    ) {\n      const layout = this.props.layout;\n      const oldLayout = prevProps.layout;\n      if (layout !== oldLayout) {\n        this._configureLayoutTransition();\n      }\n      if (\n        this.props.sharedTransitionTag !== undefined ||\n        prevProps.sharedTransitionTag !== undefined\n      ) {\n        this._configureSharedTransition();\n      }\n      this._NativeEventsManager?.updateEvents(prevProps);\n      this._attachAnimatedStyles();\n      this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n\n      if (IS_WEB && this.props.exiting) {\n        saveSnapshot(this._componentRef as HTMLElement);\n      }\n\n      // Snapshot won't be undefined because it comes from getSnapshotBeforeUpdate method\n      if (\n        IS_WEB &&\n        snapshot !== null &&\n        this.props.layout &&\n        !getReducedMotionFromConfig(this.props.layout as CustomConfig)\n      ) {\n        tryActivateLayoutTransition(\n          this.props,\n          this._componentRef as ReanimatedHTMLElement,\n          snapshot\n        );\n      }\n    }\n\n    _configureLayoutTransition() {\n      if (IS_WEB) {\n        return;\n      }\n\n      const layout = this.props.layout\n        ? maybeBuild(\n            this.props.layout,\n            undefined /* We don't have to warn user if style has common properties with animation for LAYOUT */,\n            AnimatedComponent.displayName\n          )\n        : undefined;\n      updateLayoutAnimations(\n        this.getComponentViewTag(),\n        LayoutAnimationType.LAYOUT,\n        layout\n      );\n    }\n\n    _configureSharedTransition(isUnmounting = false) {\n      if (IS_WEB) {\n        return;\n      }\n\n      const { sharedTransitionTag } = this.props;\n      if (!sharedTransitionTag) {\n        this._sharedElementTransition?.unregisterTransition(\n          this.getComponentViewTag(),\n          isUnmounting\n        );\n        this._sharedElementTransition = null;\n        return;\n      }\n      const sharedElementTransition =\n        this.props.sharedTransitionStyle ??\n        this._sharedElementTransition ??\n        new SharedTransition();\n      sharedElementTransition.registerTransition(\n        this.getComponentViewTag(),\n        sharedTransitionTag,\n        isUnmounting\n      );\n      this._sharedElementTransition = sharedElementTransition;\n    }\n\n    _resolveComponentRef = (ref: Component | HTMLElement | null) => {\n      const componentRef = ref as AnimatedComponentRef;\n      // Component can specify ref which should be animated when animated version of the component is created.\n      // Otherwise, we animate the component itself.\n      if (componentRef && componentRef.getAnimatableRef) {\n        return componentRef.getAnimatableRef();\n      }\n      return componentRef;\n    };\n\n    _setComponentRef = setAndForwardRef<Component | HTMLElement>({\n      getForwardedRef: () =>\n        this.props.forwardedRef as MutableRefObject<\n          Component<Record<string, unknown>, Record<string, unknown>, unknown>\n        >,\n      setLocalRef: (ref) => {\n        if (!ref) {\n          // component has been unmounted\n          return;\n        }\n        if (ref !== this._componentRef) {\n          this._componentRef = this._resolveComponentRef(ref);\n          // if ref is changed, reset viewInfo\n          this._viewInfo = undefined;\n        }\n        const tag = this.getComponentViewTag();\n\n        const { layout, entering, exiting, sharedTransitionTag } = this.props;\n        if (layout || entering || exiting || sharedTransitionTag) {\n          if (!SHOULD_BE_USE_WEB) {\n            enableLayoutAnimations(true, false);\n          }\n\n          if (sharedTransitionTag) {\n            this._configureSharedTransition();\n          }\n          if (exiting && isFabric()) {\n            const reduceMotionInExiting =\n              'getReduceMotion' in exiting &&\n              typeof exiting.getReduceMotion === 'function'\n                ? getReduceMotionFromConfig(exiting.getReduceMotion())\n                : getReduceMotionFromConfig();\n            if (!reduceMotionInExiting) {\n              updateLayoutAnimations(\n                tag,\n                LayoutAnimationType.EXITING,\n                maybeBuild(\n                  exiting,\n                  this.props?.style,\n                  AnimatedComponent.displayName\n                )\n              );\n            }\n          }\n\n          const skipEntering = this.context?.current;\n          if (entering && !skipEntering && !IS_WEB) {\n            updateLayoutAnimations(\n              tag,\n              LayoutAnimationType.ENTERING,\n              maybeBuild(\n                entering,\n                this.props?.style,\n                AnimatedComponent.displayName\n              )\n            );\n          }\n        }\n      },\n    });\n\n    // This is a component lifecycle method from React, therefore we are not calling it directly.\n    // It is called before the component gets rerendered. This way we can access components' position before it changed\n    // and later on, in componentDidUpdate, calculate translation for layout transition.\n    getSnapshotBeforeUpdate() {\n      if (\n        IS_WEB &&\n        (this._componentRef as HTMLElement)?.getBoundingClientRect !== undefined\n      ) {\n        return (this._componentRef as HTMLElement).getBoundingClientRect();\n      }\n\n      return null;\n    }\n\n    render() {\n      const filteredProps = this._PropsFilter.filterNonAnimatedProps(this);\n\n      if (IS_JEST) {\n        filteredProps.jestAnimatedStyle = this.jestAnimatedStyle;\n      }\n\n      // Layout animations on web are set inside `componentDidMount` method, which is called after first render.\n      // Because of that we can encounter a situation in which component is visible for a short amount of time, and later on animation triggers.\n      // I've tested that on various browsers and devices and it did not happen to me. To be sure that it won't happen to someone else,\n      // I've decided to hide component at first render. Its visibility is reset in `componentDidMount`.\n      if (\n        this._isFirstRender &&\n        IS_WEB &&\n        filteredProps.entering &&\n        !getReducedMotionFromConfig(filteredProps.entering as CustomConfig)\n      ) {\n        filteredProps.style = {\n          ...(filteredProps.style ?? {}),\n          visibility: 'hidden', // Hide component until `componentDidMount` triggers\n        };\n      }\n\n      const platformProps = Platform.select({\n        web: {},\n        default: { collapsable: false },\n      });\n\n      const skipEntering = this.context?.current;\n      const nativeID =\n        skipEntering || !isFabric() ? undefined : `${this.reanimatedID}`;\n\n      const jestProps = IS_JEST\n        ? {\n            jestInlineStyle: this.props.style,\n            jestAnimatedStyle: this.jestAnimatedStyle,\n          }\n        : {};\n\n      return (\n        <Component\n          nativeID={nativeID}\n          {...filteredProps}\n          {...jestProps}\n          // Casting is used here, because ref can be null - in that case it cannot be assigned to HTMLElement.\n          // After spending some time trying to figure out what to do with this problem, we decided to leave it this way\n          ref={this._setComponentRef as (ref: Component) => void}\n          {...platformProps}\n        />\n      );\n    }\n  }\n\n  AnimatedComponent.displayName = `AnimatedComponent(${\n    Component.displayName || Component.name || 'Component'\n  })`;\n\n  return React.forwardRef<Component>((props, ref) => {\n    return (\n      <AnimatedComponent\n        {...props}\n        {...(ref === null ? null : { forwardedRef: ref })}\n      />\n    );\n  });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}