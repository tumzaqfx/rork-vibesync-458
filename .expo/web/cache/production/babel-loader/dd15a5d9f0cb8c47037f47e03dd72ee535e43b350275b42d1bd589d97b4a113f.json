{"ast":null,"code":"\"use strict\";'use client';var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||(\"get\"in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function(){return m[k];}};}Object.defineProperty(o,k2,desc);}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,\"default\",{enumerable:true,value:v});}:function(o,v){o[\"default\"]=v;});var __importStar=this&&this.__importStar||function(){var ownKeys=function(o){ownKeys=Object.getOwnPropertyNames||function(o){var ar=[];for(var k in o)if(Object.prototype.hasOwnProperty.call(o,k))ar[ar.length]=k;return ar;};return ownKeys(o);};return function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k=ownKeys(mod),i=0;i<k.length;i++)if(k[i]!==\"default\")__createBinding(result,mod,k[i]);__setModuleDefault(result,mod);return result;};}();Object.defineProperty(exports,\"__esModule\",{value:true});exports.useFocusEffect=useFocusEffect;const React=__importStar(require(\"react\"));const useLoadedNavigation_1=require(\"./link/useLoadedNavigation\");function useFocusEffect(effect,do_not_pass_a_second_prop){const navigation=(0,useLoadedNavigation_1.useOptionalNavigation)();if(do_not_pass_a_second_prop!==undefined){const message=\"You passed a second argument to 'useFocusEffect', but it only accepts one argument. \"+\"If you want to pass a dependency array, you can use 'React.useCallback':\\n\\n\"+'useFocusEffect(\\n'+'  React.useCallback(() => {\\n'+'    // Your code here\\n'+'  }, [depA, depB])\\n'+');\\n\\n'+'See usage guide: https://reactnavigation.org/docs/use-focus-effect';console.error(message);}React.useEffect(()=>{if(!navigation){return;}let isFocused=false;let cleanup;const callback=()=>{const destroy=effect();if(destroy===undefined||typeof destroy==='function'){return destroy;}if(false){let message='An effect function must not return anything besides a function, which is used for clean-up.';if(destroy===null){message+=\" You returned 'null'. If your effect does not require clean-up, return 'undefined' (or nothing).\";}else if(typeof destroy.then==='function'){message+=\"\\n\\nIt looks like you wrote 'useFocusEffect(async () => ...)' or returned a Promise. \"+'Instead, write the async function inside your effect '+'and call it immediately:\\n\\n'+'useFocusEffect(\\n'+'  React.useCallback(() => {\\n'+'    async function fetchData() {\\n'+'      // You can await here\\n'+'      const response = await MyAPI.getData(someId);\\n'+'      // ...\\n'+'    }\\n\\n'+'    fetchData();\\n'+'  }, [someId])\\n'+');\\n\\n'+'See usage guide: https://reactnavigation.org/docs/use-focus-effect';}else{message+=` You returned '${JSON.stringify(destroy)}'.`;}console.error(message);}};if(navigation.isFocused()){cleanup=callback();isFocused=true;}const unsubscribeFocus=navigation.addListener('focus',()=>{if(isFocused){return;}if(cleanup!==undefined){cleanup();}cleanup=callback();isFocused=true;});const unsubscribeBlur=navigation.addListener('blur',()=>{if(cleanup!==undefined){cleanup();}cleanup=undefined;isFocused=false;});return()=>{if(cleanup!==undefined){cleanup();}unsubscribeFocus();unsubscribeBlur();};},[effect,navigation]);}","map":{"version":3,"names":["exports","useFocusEffect","React","__importStar","require","useLoadedNavigation_1","effect","do_not_pass_a_second_prop","navigation","useOptionalNavigation","undefined","message","console","error","useEffect","isFocused","cleanup","callback","destroy","then","JSON","stringify","unsubscribeFocus","addListener","unsubscribeBlur"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-router/src/useFocusEffect.ts"],"sourcesContent":["'use client';\n// A fork of `useFocusEffect` that waits for the navigation state to load before\n// running the effect. This is especially useful for native redirects.\nimport * as React from 'react';\n\nimport { useOptionalNavigation } from './link/useLoadedNavigation';\n\n/**\n * Memoized callback containing the effect, should optionally return a cleanup function.\n */\nexport type EffectCallback = () => undefined | void | (() => void);\n\n/**\n * Hook to run an effect whenever a route is **focused**. Similar to\n * [`React.useEffect`](https://react.dev/reference/react/useEffect).\n *\n * This can be used to perform side-effects such as fetching data or subscribing to events.\n * The passed callback should be wrapped in [`React.useCallback`](https://react.dev/reference/react/useCallback)\n * to avoid running the effect too often.\n *\n * @example\n * ```tsx\n * import { useFocusEffect } from 'expo-router';\n * import { useCallback } from 'react';\n *\n * export default function Route() {\n *   useFocusEffect(\n *     // Callback should be wrapped in `React.useCallback` to avoid running the effect too often.\n *     useCallback(() => {\n *       // Invoked whenever the route is focused.\n *       console.log('Hello, I'm focused!');\n *\n *       // Return function is invoked whenever the route gets out of focus.\n *       return () => {\n *         console.log('This route is now unfocused.');\n *       };\n *     }, []);\n *    );\n *\n *  return </>;\n * }\n *```\n *\n * @param effect Memoized callback containing the effect, should optionally return a cleanup function.\n * @param do_not_pass_a_second_prop\n */\nexport function useFocusEffect(effect: EffectCallback, do_not_pass_a_second_prop?: never) {\n  const navigation = useOptionalNavigation();\n\n  if (do_not_pass_a_second_prop !== undefined) {\n    const message =\n      \"You passed a second argument to 'useFocusEffect', but it only accepts one argument. \" +\n      \"If you want to pass a dependency array, you can use 'React.useCallback':\\n\\n\" +\n      'useFocusEffect(\\n' +\n      '  React.useCallback(() => {\\n' +\n      '    // Your code here\\n' +\n      '  }, [depA, depB])\\n' +\n      ');\\n\\n' +\n      'See usage guide: https://reactnavigation.org/docs/use-focus-effect';\n\n    console.error(message);\n  }\n\n  React.useEffect(() => {\n    if (!navigation) {\n      return;\n    }\n\n    let isFocused = false;\n    let cleanup: undefined | void | (() => void);\n\n    const callback = () => {\n      const destroy = effect();\n\n      if (destroy === undefined || typeof destroy === 'function') {\n        return destroy;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        let message =\n          'An effect function must not return anything besides a function, which is used for clean-up.';\n\n        if (destroy === null) {\n          message +=\n            \" You returned 'null'. If your effect does not require clean-up, return 'undefined' (or nothing).\";\n        } else if (typeof (destroy as any).then === 'function') {\n          message +=\n            \"\\n\\nIt looks like you wrote 'useFocusEffect(async () => ...)' or returned a Promise. \" +\n            'Instead, write the async function inside your effect ' +\n            'and call it immediately:\\n\\n' +\n            'useFocusEffect(\\n' +\n            '  React.useCallback(() => {\\n' +\n            '    async function fetchData() {\\n' +\n            '      // You can await here\\n' +\n            '      const response = await MyAPI.getData(someId);\\n' +\n            '      // ...\\n' +\n            '    }\\n\\n' +\n            '    fetchData();\\n' +\n            '  }, [someId])\\n' +\n            ');\\n\\n' +\n            'See usage guide: https://reactnavigation.org/docs/use-focus-effect';\n        } else {\n          message += ` You returned '${JSON.stringify(destroy)}'.`;\n        }\n\n        console.error(message);\n      }\n    };\n\n    // We need to run the effect on initial render/dep changes if the screen is focused\n    if (navigation.isFocused()) {\n      cleanup = callback();\n      isFocused = true;\n    }\n\n    const unsubscribeFocus = navigation.addListener('focus', () => {\n      // If callback was already called for focus, avoid calling it again\n      // The focus event may also fire on initial render, so we guard against running the effect twice\n      if (isFocused) {\n        return;\n      }\n\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      cleanup = callback();\n      isFocused = true;\n    });\n\n    const unsubscribeBlur = navigation.addListener('blur', () => {\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      cleanup = undefined;\n      isFocused = false;\n    });\n\n    return () => {\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      unsubscribeFocus();\n      unsubscribeBlur();\n    };\n  }, [effect, navigation]);\n}\n"],"mappings":"aAAA,YAAY,C,kjCA8CZA,OAAA,CAAAC,cAAA,CAAAA,cAAA,CA3CA,MAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA,WAEA,MAAAC,qBAAA,CAAAD,OAAA,+BAyCA,QAAgB,CAAAH,cAAcA,CAACK,MAAsB,CAAEC,yBAAiC,EACtF,KAAM,CAAAC,UAAU,CAAG,GAAAH,qBAAA,CAAAI,qBAAqB,GAAE,CAE1C,GAAIF,yBAAyB,GAAKG,SAAS,CAAE,CAC3C,KAAM,CAAAC,OAAO,CACX,sFAAsF,CACtF,8EAA8E,CAC9E,mBAAmB,CACnB,+BAA+B,CAC/B,yBAAyB,CACzB,sBAAsB,CACtB,QAAQ,CACR,oEAAoE,CAEtEC,OAAO,CAACC,KAAK,CAACF,OAAO,CAAC,CACxB,CAEAT,KAAK,CAACY,SAAS,CAAC,IAAK,CACnB,GAAI,CAACN,UAAU,CAAE,CACf,OACF,CAEA,GAAI,CAAAO,SAAS,CAAG,KAAK,CACrB,GAAI,CAAAC,OAAwC,CAE5C,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAK,CACpB,KAAM,CAAAC,OAAO,CAAGZ,MAAM,EAAE,CAExB,GAAIY,OAAO,GAAKR,SAAS,EAAI,MAAO,CAAAQ,OAAO,GAAK,UAAU,CAAE,CAC1D,MAAO,CAAAA,OAAO,CAChB,CAEA,SAA2C,CACzC,GAAI,CAAAP,OAAO,CACT,6FAA6F,CAE/F,GAAIO,OAAO,GAAK,IAAI,CAAE,CACpBP,OAAO,EACL,kGAAkG,CACtG,CAAC,IAAM,IAAI,MAAQ,CAAAO,OAAe,CAACC,IAAI,GAAK,UAAU,CAAE,CACtDR,OAAO,EACL,uFAAuF,CACvF,uDAAuD,CACvD,8BAA8B,CAC9B,mBAAmB,CACnB,+BAA+B,CAC/B,oCAAoC,CACpC,+BAA+B,CAC/B,uDAAuD,CACvD,gBAAgB,CAChB,WAAW,CACX,oBAAoB,CACpB,kBAAkB,CAClB,QAAQ,CACR,oEAAoE,CACxE,CAAC,IAAM,CACLA,OAAO,EAAI,kBAAkBS,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC,IAAI,CAC1D,CAEAN,OAAO,CAACC,KAAK,CAACF,OAAO,CAAC,CACxB,CACF,CAAC,CAGD,GAAIH,UAAU,CAACO,SAAS,EAAE,CAAE,CAC1BC,OAAO,CAAGC,QAAQ,EAAE,CACpBF,SAAS,CAAG,IAAI,CAClB,CAEA,KAAM,CAAAO,gBAAgB,CAAGd,UAAU,CAACe,WAAW,CAAC,OAAO,CAAE,IAAK,CAG5D,GAAIR,SAAS,CAAE,CACb,OACF,CAEA,GAAIC,OAAO,GAAKN,SAAS,CAAE,CACzBM,OAAO,EAAE,CACX,CAEAA,OAAO,CAAGC,QAAQ,EAAE,CACpBF,SAAS,CAAG,IAAI,CAClB,CAAC,CAAC,CAEF,KAAM,CAAAS,eAAe,CAAGhB,UAAU,CAACe,WAAW,CAAC,MAAM,CAAE,IAAK,CAC1D,GAAIP,OAAO,GAAKN,SAAS,CAAE,CACzBM,OAAO,EAAE,CACX,CAEAA,OAAO,CAAGN,SAAS,CACnBK,SAAS,CAAG,KAAK,CACnB,CAAC,CAAC,CAEF,MAAO,IAAK,CACV,GAAIC,OAAO,GAAKN,SAAS,CAAE,CACzBM,OAAO,EAAE,CACX,CAEAM,gBAAgB,EAAE,CAClBE,eAAe,EAAE,CACnB,CAAC,CACH,CAAC,CAAE,CAAClB,MAAM,CAAEE,UAAU,CAAC,CAAC,CAC1B","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}