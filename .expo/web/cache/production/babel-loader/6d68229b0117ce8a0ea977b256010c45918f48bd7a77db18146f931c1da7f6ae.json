{"ast":null,"code":"\"use strict\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"screen\",\"params\",\"action\",\"href\",\"style\"];import{useTheme}from'@react-navigation/core';import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import Text from\"react-native-web/dist/exports/Text\";import{useLinkProps}from\"./useLinkProps.js\";export function Link(_ref){let{screen,params,action,href,style}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const{colors,fonts}=useTheme();const props=useLinkProps({screen,params,action,href});const onPress=e=>{if('onPress'in rest){rest.onPress?.(e);}if(!e.defaultPrevented){props.onPress(e);}};return React.createElement(Text,Object.assign({},props,rest,{onClick:onPress},{style:[{color:colors.primary},fonts.regular,style]}));}","map":{"version":3,"names":["useTheme","React","Platform","Text","useLinkProps","Link","_ref","screen","params","action","href","style","rest","_objectWithoutPropertiesLoose","_excluded","colors","fonts","props","onPress","e","defaultPrevented","createElement","Object","assign","onClick","color","primary","regular"],"sources":["/home/user/rork-vibesync-458/node_modules/@react-navigation/native/src/Link.tsx"],"sourcesContent":["import { useTheme } from '@react-navigation/core';\nimport * as React from 'react';\nimport {\n  type GestureResponderEvent,\n  Platform,\n  Text,\n  type TextProps,\n} from 'react-native';\n\nimport { type LinkProps, useLinkProps } from './useLinkProps';\n\ntype Props<ParamList extends ReactNavigation.RootParamList> =\n  LinkProps<ParamList> &\n    Omit<TextProps, 'disabled'> & {\n      target?: string;\n      onPress?: (\n        e:\n          | React.MouseEvent<HTMLAnchorElement, MouseEvent>\n          | GestureResponderEvent\n      ) => void;\n      disabled?: boolean | null;\n      children: React.ReactNode;\n    };\n\n/**\n * Component to render link to another screen using a path.\n * Uses an anchor tag on the web.\n *\n * @param props.screen Name of the screen to navigate to (e.g. `'Feeds'`).\n * @param props.params Params to pass to the screen to navigate to (e.g. `{ sort: 'hot' }`).\n * @param props.href Optional absolute path to use for the href (e.g. `/feeds/hot`).\n * @param props.action Optional action to use for in-page navigation. By default, the path is parsed to an action based on linking config.\n * @param props.children Child elements to render the content.\n */\nexport function Link<ParamList extends ReactNavigation.RootParamList>({\n  screen,\n  params,\n  action,\n  href,\n  style,\n  ...rest\n}: Props<ParamList>) {\n  const { colors, fonts } = useTheme();\n  // @ts-expect-error: This is already type-checked by the prop types\n  const props = useLinkProps<ParamList>({ screen, params, action, href });\n\n  const onPress = (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => {\n    if ('onPress' in rest) {\n      rest.onPress?.(e);\n    }\n\n    // Let user prevent default behavior\n    if (!e.defaultPrevented) {\n      props.onPress(e);\n    }\n  };\n\n  return React.createElement(Text, {\n    ...props,\n    ...rest,\n    ...Platform.select({\n      web: { onClick: onPress } as any,\n      default: { onPress },\n    }),\n    style: [{ color: colors.primary }, fonts.regular, style],\n  });\n}\n"],"mappings":"wKAAA,OAASA,QAAQ,KAAQ,wBAAwB,CACjD,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,QAAAC,QAAA,qDAAAC,IAAA,0CAQ9B,OAAyBC,YAAY,KAAQ,mBAAgB,CAyB7D,MAAO,SAAS,CAAAC,IAAIA,CAAAC,IAAA,CAOC,IAPiD,CACpEC,MAAM,CACNC,MAAM,CACNC,MAAM,CACNC,IAAI,CACJC,KAEgB,CAAC,CAAAL,IAAA,CADdM,IAAA,CAAAC,6BAAA,CAAAP,IAAA,CAAAQ,SAAA,EAEH,KAAM,CAAEC,MAAM,CAAEC,KAAM,CAAC,CAAGhB,QAAQ,CAAC,CAAC,CAEpC,KAAM,CAAAiB,KAAK,CAAGb,YAAY,CAAY,CAAEG,MAAM,CAAEC,MAAM,CAAEC,MAAM,CAAEC,IAAK,CAAC,CAAC,CAEvE,KAAM,CAAAQ,OAAO,CACXC,CAA0E,EACvE,CACH,GAAI,SAAS,EAAI,CAAAP,IAAI,CAAE,CACrBA,IAAI,CAACM,OAAO,GAAGC,CAAC,CAAC,CACnB,CAGA,GAAI,CAACA,CAAC,CAACC,gBAAgB,CAAE,CACvBH,KAAK,CAACC,OAAO,CAACC,CAAC,CAAC,CAClB,CACF,CAAC,CAED,MAAO,CAAAlB,KAAK,CAACoB,aAAa,CAAClB,IAAI,CAAAmB,MAAA,CAAAC,MAAA,IAC1BN,KAAK,CACLL,IAAI,CAEA,CAAEY,OAAO,CAAEN,OAAQ,CAAQ,EAGlCP,KAAK,CAAE,CAAC,CAAEc,KAAK,CAAEV,MAAM,CAACW,OAAQ,CAAC,CAAEV,KAAK,CAACW,OAAO,CAAEhB,KAAK,GACxD,CAAC,CACJ","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}