{"ast":null,"code":"import React,{useEffect}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Alert from\"react-native-web/dist/exports/Alert\";import SectionList from\"react-native-web/dist/exports/SectionList\";import{Stack,router}from'expo-router';import{useNotifications}from'@/hooks/notification-store';import{useAuth}from'@/hooks/auth-store';import{Avatar}from'@/components/ui/Avatar';import{Button}from'@/components/ui/Button';import{Heart,ArrowLeft}from'lucide-react-native';import{useTheme}from'@/hooks/theme-store';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function NotificationsScreen(){const{isAuthenticated}=useAuth();const{colors}=useTheme();const{notifications,unreadCount,markAsRead,markAllAsRead,clearNotifications,createMockNotifications}=useNotifications();useEffect(()=>{if(!isAuthenticated){router.replace('/auth');return;}if(notifications.length===0){createMockNotifications();}},[isAuthenticated,notifications.length,createMockNotifications]);const groupNotificationsByTime=()=>{const now=new Date();const sevenDaysAgo=new Date(now.getTime()-7*24*60*60*1000);const thirtyDaysAgo=new Date(now.getTime()-30*24*60*60*1000);const last7Days=[];const last30Days=[];notifications.forEach(notification=>{const notifDate=new Date(notification.createdAt);if(notifDate>=sevenDaysAgo){last7Days.push(notification);}else if(notifDate>=thirtyDaysAgo){last30Days.push(notification);}});const sections=[];if(last7Days.length>0){sections.push({title:'Last 7 days',data:last7Days});}if(last30Days.length>0){sections.push({title:'Last 30 days',data:last30Days});}return sections;};const handleNotificationPress=notification=>{if(!notification.isRead){markAsRead(notification.id);}switch(notification.type){case'message':router.push('/messages');break;case'like':case'comment':if(notification.actionData?.postId){router.push(`/post/${notification.actionData.postId}`);}break;case'follow':if(notification.actionData?.userId){router.push(`/user/${notification.actionData.userId}`);}break;case'live':router.push('/(tabs)/sync');break;default:break;}};const handleClearAll=()=>{Alert.alert('Clear All Notifications','Are you sure you want to clear all notifications?',[{text:'Cancel',style:'cancel'},{text:'Clear',style:'destructive',onPress:clearNotifications}]);};const formatTime=timestamp=>{const now=new Date();const time=new Date(timestamp);const diff=now.getTime()-time.getTime();const minutes=Math.floor(diff/(1000*60));const hours=Math.floor(diff/(1000*60*60));const days=Math.floor(diff/(1000*60*60*24));const weeks=Math.floor(days/7);if(minutes<1)return'now';if(minutes<60)return`${minutes}m`;if(hours<24)return`${hours}h`;if(days<7)return`${days}d`;return`${weeks}w`;};const getNotificationText=notification=>{switch(notification.type){case'follow':return'started following you.';case'like':return'liked your post.';case'comment':return'commented on your post.';case'message':return'sent you a message.';default:return notification.message;}};const renderNotification=({item})=>{const isFollowNotification=item.type==='follow';return _jsxs(TouchableOpacity,{style:styles.notificationItem,onPress:()=>handleNotificationPress(item),activeOpacity:0.7,children:[_jsx(Avatar,{uri:item.actionData?.userAvatar||'https://i.pravatar.cc/150?img=1',size:44}),_jsx(View,{style:styles.notificationContent,children:_jsxs(Text,{style:[styles.notificationText,{color:colors.text}],children:[_jsx(Text,{style:styles.notificationUsername,children:item.title}),' ',_jsx(Text,{style:{color:colors.textSecondary},children:getNotificationText(item)}),' ',_jsx(Text,{style:{color:colors.textSecondary},children:formatTime(item.createdAt)})]})}),isFollowNotification&&_jsx(Button,{title:\"Follow\",onPress:()=>console.log('Follow user'),style:styles.followButton,textStyle:styles.followButtonText}),!item.isRead&&_jsx(View,{style:[styles.unreadDot,{backgroundColor:colors.primary}]})]});};const sections=groupNotificationsByTime();return _jsxs(View,{style:[styles.container,{backgroundColor:colors.background}],children:[_jsx(Stack.Screen,{options:{headerShown:true,title:'Notifications',headerStyle:{backgroundColor:colors.background},headerTitleStyle:{color:colors.text,fontSize:22,fontWeight:'bold'},headerTintColor:colors.text,headerLeft:()=>_jsx(TouchableOpacity,{onPress:()=>router.push('/(tabs)'),style:styles.backButton,children:_jsx(ArrowLeft,{size:24,color:colors.text})})}}),notifications.length===0?_jsxs(View,{style:styles.emptyContainer,children:[_jsx(View,{style:[styles.emptyIconContainer,{backgroundColor:colors.card}],children:_jsx(Heart,{size:48,color:colors.textSecondary})}),_jsx(Text,{style:[styles.emptyTitle,{color:colors.text}],children:\"No notifications yet\"}),_jsx(Text,{style:[styles.emptyMessage,{color:colors.textSecondary}],children:\"When someone likes or comments on your posts, you'll see them here.\"})]}):_jsx(SectionList,{sections:sections,keyExtractor:item=>item.id,renderItem:renderNotification,renderSectionHeader:({section:{title}})=>_jsx(View,{style:[styles.sectionHeader,{backgroundColor:colors.background}],children:_jsx(Text,{style:[styles.sectionTitle,{color:colors.text}],children:title})}),showsVerticalScrollIndicator:false,contentContainerStyle:styles.listContainer,stickySectionHeadersEnabled:false})]});}const styles=StyleSheet.create({container:{flex:1},backButton:{marginLeft:16,padding:8},listContainer:{paddingBottom:20},sectionHeader:{paddingHorizontal:16,paddingTop:20,paddingBottom:8},sectionTitle:{fontSize:16,fontWeight:'700'},notificationItem:{flexDirection:'row',alignItems:'center',paddingHorizontal:16,paddingVertical:12,gap:12},notificationContent:{flex:1},notificationText:{fontSize:14,lineHeight:18},notificationUsername:{fontWeight:'600'},followButton:{paddingHorizontal:24,paddingVertical:8,minHeight:32},followButtonText:{fontSize:14,fontWeight:'600'},unreadDot:{width:8,height:8,borderRadius:4},emptyContainer:{flex:1,justifyContent:'center',alignItems:'center',paddingHorizontal:40},emptyIconContainer:{width:96,height:96,borderRadius:48,justifyContent:'center',alignItems:'center',marginBottom:16},emptyTitle:{fontSize:22,fontWeight:'700',marginBottom:8,textAlign:'center'},emptyMessage:{fontSize:14,textAlign:'center',lineHeight:20}});","map":{"version":3,"names":["React","useEffect","StyleSheet","Text","View","TouchableOpacity","Alert","SectionList","Stack","router","useNotifications","useAuth","Avatar","Button","Heart","ArrowLeft","useTheme","jsx","_jsx","jsxs","_jsxs","NotificationsScreen","isAuthenticated","colors","notifications","unreadCount","markAsRead","markAllAsRead","clearNotifications","createMockNotifications","replace","length","groupNotificationsByTime","now","Date","sevenDaysAgo","getTime","thirtyDaysAgo","last7Days","last30Days","forEach","notification","notifDate","createdAt","push","sections","title","data","handleNotificationPress","isRead","id","type","actionData","postId","userId","handleClearAll","alert","text","style","onPress","formatTime","timestamp","time","diff","minutes","Math","floor","hours","days","weeks","getNotificationText","message","renderNotification","item","isFollowNotification","styles","notificationItem","activeOpacity","children","uri","userAvatar","size","notificationContent","notificationText","color","notificationUsername","textSecondary","console","log","followButton","textStyle","followButtonText","unreadDot","backgroundColor","primary","container","background","Screen","options","headerShown","headerStyle","headerTitleStyle","fontSize","fontWeight","headerTintColor","headerLeft","backButton","emptyContainer","emptyIconContainer","card","emptyTitle","emptyMessage","keyExtractor","renderItem","renderSectionHeader","section","sectionHeader","sectionTitle","showsVerticalScrollIndicator","contentContainerStyle","listContainer","stickySectionHeadersEnabled","create","flex","marginLeft","padding","paddingBottom","paddingHorizontal","paddingTop","flexDirection","alignItems","paddingVertical","gap","lineHeight","minHeight","width","height","borderRadius","justifyContent","marginBottom","textAlign"],"sources":["/home/user/rork-vibesync-458/app/notifications.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Alert, SectionList } from 'react-native';\nimport { Stack, router } from 'expo-router';\nimport { Colors } from '@/constants/colors';\nimport { useNotifications } from '@/hooks/notification-store';\nimport { useAuth } from '@/hooks/auth-store';\nimport { Avatar } from '@/components/ui/Avatar';\nimport { Button } from '@/components/ui/Button';\nimport { Heart, MessageCircle, UserPlus, Radio, Trash2, ArrowLeft } from 'lucide-react-native';\nimport { Notification } from '@/types';\nimport { useTheme } from '@/hooks/theme-store';\n\ntype NotificationSection = {\n  title: string;\n  data: Notification[];\n};\n\nexport default function NotificationsScreen() {\n  const { isAuthenticated } = useAuth();\n  const { colors } = useTheme();\n  const { \n    notifications, \n    unreadCount, \n    markAsRead, \n    markAllAsRead, \n    clearNotifications,\n    createMockNotifications \n  } = useNotifications();\n\n  useEffect(() => {\n    if (!isAuthenticated) {\n      router.replace('/auth');\n      return;\n    }\n    \n    // Create mock notifications if none exist\n    if (notifications.length === 0) {\n      createMockNotifications();\n    }\n  }, [isAuthenticated, notifications.length, createMockNotifications]);\n\n  const groupNotificationsByTime = (): NotificationSection[] => {\n    const now = new Date();\n    const sevenDaysAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n    const thirtyDaysAgo = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\n\n    const last7Days: Notification[] = [];\n    const last30Days: Notification[] = [];\n\n    notifications.forEach(notification => {\n      const notifDate = new Date(notification.createdAt);\n      if (notifDate >= sevenDaysAgo) {\n        last7Days.push(notification);\n      } else if (notifDate >= thirtyDaysAgo) {\n        last30Days.push(notification);\n      }\n    });\n\n    const sections: NotificationSection[] = [];\n    if (last7Days.length > 0) {\n      sections.push({ title: 'Last 7 days', data: last7Days });\n    }\n    if (last30Days.length > 0) {\n      sections.push({ title: 'Last 30 days', data: last30Days });\n    }\n\n    return sections;\n  };\n\n  const handleNotificationPress = (notification: Notification) => {\n    if (!notification.isRead) {\n      markAsRead(notification.id);\n    }\n\n    // Navigate based on notification type\n    switch (notification.type) {\n      case 'message':\n        router.push('/messages');\n        break;\n      case 'like':\n      case 'comment':\n        if (notification.actionData?.postId) {\n          router.push(`/post/${notification.actionData.postId}`);\n        }\n        break;\n      case 'follow':\n        if (notification.actionData?.userId) {\n          router.push(`/user/${notification.actionData.userId}`);\n        }\n        break;\n      case 'live':\n        router.push('/(tabs)/sync');\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleClearAll = () => {\n    Alert.alert(\n      'Clear All Notifications',\n      'Are you sure you want to clear all notifications?',\n      [\n        { text: 'Cancel', style: 'cancel' },\n        { \n          text: 'Clear', \n          style: 'destructive',\n          onPress: clearNotifications \n        },\n      ]\n    );\n  };\n\n  const formatTime = (timestamp: string) => {\n    const now = new Date();\n    const time = new Date(timestamp);\n    const diff = now.getTime() - time.getTime();\n    \n    const minutes = Math.floor(diff / (1000 * 60));\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    const weeks = Math.floor(days / 7);\n    \n    if (minutes < 1) return 'now';\n    if (minutes < 60) return `${minutes}m`;\n    if (hours < 24) return `${hours}h`;\n    if (days < 7) return `${days}d`;\n    return `${weeks}w`;\n  };\n\n  const getNotificationText = (notification: Notification) => {\n    switch (notification.type) {\n      case 'follow':\n        return 'started following you.';\n      case 'like':\n        return 'liked your post.';\n      case 'comment':\n        return 'commented on your post.';\n      case 'message':\n        return 'sent you a message.';\n      default:\n        return notification.message;\n    }\n  };\n\n  const renderNotification = ({ item }: { item: Notification }) => {\n    const isFollowNotification = item.type === 'follow';\n    \n    return (\n      <TouchableOpacity\n        style={styles.notificationItem}\n        onPress={() => handleNotificationPress(item)}\n        activeOpacity={0.7}\n      >\n        <Avatar\n          uri={item.actionData?.userAvatar || 'https://i.pravatar.cc/150?img=1'}\n          size={44}\n        />\n        \n        <View style={styles.notificationContent}>\n          <Text style={[styles.notificationText, { color: colors.text }]}>\n            <Text style={styles.notificationUsername}>{item.title}</Text>\n            {' '}\n            <Text style={{ color: colors.textSecondary }}>{getNotificationText(item)}</Text>\n            {' '}\n            <Text style={{ color: colors.textSecondary }}>{formatTime(item.createdAt)}</Text>\n          </Text>\n        </View>\n        \n        {isFollowNotification && (\n          <Button\n            title=\"Follow\"\n            onPress={() => console.log('Follow user')}\n            style={styles.followButton}\n            textStyle={styles.followButtonText}\n          />\n        )}\n        \n        {!item.isRead && <View style={[styles.unreadDot, { backgroundColor: colors.primary }]} />}\n      </TouchableOpacity>\n    );\n  };\n\n  const sections = groupNotificationsByTime();\n\n  return (\n    <View style={[styles.container, { backgroundColor: colors.background }]}>\n      <Stack.Screen \n        options={{ \n          headerShown: true,\n          title: 'Notifications',\n          headerStyle: { backgroundColor: colors.background },\n          headerTitleStyle: { \n            color: colors.text,\n            fontSize: 22,\n            fontWeight: 'bold' as const,\n          },\n          headerTintColor: colors.text,\n          headerLeft: () => (\n            <TouchableOpacity \n              onPress={() => router.push('/(tabs)')}\n              style={styles.backButton}\n            >\n              <ArrowLeft size={24} color={colors.text} />\n            </TouchableOpacity>\n          ),\n        }} \n      />\n      \n      {notifications.length === 0 ? (\n        <View style={styles.emptyContainer}>\n          <View style={[styles.emptyIconContainer, { backgroundColor: colors.card }]}>\n            <Heart size={48} color={colors.textSecondary} />\n          </View>\n          <Text style={[styles.emptyTitle, { color: colors.text }]}>No notifications yet</Text>\n          <Text style={[styles.emptyMessage, { color: colors.textSecondary }]}>\n            When someone likes or comments on your posts, you'll see them here.\n          </Text>\n        </View>\n      ) : (\n        <SectionList\n          sections={sections}\n          keyExtractor={(item) => item.id}\n          renderItem={renderNotification}\n          renderSectionHeader={({ section: { title } }) => (\n            <View style={[styles.sectionHeader, { backgroundColor: colors.background }]}>\n              <Text style={[styles.sectionTitle, { color: colors.text }]}>{title}</Text>\n            </View>\n          )}\n          showsVerticalScrollIndicator={false}\n          contentContainerStyle={styles.listContainer}\n          stickySectionHeadersEnabled={false}\n        />\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  backButton: {\n    marginLeft: 16,\n    padding: 8,\n  },\n  listContainer: {\n    paddingBottom: 20,\n  },\n  sectionHeader: {\n    paddingHorizontal: 16,\n    paddingTop: 20,\n    paddingBottom: 8,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: '700' as const,\n  },\n  notificationItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    gap: 12,\n  },\n  notificationContent: {\n    flex: 1,\n  },\n  notificationText: {\n    fontSize: 14,\n    lineHeight: 18,\n  },\n  notificationUsername: {\n    fontWeight: '600' as const,\n  },\n  followButton: {\n    paddingHorizontal: 24,\n    paddingVertical: 8,\n    minHeight: 32,\n  },\n  followButtonText: {\n    fontSize: 14,\n    fontWeight: '600' as const,\n  },\n  unreadDot: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 40,\n  },\n  emptyIconContainer: {\n    width: 96,\n    height: 96,\n    borderRadius: 48,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  emptyTitle: {\n    fontSize: 22,\n    fontWeight: '700' as const,\n    marginBottom: 8,\n    textAlign: 'center',\n  },\n  emptyMessage: {\n    fontSize: 14,\n    textAlign: 'center',\n    lineHeight: 20,\n  },\n});"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}