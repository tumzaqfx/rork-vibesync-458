{"ast":null,"code":"export function base64toBlob(base64Data,contentType){contentType=contentType||'';const sliceSize=1024;const byteCharacters=atob(base64Data);const bytesLength=byteCharacters.length;const slicesCount=Math.ceil(bytesLength/sliceSize);const byteArrays=new Array(slicesCount);for(let sliceIndex=0;sliceIndex<slicesCount;++sliceIndex){const begin=sliceIndex*sliceSize;const end=Math.min(begin+sliceSize,bytesLength);const bytes=new Array(end-begin);for(let offset=begin,i=0;offset<end;++i,++offset){bytes[i]=byteCharacters[offset].charCodeAt(0);}byteArrays[sliceIndex]=new Uint8Array(bytes);}return new Blob(byteArrays,{type:contentType});}export function blobToBase64Async(blob){return new Promise((resolve,_)=>{const reader=new FileReader();reader.onloadend=()=>resolve(reader.result);reader.readAsDataURL(blob);});}export function htmlToPlainText(html){const tempDivElement=document.createElement('div');tempDivElement.innerHTML=html;return tempDivElement.textContent||tempDivElement.innerText||'';}export function getImageSizeFromBlobAsync(blob){return new Promise((resolve,_)=>{const blobUrl=URL.createObjectURL(blob);const img=document.createElement('img');img.src=blobUrl;img.onload=function(){resolve({width:img.width,height:img.height});};});}export async function findImageInClipboardAsync(items){for(const clipboardItem of items){if(clipboardItem.types.some(type=>type==='image/png')){return await clipboardItem.getType('image/png');}if(clipboardItem.types.some(type=>type==='image/jpeg')){return await clipboardItem.getType('image/jpeg');}}return null;}export async function findHtmlInClipboardAsync(items){for(const clipboardItem of items){if(clipboardItem.types.some(type=>type==='text/html')){return await clipboardItem.getType('text/html');}}return null;}export async function isClipboardPermissionDeniedAsync(){const queryOpts={name:'clipboard-read'};const permissionStatus=await navigator.permissions.query(queryOpts);return permissionStatus.state==='denied';}","map":{"version":3,"names":["base64toBlob","base64Data","contentType","sliceSize","byteCharacters","atob","bytesLength","length","slicesCount","Math","ceil","byteArrays","Array","sliceIndex","begin","end","min","bytes","offset","i","charCodeAt","Uint8Array","Blob","type","blobToBase64Async","blob","Promise","resolve","_","reader","FileReader","onloadend","result","readAsDataURL","htmlToPlainText","html","tempDivElement","document","createElement","innerHTML","textContent","innerText","getImageSizeFromBlobAsync","blobUrl","URL","createObjectURL","img","src","onload","width","height","findImageInClipboardAsync","items","clipboardItem","types","some","getType","findHtmlInClipboardAsync","isClipboardPermissionDeniedAsync","queryOpts","name","permissionStatus","navigator","permissions","query","state"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-clipboard/src/web/Utils.ts"],"sourcesContent":["/**\n * Converts base64-encoded data to a `Blob` object.\n * @see https://stackoverflow.com/a/20151856\n */\nexport function base64toBlob(base64Data: string, contentType: string): Blob {\n  contentType = contentType || '';\n  const sliceSize = 1024;\n  const byteCharacters = atob(base64Data);\n  const bytesLength = byteCharacters.length;\n  const slicesCount = Math.ceil(bytesLength / sliceSize);\n  const byteArrays = new Array(slicesCount);\n\n  for (let sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\n    const begin = sliceIndex * sliceSize;\n    const end = Math.min(begin + sliceSize, bytesLength);\n\n    const bytes = new Array(end - begin);\n    for (let offset = begin, i = 0; offset < end; ++i, ++offset) {\n      bytes[i] = byteCharacters[offset].charCodeAt(0);\n    }\n    byteArrays[sliceIndex] = new Uint8Array(bytes);\n  }\n  // I cannot use `@ts-expect-error` here because some environments consider this correct:\n  // expo-module build - OK,\n  // expo-module test - error\n  // @ts-ignore `Blob` from `lib.dom.d.ts` and the one from `@types/react-native` differ somehow\n  return new Blob(byteArrays, { type: contentType });\n}\n\n/**\n * Converts blob to base64-encoded string with Data-URL prefix.\n */\nexport function blobToBase64Async(blob: Blob): Promise<string> {\n  return new Promise((resolve, _) => {\n    const reader = new FileReader();\n    reader.onloadend = () => resolve(reader.result as string);\n    reader.readAsDataURL(blob);\n  });\n}\n\nexport function htmlToPlainText(html: string) {\n  const tempDivElement = document.createElement('div');\n  tempDivElement.innerHTML = html;\n  return tempDivElement.textContent || tempDivElement.innerText || '';\n}\n\nexport function getImageSizeFromBlobAsync(blob: Blob): Promise<{ width: number; height: number }> {\n  return new Promise((resolve, _) => {\n    const blobUrl = URL.createObjectURL(blob);\n    const img = document.createElement('img');\n    img.src = blobUrl;\n    img.onload = function () {\n      resolve({ width: img.width, height: img.height });\n    };\n  });\n}\n\nexport async function findImageInClipboardAsync(items: ClipboardItems): Promise<Blob | null> {\n  for (const clipboardItem of items) {\n    // first look for png\n    if (clipboardItem.types.some((type) => type === 'image/png')) {\n      return await clipboardItem.getType('image/png');\n    }\n\n    // alternatively, an image might be a jpeg\n    // NOTE: Currently, this is not supported by browsers yet. They only support PNG now\n    if (clipboardItem.types.some((type) => type === 'image/jpeg')) {\n      return await clipboardItem.getType('image/jpeg');\n    }\n  }\n  return null;\n}\n\nexport async function findHtmlInClipboardAsync(items: ClipboardItems): Promise<Blob | null> {\n  for (const clipboardItem of items) {\n    if (clipboardItem.types.some((type) => type === 'text/html')) {\n      return await clipboardItem.getType('text/html');\n    }\n  }\n  return null;\n}\n\nexport async function isClipboardPermissionDeniedAsync(): Promise<boolean> {\n  const queryOpts = { name: 'clipboard-read' as PermissionName };\n  const permissionStatus = await navigator.permissions.query(queryOpts);\n  return permissionStatus.state === 'denied';\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}