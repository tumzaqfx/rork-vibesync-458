{"ast":null,"code":"function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import{BaseGesture}from'./gesture';export class TapGesture extends BaseGesture{constructor(){super();_defineProperty(this,\"config\",{});this.handlerName='TapGestureHandler';this.shouldCancelWhenOutside(true);}minPointers(minPointers){this.config.minPointers=minPointers;return this;}numberOfTaps(count){this.config.numberOfTaps=count;return this;}maxDistance(maxDist){this.config.maxDist=maxDist;return this;}maxDuration(duration){this.config.maxDurationMs=duration;return this;}maxDelay(delay){this.config.maxDelayMs=delay;return this;}maxDeltaX(delta){this.config.maxDeltaX=delta;return this;}maxDeltaY(delta){this.config.maxDeltaY=delta;return this;}}","map":{"version":3,"names":["BaseGesture","TapGesture","constructor","_defineProperty","handlerName","shouldCancelWhenOutside","minPointers","config","numberOfTaps","count","maxDistance","maxDist","maxDuration","duration","maxDurationMs","maxDelay","delay","maxDelayMs","maxDeltaX","delta","maxDeltaY"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/tapGesture.ts"],"sourcesContent":["import { BaseGestureConfig, BaseGesture } from './gesture';\nimport { TapGestureConfig } from '../TapGestureHandler';\nimport type { TapGestureHandlerEventPayload } from '../GestureHandlerEventPayload';\n\nexport class TapGesture extends BaseGesture<TapGestureHandlerEventPayload> {\n  public config: BaseGestureConfig & TapGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'TapGestureHandler';\n    this.shouldCancelWhenOutside(true);\n  }\n\n  /**\n   * Minimum number of pointers (fingers) required to be placed before the gesture activates.\n   * Should be a positive integer. The default value is 1.\n   * @param minPointers\n   */\n  minPointers(minPointers: number) {\n    this.config.minPointers = minPointers;\n    return this;\n  }\n\n  /**\n   * Number of tap gestures required to activate the gesture.\n   * The default value is 1.\n   * @param count\n   */\n  numberOfTaps(count: number) {\n    this.config.numberOfTaps = count;\n    return this;\n  }\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is allowed to travel during a tap gesture.\n   * @param maxDist\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/tap-gesture#maxdistancevalue-number\n   */\n  maxDistance(maxDist: number) {\n    this.config.maxDist = maxDist;\n    return this;\n  }\n\n  /**\n   * Maximum time, expressed in milliseconds, that defines how fast a finger must be released after a touch.\n   * The default value is 500.\n   * @param duration\n   */\n  maxDuration(duration: number) {\n    this.config.maxDurationMs = duration;\n    return this;\n  }\n\n  /**\n   * Maximum time, expressed in milliseconds, that can pass before the next tap â€” if many taps are required.\n   * The default value is 500.\n   * @param delay\n   */\n  maxDelay(delay: number) {\n    this.config.maxDelayMs = delay;\n    return this;\n  }\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is allowed to travel along the X axis during a tap gesture.\n   * @param delta\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/tap-gesture#maxdeltaxvalue-number\n   */\n  maxDeltaX(delta: number) {\n    this.config.maxDeltaX = delta;\n    return this;\n  }\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is allowed to travel along the Y axis during a tap gesture.\n   * @param delta\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/tap-gesture#maxdeltayvalue-number\n   */\n  maxDeltaY(delta: number) {\n    this.config.maxDeltaY = delta;\n    return this;\n  }\n}\n\nexport type TapGestureType = InstanceType<typeof TapGesture>;\n"],"mappings":"sLAAA,OAA4BA,WAA5B,KAA+C,WAA/C,CAIA,MAAO,MAAM,CAAAC,UAAN,QAAyB,CAAAD,WAA2C,CAGzEE,WAAWA,CAAA,CAAG,CACZ,QADYC,eAAA,eAFwC,EAExC,EAGZ,KAAKC,WAAL,CAAmB,mBAAnB,CACA,KAAKC,uBAAL,CAA6B,IAA7B,EACD,CAODC,WAAWA,CAACA,WAAD,CAAsB,CAC/B,KAAKC,MAAL,CAAYD,WAAZ,CAA0BA,WAA1B,CACA,MAAO,KAAP,CACD,CAODE,YAAYA,CAACC,KAAD,CAAgB,CAC1B,KAAKF,MAAL,CAAYC,YAAZ,CAA2BC,KAA3B,CACA,MAAO,KAAP,CACD,CAODC,WAAWA,CAACC,OAAD,CAAkB,CAC3B,KAAKJ,MAAL,CAAYI,OAAZ,CAAsBA,OAAtB,CACA,MAAO,KAAP,CACD,CAODC,WAAWA,CAACC,QAAD,CAAmB,CAC5B,KAAKN,MAAL,CAAYO,aAAZ,CAA4BD,QAA5B,CACA,MAAO,KAAP,CACD,CAODE,QAAQA,CAACC,KAAD,CAAgB,CACtB,KAAKT,MAAL,CAAYU,UAAZ,CAAyBD,KAAzB,CACA,MAAO,KAAP,CACD,CAODE,SAASA,CAACC,KAAD,CAAgB,CACvB,KAAKZ,MAAL,CAAYW,SAAZ,CAAwBC,KAAxB,CACA,MAAO,KAAP,CACD,CAODC,SAASA,CAACD,KAAD,CAAgB,CACvB,KAAKZ,MAAL,CAAYa,SAAZ,CAAwBD,KAAxB,CACA,MAAO,KAAP,CACD,CA9EwE","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}