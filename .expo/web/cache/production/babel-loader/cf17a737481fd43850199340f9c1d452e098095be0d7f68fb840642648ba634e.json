{"ast":null,"code":"import DiscreteGestureHandler from'./DiscreteGestureHandler';import*as NodeManager from'./NodeManager';import PressGestureHandler from'./PressGestureHandler';import{TEST_MIN_IF_NOT_NAN,VEC_LEN_SQ}from'./utils';class NativeViewGestureHandler extends PressGestureHandler{get isNative(){return true;}onRawEvent(ev){super.onRawEvent(ev);if(!ev.isFinal){if(TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({x:ev.deltaX,y:ev.deltaY}),10)){if(this.config.disallowInterruption){const gestures=Object.values(NodeManager.getNodes()).filter(gesture=>{const{handlerTag,view,isGestureRunning}=gesture;return(handlerTag!==this.handlerTag&&isGestureRunning&&gesture instanceof DiscreteGestureHandler&&view&&this.view.contains(view));});for(const gesture of gestures){gesture.forceInvalidate(ev);}}}}}}export default NativeViewGestureHandler;","map":{"version":3,"names":["DiscreteGestureHandler","NodeManager","PressGestureHandler","TEST_MIN_IF_NOT_NAN","VEC_LEN_SQ","NativeViewGestureHandler","isNative","onRawEvent","ev","isFinal","x","deltaX","y","deltaY","config","disallowInterruption","gestures","Object","values","getNodes","filter","gesture","handlerTag","view","isGestureRunning","contains","forceInvalidate"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-gesture-handler/lib/module/web_hammer/NativeViewGestureHandler.ts"],"sourcesContent":["import DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { HammerInputExt } from './GestureHandler';\nimport * as NodeManager from './NodeManager';\nimport PressGestureHandler from './PressGestureHandler';\nimport { TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\n\nclass NativeViewGestureHandler extends PressGestureHandler {\n  get isNative() {\n    return true;\n  }\n\n  onRawEvent(ev: HammerInputExt) {\n    super.onRawEvent(ev);\n    if (!ev.isFinal) {\n      // if (this.ref instanceof ScrollView) {\n      if (TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({ x: ev.deltaX, y: ev.deltaY }), 10)) {\n        // @ts-ignore FIXME(TS) config type\n        if (this.config.disallowInterruption) {\n          const gestures = Object.values(NodeManager.getNodes()).filter(\n            (gesture) => {\n              const { handlerTag, view, isGestureRunning } = gesture;\n              return (\n                // Check if this gesture isn't self\n                handlerTag !== this.handlerTag &&\n                // Ensure the gesture needs to be cancelled\n                isGestureRunning &&\n                // ScrollView can cancel discrete gestures like taps and presses\n                gesture instanceof DiscreteGestureHandler &&\n                // Ensure a view exists and is a child of the current view\n                view &&\n                // @ts-ignore FIXME(TS) view type\n                this.view.contains(view)\n              );\n            }\n          );\n          // Cancel all of the gestures that passed the filter\n          for (const gesture of gestures) {\n            // TODO: Bacon: Send some cached event.\n            gesture.forceInvalidate(ev);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default NativeViewGestureHandler;\n"],"mappings":"AAAA,MAAO,CAAAA,sBAAP,KAAmC,0BAAnC,CAEA,MAAO,GAAK,CAAAC,WAAZ,KAA6B,eAA7B,CACA,MAAO,CAAAC,mBAAP,KAAgC,uBAAhC,CACA,OAASC,mBAAT,CAA8BC,UAA9B,KAAgD,SAAhD,CAEA,KAAM,CAAAC,wBAAN,QAAuC,CAAAH,mBAAoB,CAC7C,GAAR,CAAAI,QAAQA,CAAA,CAAG,CACb,MAAO,KAAP,CACD,CAEDC,UAAUA,CAACC,EAAD,CAAqB,CAC7B,MAAMD,UAAN,CAAiBC,EAAjB,EACA,GAAI,CAACA,EAAE,CAACC,OAAR,CAAiB,CAEf,GAAIN,mBAAmB,CAACC,UAAU,CAAC,CAAEM,CAAC,CAAEF,EAAE,CAACG,MAAR,CAAgBC,CAAC,CAAEJ,EAAE,CAACK,MAAtB,CAAD,CAAX,CAA6C,EAA7C,CAAvB,CAAyE,CAEvE,GAAI,KAAKC,MAAL,CAAYC,oBAAhB,CAAsC,CACpC,KAAM,CAAAC,QAAQ,CAAGC,MAAM,CAACC,MAAP,CAAcjB,WAAW,CAACkB,QAAZ,EAAd,EAAsCC,MAAtC,CACdC,OAAD,EAAa,CACX,KAAM,CAAEC,UAAF,CAAcC,IAAd,CAAoBC,gBAApB,EAAyCH,OAA/C,CACA,OAEEC,UAAU,GAAK,KAAKA,UAApB,EAEAE,gBAFA,EAIAH,OAAO,WAAY,CAAArB,sBAJnB,EAMAuB,IANA,EAQA,KAAKA,IAAL,CAAUE,QAAV,CAAmBF,IAAnB,GAEH,CAfc,CAAjB,CAkBA,IAAK,KAAM,CAAAF,OAAX,GAAsB,CAAAL,QAAtB,CAAgC,CAE9BK,OAAO,CAACK,eAAR,CAAwBlB,EAAxB,EACD,CACF,CACF,CACF,CACF,CArCwD,CAwC3D,cAAe,CAAAH,wBAAf","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}