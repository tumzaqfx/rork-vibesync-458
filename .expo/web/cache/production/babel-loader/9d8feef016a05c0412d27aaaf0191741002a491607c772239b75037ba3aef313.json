{"ast":null,"code":"'use strict';import{Animations}from\"./config.js\";import{LayoutAnimationType}from\"../animationBuilder/commonTypes.js\";import{createAnimationWithInitialValues,createCustomKeyFrameAnimation}from\"./createAnimation.js\";import{getProcessedConfig,handleExitingAnimation,handleLayoutTransition,maybeModifyStyleForKeyframe,setElementAnimation}from\"./componentUtils.js\";import{areDOMRectsEqual}from\"./domUtils.js\";import{Keyframe}from\"../animationBuilder/index.js\";import{makeElementVisible}from\"./componentStyle.js\";import{EasingNameSymbol}from\"../../Easing.js\";import{logger}from\"../../logger/index.js\";function chooseConfig(animationType,props){const config=animationType===LayoutAnimationType.ENTERING?props.entering:animationType===LayoutAnimationType.EXITING?props.exiting:animationType===LayoutAnimationType.LAYOUT?props.layout:null;return config;}function checkUndefinedAnimationFail(initialAnimationName,needsCustomization){if(initialAnimationName in Animations||needsCustomization){return false;}logger.warn(\"Couldn't load entering/exiting animation. Current version supports only predefined animations with modifiers: duration, delay, easing, randomizeDelay, withCallback, reducedMotion.\");return true;}function maybeReportOverwrittenProperties(keyframe,styles){const propertyRegex=/([a-zA-Z-]+)(?=:)/g;const animationProperties=new Set();for(const match of keyframe.matchAll(propertyRegex)){animationProperties.add(match[1]);}const commonProperties=Array.from(styles).filter(style=>animationProperties.has(style));if(commonProperties.length===0){return;}logger.warn(`${commonProperties.length===1?'Property':'Properties'} [${commonProperties.join(', ')}] may be overwritten by a layout animation. Please wrap your component with an animated view and apply the layout animation on the wrapper.`);}function chooseAction(animationType,animationConfig,element,transitionData){switch(animationType){case LayoutAnimationType.ENTERING:setElementAnimation(element,animationConfig,true);break;case LayoutAnimationType.LAYOUT:transitionData.reversed=animationConfig.reversed;handleLayoutTransition(element,animationConfig,transitionData);break;case LayoutAnimationType.EXITING:handleExitingAnimation(element,animationConfig);break;}}function tryGetAnimationConfig(props,animationType){const config=chooseConfig(animationType,props);if(!config){return null;}const isLayoutTransition=animationType===LayoutAnimationType.LAYOUT;const isCustomKeyframe=config instanceof Keyframe;const hasInitialValues=config.initialValues!==undefined;let animationName;if(isCustomKeyframe){animationName=createCustomKeyFrameAnimation(config.definitions);}else if(typeof config==='function'){animationName=config.presetName;}else{animationName=config.constructor.presetName;}if(hasInitialValues){animationName=createAnimationWithInitialValues(animationName,config.initialValues);}const shouldFail=checkUndefinedAnimationFail(animationName,isLayoutTransition||isCustomKeyframe||hasInitialValues);if(shouldFail){return null;}if(isCustomKeyframe){const keyframeTimestamps=Object.keys(config.definitions);if(!(keyframeTimestamps.includes('100')||keyframeTimestamps.includes('to'))){logger.warn(`Neither '100' nor 'to' was specified in Keyframe definition. This may result in wrong final position of your component. One possible solution is to duplicate last timestamp in definition as '100' (or 'to')`);}}const animationConfig=getProcessedConfig(animationName,animationType,config);return animationConfig;}export function startWebLayoutAnimation(props,element,animationType,transitionData){const animationConfig=tryGetAnimationConfig(props,animationType);maybeModifyStyleForKeyframe(element,props.entering);if(animationConfig?.animationName in Animations){maybeReportOverwrittenProperties(Animations[animationConfig?.animationName].style,element.style);}if(animationConfig){chooseAction(animationType,animationConfig,element,transitionData);}else{makeElementVisible(element,0);}}export function tryActivateLayoutTransition(props,element,snapshot){if(!props.layout){return;}const rect=element.getBoundingClientRect();if(areDOMRectsEqual(rect,snapshot)){return;}const enteringAnimation=props.layout.enteringV?.presetName;const exitingAnimation=props.layout.exitingV?.presetName;const transitionData={translateX:snapshot.x-rect.x,translateY:snapshot.y-rect.y,scaleX:snapshot.width/rect.width,scaleY:snapshot.height/rect.height,reversed:false,easingX:props.layout.easingXV?.[EasingNameSymbol]??'ease',easingY:props.layout.easingYV?.[EasingNameSymbol]??'ease',entering:enteringAnimation,exiting:exitingAnimation};startWebLayoutAnimation(props,element,LayoutAnimationType.LAYOUT,transitionData);}","map":{"version":3,"names":["Animations","LayoutAnimationType","createAnimationWithInitialValues","createCustomKeyFrameAnimation","getProcessedConfig","handleExitingAnimation","handleLayoutTransition","maybeModifyStyleForKeyframe","setElementAnimation","areDOMRectsEqual","Keyframe","makeElementVisible","EasingNameSymbol","logger","chooseConfig","animationType","props","config","ENTERING","entering","EXITING","exiting","LAYOUT","layout","checkUndefinedAnimationFail","initialAnimationName","needsCustomization","warn","maybeReportOverwrittenProperties","keyframe","styles","propertyRegex","animationProperties","Set","match","matchAll","add","commonProperties","Array","from","filter","style","has","length","join","chooseAction","animationConfig","element","transitionData","reversed","tryGetAnimationConfig","isLayoutTransition","isCustomKeyframe","hasInitialValues","initialValues","undefined","animationName","definitions","presetName","constructor","shouldFail","keyframeTimestamps","Object","keys","includes","startWebLayoutAnimation","tryActivateLayoutTransition","snapshot","rect","getBoundingClientRect","enteringAnimation","enteringV","exitingAnimation","exitingV","translateX","x","translateY","y","scaleX","width","scaleY","height","easingX","easingXV","easingY","easingYV"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/layoutReanimation/web/animationsManager.ts"],"sourcesContent":["'use strict';\n\nimport type {\n  AnimationConfig,\n  AnimationNames,\n  CustomConfig,\n  InitialValuesStyleProps,\n  KeyframeDefinitions,\n} from './config';\nimport { Animations } from './config';\nimport type {\n  AnimatedComponentProps,\n  LayoutAnimationStaticContext,\n} from '../../createAnimatedComponent/commonTypes';\nimport { LayoutAnimationType } from '../animationBuilder/commonTypes';\nimport {\n  createAnimationWithInitialValues,\n  createCustomKeyFrameAnimation,\n} from './createAnimation';\nimport {\n  getProcessedConfig,\n  handleExitingAnimation,\n  handleLayoutTransition,\n  maybeModifyStyleForKeyframe,\n  setElementAnimation,\n} from './componentUtils';\nimport { areDOMRectsEqual } from './domUtils';\nimport type { TransitionData } from './animationParser';\nimport { Keyframe } from '../animationBuilder';\nimport { makeElementVisible } from './componentStyle';\nimport { EasingNameSymbol } from '../../Easing';\nimport type { ReanimatedHTMLElement } from '../../js-reanimated';\nimport { logger } from '../../logger';\n\nfunction chooseConfig<ComponentProps extends Record<string, unknown>>(\n  animationType: LayoutAnimationType,\n  props: Readonly<AnimatedComponentProps<ComponentProps>>\n) {\n  const config =\n    animationType === LayoutAnimationType.ENTERING\n      ? props.entering\n      : animationType === LayoutAnimationType.EXITING\n        ? props.exiting\n        : animationType === LayoutAnimationType.LAYOUT\n          ? props.layout\n          : null;\n\n  return config;\n}\n\nfunction checkUndefinedAnimationFail(\n  initialAnimationName: string,\n  needsCustomization: boolean\n) {\n  // This prevents crashes if we try to set animations that are not defined.\n  // We don't care about layout transitions or custom keyframes since they're created dynamically\n  if (initialAnimationName in Animations || needsCustomization) {\n    return false;\n  }\n\n  logger.warn(\n    \"Couldn't load entering/exiting animation. Current version supports only predefined animations with modifiers: duration, delay, easing, randomizeDelay, withCallback, reducedMotion.\"\n  );\n\n  return true;\n}\n\nfunction maybeReportOverwrittenProperties(\n  keyframe: string,\n  styles: CSSStyleDeclaration\n) {\n  const propertyRegex = /([a-zA-Z-]+)(?=:)/g;\n  const animationProperties = new Set();\n\n  for (const match of keyframe.matchAll(propertyRegex)) {\n    animationProperties.add(match[1]);\n  }\n\n  const commonProperties = Array.from(styles).filter((style) =>\n    animationProperties.has(style)\n  );\n\n  if (commonProperties.length === 0) {\n    return;\n  }\n\n  logger.warn(\n    `${\n      commonProperties.length === 1 ? 'Property' : 'Properties'\n    } [${commonProperties.join(\n      ', '\n    )}] may be overwritten by a layout animation. Please wrap your component with an animated view and apply the layout animation on the wrapper.`\n  );\n}\n\nfunction chooseAction(\n  animationType: LayoutAnimationType,\n  animationConfig: AnimationConfig,\n  element: ReanimatedHTMLElement,\n  transitionData: TransitionData\n) {\n  switch (animationType) {\n    case LayoutAnimationType.ENTERING:\n      setElementAnimation(element, animationConfig, true);\n      break;\n    case LayoutAnimationType.LAYOUT:\n      transitionData.reversed = animationConfig.reversed;\n      handleLayoutTransition(element, animationConfig, transitionData);\n      break;\n    case LayoutAnimationType.EXITING:\n      handleExitingAnimation(element, animationConfig);\n      break;\n  }\n}\n\nfunction tryGetAnimationConfig<ComponentProps extends Record<string, unknown>>(\n  props: Readonly<AnimatedComponentProps<ComponentProps>>,\n  animationType: LayoutAnimationType\n) {\n  const config = chooseConfig(animationType, props);\n  if (!config) {\n    return null;\n  }\n\n  type ConstructorWithStaticContext = LayoutAnimationStaticContext &\n    typeof config.constructor;\n\n  const isLayoutTransition = animationType === LayoutAnimationType.LAYOUT;\n  const isCustomKeyframe = config instanceof Keyframe;\n  const hasInitialValues = (config as CustomConfig).initialValues !== undefined;\n\n  let animationName;\n\n  if (isCustomKeyframe) {\n    animationName = createCustomKeyFrameAnimation(\n      (config as CustomConfig).definitions as KeyframeDefinitions\n    );\n  } else if (typeof config === 'function') {\n    animationName = config.presetName;\n  } else {\n    animationName = (config.constructor as ConstructorWithStaticContext)\n      .presetName;\n  }\n\n  if (hasInitialValues) {\n    animationName = createAnimationWithInitialValues(\n      animationName,\n      (config as CustomConfig).initialValues as InitialValuesStyleProps\n    );\n  }\n\n  const shouldFail = checkUndefinedAnimationFail(\n    animationName,\n    isLayoutTransition || isCustomKeyframe || hasInitialValues\n  );\n\n  if (shouldFail) {\n    return null;\n  }\n\n  if (isCustomKeyframe) {\n    const keyframeTimestamps = Object.keys(\n      (config as CustomConfig).definitions as KeyframeDefinitions\n    );\n\n    if (\n      !(keyframeTimestamps.includes('100') || keyframeTimestamps.includes('to'))\n    ) {\n      logger.warn(\n        `Neither '100' nor 'to' was specified in Keyframe definition. This may result in wrong final position of your component. One possible solution is to duplicate last timestamp in definition as '100' (or 'to')`\n      );\n    }\n  }\n\n  const animationConfig = getProcessedConfig(\n    animationName,\n    animationType,\n    config as CustomConfig\n  );\n\n  return animationConfig;\n}\n\nexport function startWebLayoutAnimation<\n  ComponentProps extends Record<string, unknown>,\n>(\n  props: Readonly<AnimatedComponentProps<ComponentProps>>,\n  element: ReanimatedHTMLElement,\n  animationType: LayoutAnimationType,\n  transitionData?: TransitionData\n) {\n  const animationConfig = tryGetAnimationConfig(props, animationType);\n\n  maybeModifyStyleForKeyframe(element, props.entering as CustomConfig);\n\n  if ((animationConfig?.animationName as AnimationNames) in Animations) {\n    maybeReportOverwrittenProperties(\n      Animations[animationConfig?.animationName as AnimationNames].style,\n      element.style\n    );\n  }\n\n  if (animationConfig) {\n    chooseAction(\n      animationType,\n      animationConfig,\n      element,\n      transitionData as TransitionData\n    );\n  } else {\n    makeElementVisible(element, 0);\n  }\n}\n\nexport function tryActivateLayoutTransition<\n  ComponentProps extends Record<string, unknown>,\n>(\n  props: Readonly<AnimatedComponentProps<ComponentProps>>,\n  element: ReanimatedHTMLElement,\n  snapshot: DOMRect\n) {\n  if (!props.layout) {\n    return;\n  }\n\n  const rect = element.getBoundingClientRect();\n\n  if (areDOMRectsEqual(rect, snapshot)) {\n    return;\n  }\n\n  const enteringAnimation = (props.layout as CustomConfig).enteringV\n    ?.presetName;\n  const exitingAnimation = (props.layout as CustomConfig).exitingV?.presetName;\n\n  const transitionData: TransitionData = {\n    translateX: snapshot.x - rect.x,\n    translateY: snapshot.y - rect.y,\n    scaleX: snapshot.width / rect.width,\n    scaleY: snapshot.height / rect.height,\n    reversed: false, // This field is used only in `SequencedTransition`, so by default it will be false\n    easingX:\n      (props.layout as CustomConfig).easingXV?.[EasingNameSymbol] ?? 'ease',\n    easingY:\n      (props.layout as CustomConfig).easingYV?.[EasingNameSymbol] ?? 'ease',\n    entering: enteringAnimation,\n    exiting: exitingAnimation,\n  };\n\n  startWebLayoutAnimation(\n    props,\n    element,\n    LayoutAnimationType.LAYOUT,\n    transitionData\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}