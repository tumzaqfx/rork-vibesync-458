{"ast":null,"code":"'use strict';import{useEffect}from'react';import{startMapper,stopMapper}from\"../core.js\";import{useSharedValue}from\"./useSharedValue.js\";import{shouldBeUseWeb}from\"../PlatformChecker.js\";const _worklet_13931034839297_init_data={code:\"function reactNativeReanimated_useAnimatedReactionJs1(){const{prepare,react,previous}=this.__closure;const input=prepare();react(input,previous.value);previous.value=input;}\"};export function useAnimatedReaction(prepare,react,dependencies){const previous=useSharedValue(null);let inputs=Object.values(prepare.__closure??{});if(shouldBeUseWeb()){if(!inputs.length&&dependencies?.length){inputs=dependencies;}}if(dependencies===undefined){dependencies=[...Object.values(prepare.__closure??{}),...Object.values(react.__closure??{}),prepare.__workletHash,react.__workletHash];}else{dependencies.push(prepare.__workletHash,react.__workletHash);}useEffect(()=>{const fun=function(){const reactNativeReanimated_useAnimatedReactionJs1=function(){const input=prepare();react(input,previous.value);previous.value=input;};reactNativeReanimated_useAnimatedReactionJs1.__closure={prepare,react,previous};reactNativeReanimated_useAnimatedReactionJs1.__workletHash=13931034839297;reactNativeReanimated_useAnimatedReactionJs1.__initData=_worklet_13931034839297_init_data;return reactNativeReanimated_useAnimatedReactionJs1;}();const mapperId=startMapper(fun,inputs);return()=>{stopMapper(mapperId);};},dependencies);}","map":{"version":3,"names":["useEffect","startMapper","stopMapper","useSharedValue","shouldBeUseWeb","_worklet_13931034839297_init_data","code","useAnimatedReaction","prepare","react","dependencies","previous","inputs","Object","values","__closure","length","undefined","__workletHash","push","fun","reactNativeReanimated_useAnimatedReactionJs1","input","value","__initData","mapperId"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/hook/useAnimatedReaction.ts"],"sourcesContent":["'use strict';\nimport { useEffect } from 'react';\nimport type { WorkletFunction } from '../commonTypes';\nimport { startMapper, stopMapper } from '../core';\nimport type { DependencyList } from './commonTypes';\nimport { useSharedValue } from './useSharedValue';\nimport { shouldBeUseWeb } from '../PlatformChecker';\n\n/**\n * Lets you to respond to changes in a [shared\n * value](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#shared-value).\n * It's especially useful when comparing values previously stored in the shared\n * value with the current one.\n *\n * @param prepare - A function that should return a value to which you'd like to\n *   react.\n * @param react - A function that reacts to changes in the value returned by the\n *   `prepare` function.\n * @param dependencies - An optional array of dependencies. Only relevant when\n *   using Reanimated without the Babel plugin on the Web.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useAnimatedReaction\n */\n// @ts-expect-error This overload is required by our API.\nexport function useAnimatedReaction<PreparedResult>(\n  prepare: () => PreparedResult,\n  react: (prepared: PreparedResult, previous: PreparedResult | null) => void,\n  dependencies?: DependencyList\n): void;\n\nexport function useAnimatedReaction<PreparedResult>(\n  prepare: WorkletFunction<[], PreparedResult>,\n  react: WorkletFunction<\n    [prepare: PreparedResult, previous: PreparedResult | null],\n    void\n  >,\n  dependencies?: DependencyList\n) {\n  const previous = useSharedValue<PreparedResult | null>(null);\n\n  let inputs = Object.values(prepare.__closure ?? {});\n\n  if (shouldBeUseWeb()) {\n    if (!inputs.length && dependencies?.length) {\n      // let web work without a Reanimated Babel plugin\n      inputs = dependencies;\n    }\n  }\n\n  if (dependencies === undefined) {\n    dependencies = [\n      ...Object.values(prepare.__closure ?? {}),\n      ...Object.values(react.__closure ?? {}),\n      prepare.__workletHash,\n      react.__workletHash,\n    ];\n  } else {\n    dependencies.push(prepare.__workletHash, react.__workletHash);\n  }\n\n  useEffect(() => {\n    const fun = () => {\n      'worklet';\n      const input = prepare();\n      react(input, previous.value);\n      previous.value = input;\n    };\n    const mapperId = startMapper(fun, inputs);\n    return () => {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n}\n"],"mappings":"AAAA,YAAY,CACZ,OAASA,SAAS,KAAQ,OAAO,CAEjC,OAASC,WAAW,CAAEC,UAAU,KAAQ,YAAS,CAEjD,OAASC,cAAc,KAAQ,qBAAkB,CACjD,OAASC,cAAc,KAAQ,uBAAoB,OAAAC,iCAAA,EAAAC,IAAA,kLAuBnD,MAAO,SAAS,CAAAC,mBAAmBA,CACjCC,OAA4C,CAC5CC,KAGC,CACDC,YAA6B,CAC7B,CACA,KAAM,CAAAC,QAAQ,CAAGR,cAAc,CAAwB,IAAI,CAAC,CAE5D,GAAI,CAAAS,MAAM,CAAGC,MAAM,CAACC,MAAM,CAACN,OAAO,CAACO,SAAS,EAAI,CAAC,CAAC,CAAC,CAEnD,GAAIX,cAAc,CAAC,CAAC,CAAE,CACpB,GAAI,CAACQ,MAAM,CAACI,MAAM,EAAIN,YAAY,EAAEM,MAAM,CAAE,CAE1CJ,MAAM,CAAGF,YAAY,CACvB,CACF,CAEA,GAAIA,YAAY,GAAKO,SAAS,CAAE,CAC9BP,YAAY,CAAG,CACb,GAAGG,MAAM,CAACC,MAAM,CAACN,OAAO,CAACO,SAAS,EAAI,CAAC,CAAC,CAAC,CACzC,GAAGF,MAAM,CAACC,MAAM,CAACL,KAAK,CAACM,SAAS,EAAI,CAAC,CAAC,CAAC,CACvCP,OAAO,CAACU,aAAa,CACrBT,KAAK,CAACS,aAAa,CACpB,CACH,CAAC,IAAM,CACLR,YAAY,CAACS,IAAI,CAACX,OAAO,CAACU,aAAa,CAAET,KAAK,CAACS,aAAa,CAAC,CAC/D,CAEAlB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAoB,GAAG,CAAG,iBAAAC,4CAAA,SAAAA,CAAA,CAAM,CAEhB,KAAM,CAAAC,KAAK,CAAGd,OAAO,CAAC,CAAC,CACvBC,KAAK,CAACa,KAAK,CAAEX,QAAQ,CAACY,KAAK,CAAC,CAC5BZ,QAAQ,CAACY,KAAK,CAAGD,KAAK,CACxB,CAAC,CAAAD,4CAAA,CAAAN,SAAA,EAAAP,OAAA,CAAAC,KAAA,CAAAE,QAAA,EAAAU,4CAAA,CAAAH,aAAA,gBAAAG,4CAAA,CAAAG,UAAA,CAAAnB,iCAAA,QAAAgB,4CAAA,EALW,EAKX,CACD,KAAM,CAAAI,QAAQ,CAAGxB,WAAW,CAACmB,GAAG,CAAER,MAAM,CAAC,CACzC,MAAO,IAAM,CACXV,UAAU,CAACuB,QAAQ,CAAC,CACtB,CAAC,CACH,CAAC,CAAEf,YAAY,CAAC,CAClB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}