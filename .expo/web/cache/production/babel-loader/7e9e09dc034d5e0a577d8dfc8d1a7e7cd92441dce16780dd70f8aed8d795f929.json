{"ast":null,"code":"'use strict';export let getViewInfo=element=>{if(element._nativeTag!==undefined&&element.__nativeTag!==null){getViewInfo=getViewInfo73;return getViewInfo73(element);}else if(element.__nativeTag!==undefined&&element.__nativeTag!==null){getViewInfo=getViewInfoLatest;return getViewInfoLatest(element);}return getViewInfo73(element);};function getViewInfo73(element){return{viewName:element?.viewConfig?.uiViewClassName,viewTag:element?._nativeTag,viewConfig:element?.viewConfig};}function getViewInfoLatest(element){return{viewName:element?._viewConfig?.uiViewClassName,viewTag:element?.__nativeTag,viewConfig:element?._viewConfig};}","map":{"version":3,"names":["getViewInfo","element","_nativeTag","undefined","__nativeTag","getViewInfo73","getViewInfoLatest","viewName","viewConfig","uiViewClassName","viewTag","_viewConfig"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/createAnimatedComponent/getViewInfo.ts"],"sourcesContent":["'use strict';\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n// This is a makeshift solution to handle both 0.73 and 0.74 versions of React Native.\n\nexport let getViewInfo = (element: any) => {\n  if (element._nativeTag !== undefined && element.__nativeTag !== null) {\n    getViewInfo = getViewInfo73;\n    return getViewInfo73(element);\n  } else if (\n    element.__nativeTag !== undefined &&\n    element.__nativeTag !== null\n  ) {\n    getViewInfo = getViewInfoLatest;\n    return getViewInfoLatest(element);\n  }\n  return getViewInfo73(element);\n};\n\nfunction getViewInfo73(element: any) {\n  return {\n    // we can access view tag in the same way it's accessed here https://github.com/facebook/react/blob/e3f4eb7272d4ca0ee49f27577156b57eeb07cf73/packages/react-native-renderer/src/ReactFabric.js#L146\n    viewName: element?.viewConfig?.uiViewClassName,\n    /**\n     * RN uses viewConfig for components for storing different properties of the\n     * component(example:\n     * https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Components/ScrollView/ScrollViewNativeComponent.js#L24).\n     * The name we're looking for is in the field named uiViewClassName.\n     */\n    viewTag: element?._nativeTag,\n    viewConfig: element?.viewConfig,\n  };\n}\n\nfunction getViewInfoLatest(element: any) {\n  return {\n    viewName: element?._viewConfig?.uiViewClassName,\n    viewTag: element?.__nativeTag,\n    viewConfig: element?._viewConfig,\n  };\n}\n"],"mappings":"AAAA,YAAY,CAKZ,MAAO,IAAI,CAAAA,WAAW,CAAIC,OAAY,EAAK,CACzC,GAAIA,OAAO,CAACC,UAAU,GAAKC,SAAS,EAAIF,OAAO,CAACG,WAAW,GAAK,IAAI,CAAE,CACpEJ,WAAW,CAAGK,aAAa,CAC3B,MAAO,CAAAA,aAAa,CAACJ,OAAO,CAAC,CAC/B,CAAC,IAAM,IACLA,OAAO,CAACG,WAAW,GAAKD,SAAS,EACjCF,OAAO,CAACG,WAAW,GAAK,IAAI,CAC5B,CACAJ,WAAW,CAAGM,iBAAiB,CAC/B,MAAO,CAAAA,iBAAiB,CAACL,OAAO,CAAC,CACnC,CACA,MAAO,CAAAI,aAAa,CAACJ,OAAO,CAAC,CAC/B,CAAC,CAED,QAAS,CAAAI,aAAaA,CAACJ,OAAY,CAAE,CACnC,MAAO,CAELM,QAAQ,CAAEN,OAAO,EAAEO,UAAU,EAAEC,eAAe,CAO9CC,OAAO,CAAET,OAAO,EAAEC,UAAU,CAC5BM,UAAU,CAAEP,OAAO,EAAEO,UACvB,CAAC,CACH,CAEA,QAAS,CAAAF,iBAAiBA,CAACL,OAAY,CAAE,CACvC,MAAO,CACLM,QAAQ,CAAEN,OAAO,EAAEU,WAAW,EAAEF,eAAe,CAC/CC,OAAO,CAAET,OAAO,EAAEG,WAAW,CAC7BI,UAAU,CAAEP,OAAO,EAAEU,WACvB,CAAC,CACH","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}