{"ast":null,"code":"\"use strict\";'use client';var _reactJsxRuntime=require(\"react/jsx-runtime\");var _objectWithoutPropertiesLoose=require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\");const _excluded=[\"href\",\"replace\",\"push\",\"dismissTo\",\"relativeToDirectory\",\"asChild\",\"rel\",\"target\",\"download\",\"withAnchor\",\"dangerouslySingular\",\"prefetch\"];var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod};};Object.defineProperty(exports,\"__esModule\",{value:true});exports.Link=void 0;exports.Redirect=Redirect;const react_1=require(\"react\");const react_native_1=require(\"react-native-web/dist/index\");const href_1=require(\"./href\");const useLinkToPathProps_1=__importDefault(require(\"./useLinkToPathProps\"));const hooks_1=require(\"../hooks\");const useFocusEffect_1=require(\"../useFocusEffect\");const useLinkHooks_1=require(\"./useLinkHooks\");const Prefetch_1=require(\"../Prefetch\");const Slot_1=require(\"../ui/Slot\");function Redirect({href,relativeToDirectory,withAnchor}){const router=(0,hooks_1.useRouter)();(0,useFocusEffect_1.useFocusEffect)(()=>{try{router.replace(href,{relativeToDirectory,withAnchor});}catch(error){console.error(error);}});return null;}exports.Link=(0,react_1.forwardRef)(ExpoRouterLink);exports.Link.resolveHref=href_1.resolveHref;function ExpoRouterLink(_ref,ref){let{href,replace,push,dismissTo,relativeToDirectory,asChild,rel,target,download,withAnchor,dangerouslySingular:singular,prefetch}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const style=(0,useLinkHooks_1.useInteropClassName)(rest);const hrefAttrs=(0,useLinkHooks_1.useHrefAttrs)({asChild,rel,target,download});const resolvedHref=(0,react_1.useMemo)(()=>{if(href==null){throw new Error('Link: href is required');}return(0,href_1.resolveHref)(href);},[href]);let event;if(push)event='PUSH';if(replace)event='REPLACE';if(dismissTo)event='POP_TO';const props=(0,useLinkToPathProps_1.default)({href:resolvedHref,event,relativeToDirectory,withAnchor,dangerouslySingular:singular});const onPress=e=>{if('onPress'in rest){rest.onPress?.(e);}props.onPress(e);};const Component=asChild?Slot_1.Slot:react_native_1.Text;const element=_reactJsxRuntime.jsx(Component,Object.assign({ref:ref},props,hrefAttrs,rest,{style:style},react_native_1.Platform.select({web:{onClick:onPress},default:{onPress}})));return prefetch?_reactJsxRuntime.jsxs(_reactJsxRuntime.Fragment,{children:[_reactJsxRuntime.jsx(Prefetch_1.Prefetch,{href:href}),element]}):element;}","map":{"version":3,"names":["_reactJsxRuntime","require","_objectWithoutPropertiesLoose","_excluded","exports","Redirect","react_1","react_native_1","href_1","useLinkToPathProps_1","__importDefault","hooks_1","useFocusEffect_1","useLinkHooks_1","Prefetch_1","Slot_1","href","relativeToDirectory","withAnchor","router","useRouter","useFocusEffect","replace","error","console","Link","forwardRef","ExpoRouterLink","resolveHref","_ref","ref","push","dismissTo","asChild","rel","target","download","dangerouslySingular","singular","prefetch","rest","style","useInteropClassName","hrefAttrs","useHrefAttrs","resolvedHref","useMemo","Error","event","props","default","onPress","e","Component","Slot","Text","element","jsx","Object","assign","Platform","select","web","onClick","jsxs","Fragment","children","Prefetch"],"sources":["/home/user/rork-vibesync-458/node_modules/expo-router/src/link/Link.tsx"],"sourcesContent":["'use client';\n// Fork of @react-navigation/native Link.tsx with `href` and `replace` support added and\n// `to` / `action` support removed.\nimport { PropsWithChildren, forwardRef, useMemo, MouseEvent, ForwardedRef, JSX } from 'react';\nimport { Text, GestureResponderEvent, Platform } from 'react-native';\n\nimport { resolveHref } from './href';\nimport useLinkToPathProps from './useLinkToPathProps';\nimport { useRouter } from '../hooks';\nimport { Href } from '../types';\nimport { useFocusEffect } from '../useFocusEffect';\nimport { useInteropClassName, useHrefAttrs, LinkProps, WebAnchorProps } from './useLinkHooks';\nimport { Prefetch } from '../Prefetch';\nimport { Slot } from '../ui/Slot';\n\nexport interface LinkComponent {\n  (props: PropsWithChildren<LinkProps>): JSX.Element;\n  /** Helper method to resolve an Href object into a string. */\n  resolveHref: (href: Href) => string;\n}\n\nexport type RedirectProps = {\n  /**\n   * The path of the route to navigate to. It can either be:\n   * - **string**: A full path like `/profile/settings` or a relative path like `../settings`.\n   * - **object**: An object with a `pathname` and optional `params`. The `pathname` can be\n   * a full path like `/profile/settings` or a relative path like `../settings`. The\n   * params can be an object of key-value pairs.\n   *\n   * @example\n   * ```tsx Dynamic\n   * import { Redirect } from 'expo-router';\n   *\n   * export default function RedirectToAbout() {\n   *  return (\n   *    <Redirect href=\"/about\">About</Link>\n   *  );\n   *}\n   * ```\n   */\n  href: Href;\n\n  /**\n   * Relative URL references are either relative to the directory or the document.\n   * By default, relative paths are relative to the document.\n   *\n   * @see [Resolving relative references in Mozilla's documentation](https://developer.mozilla.org/en-US/docs/Web/API/URL_API/Resolving_relative_references).\n   */\n  relativeToDirectory?: boolean;\n\n  /**\n   * Replaces the initial screen with the current route.\n   */\n  withAnchor?: boolean;\n};\n\n/**\n * Redirects to the `href` as soon as the component is mounted.\n *\n * @example\n * ```tsx\n * import { View, Text } from 'react-native';\n * import { Redirect } from 'expo-router';\n *\n * export default function Page() {\n *  const { user } = useAuth();\n *\n *  if (!user) {\n *    return <Redirect href=\"/login\" />;\n *  }\n *\n *  return (\n *    <View>\n *      <Text>Welcome Back!</Text>\n *    </View>\n *  );\n * }\n * ```\n */\nexport function Redirect({ href, relativeToDirectory, withAnchor }: RedirectProps) {\n  const router = useRouter();\n  useFocusEffect(() => {\n    try {\n      router.replace(href, { relativeToDirectory, withAnchor });\n    } catch (error) {\n      console.error(error);\n    }\n  });\n  return null;\n}\n\n/**\n * Component that renders a link using [`href`](#href) to another route.\n * By default, it accepts children and wraps them in a `<Text>` component.\n *\n * Uses an anchor tag (`<a>`) on web and performs a client-side navigation to preserve\n * the state of the website and navigate faster. The web-only attributes such as `target`,\n * `rel`, and `download` are supported and passed to the anchor tag on web. See\n * [`WebAnchorProps`](#webanchorprops) for more details.\n *\n * > **Note**: Client-side navigation works with both single-page apps,\n * and [static-rendering](/router/reference/static-rendering/).\n *\n * @example\n * ```tsx\n * import { Link } from 'expo-router';\n * import { View } from 'react-native';\n *\n * export default function Route() {\n *  return (\n *   <View>\n *    <Link href=\"/about\">About</Link>\n *   </View>\n *  );\n *}\n * ```\n */\nexport const Link = forwardRef(ExpoRouterLink) as unknown as LinkComponent;\n\nLink.resolveHref = resolveHref;\n\nfunction ExpoRouterLink(\n  {\n    href,\n    replace,\n    push,\n    dismissTo,\n    // TODO: This does not prevent default on the anchor tag.\n    relativeToDirectory,\n    asChild,\n    rel,\n    target,\n    download,\n    withAnchor,\n    dangerouslySingular: singular,\n    prefetch,\n    ...rest\n  }: LinkProps,\n  ref: ForwardedRef<Text>\n) {\n  // Mutate the style prop to add the className on web.\n  const style = useInteropClassName(rest);\n\n  // If not passing asChild, we need to forward the props to the anchor tag using React Native Web's `hrefAttrs`.\n  const hrefAttrs = useHrefAttrs({ asChild, rel, target, download });\n\n  const resolvedHref = useMemo(() => {\n    if (href == null) {\n      throw new Error('Link: href is required');\n    }\n    return resolveHref(href);\n  }, [href]);\n\n  let event;\n  if (push) event = 'PUSH';\n  if (replace) event = 'REPLACE';\n  if (dismissTo) event = 'POP_TO';\n\n  const props = useLinkToPathProps({\n    href: resolvedHref,\n    event,\n    relativeToDirectory,\n    withAnchor,\n    dangerouslySingular: singular,\n  });\n\n  const onPress = (e: MouseEvent<HTMLAnchorElement> | GestureResponderEvent) => {\n    if ('onPress' in rest) {\n      rest.onPress?.(e);\n    }\n    props.onPress(e);\n  };\n\n  const Component = asChild ? Slot : Text;\n\n  // Avoid using createElement directly, favoring JSX, to allow tools like NativeWind to perform custom JSX handling on native.\n  const element = (\n    <Component\n      ref={ref}\n      {...props}\n      {...hrefAttrs}\n      {...rest}\n      style={style}\n      {...Platform.select({\n        web: {\n          onClick: onPress,\n        } as any,\n        default: { onPress },\n      })}\n    />\n  );\n\n  return prefetch ? (\n    <>\n      <Prefetch href={href} />\n      {element}\n    </>\n  ) : (\n    element\n  );\n}\n\nexport { LinkProps, WebAnchorProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}