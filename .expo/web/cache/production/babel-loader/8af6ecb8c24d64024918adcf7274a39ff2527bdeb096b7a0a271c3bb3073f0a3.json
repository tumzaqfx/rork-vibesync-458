{"ast":null,"code":"function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}export default class NodeManager{static getHandler(tag){if(tag in this.gestures){return this.gestures[tag];}throw new Error(`No handler for tag ${tag}`);}static createGestureHandler(handlerTag,handler){if(handlerTag in this.gestures){throw new Error(`Handler with tag ${handlerTag} already exists. Please ensure that no Gesture instance is used across multiple GestureDetectors.`);}this.gestures[handlerTag]=handler;this.gestures[handlerTag].handlerTag=handlerTag;}static dropGestureHandler(handlerTag){if(!(handlerTag in this.gestures)){return;}this.gestures[handlerTag].onDestroy();delete this.gestures[handlerTag];}static get nodes(){return Object.assign({},this.gestures);}}_defineProperty(NodeManager,\"gestures\",{});","map":{"version":3,"names":["NodeManager","getHandler","tag","gestures","Error","createGestureHandler","handlerTag","handler","dropGestureHandler","onDestroy","nodes","Object","assign"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-gesture-handler/lib/module/web/tools/NodeManager.ts"],"sourcesContent":["import { ValueOf } from '../../typeUtils';\nimport { Gestures } from '../Gestures';\nimport type IGestureHandler from '../handlers/IGestureHandler';\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport default abstract class NodeManager {\n  private static gestures: Record<\n    number,\n    InstanceType<ValueOf<typeof Gestures>>\n  > = {};\n\n  public static getHandler(tag: number): IGestureHandler {\n    if (tag in this.gestures) {\n      return this.gestures[tag] as IGestureHandler;\n    }\n\n    throw new Error(`No handler for tag ${tag}`);\n  }\n\n  public static createGestureHandler(\n    handlerTag: number,\n    handler: InstanceType<ValueOf<typeof Gestures>>\n  ): void {\n    if (handlerTag in this.gestures) {\n      throw new Error(\n        `Handler with tag ${handlerTag} already exists. Please ensure that no Gesture instance is used across multiple GestureDetectors.`\n      );\n    }\n\n    this.gestures[handlerTag] = handler;\n    this.gestures[handlerTag].handlerTag = handlerTag;\n  }\n\n  public static dropGestureHandler(handlerTag: number): void {\n    if (!(handlerTag in this.gestures)) {\n      return;\n    }\n\n    this.gestures[handlerTag].onDestroy();\n\n    // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n    delete this.gestures[handlerTag];\n  }\n\n  public static get nodes() {\n    return { ...this.gestures };\n  }\n}\n"],"mappings":"sLAKA,cAAe,MAAe,CAAAA,WAAY,CAMhB,MAAV,CAAAC,UAAUA,CAACC,GAAD,CAA+B,CACrD,GAAIA,GAAG,GAAI,MAAKC,QAAhB,CAA0B,CACxB,MAAO,MAAKA,QAAL,CAAcD,GAAd,CAAP,CACD,CAED,KAAM,IAAI,CAAAE,KAAJ,CAAW,sBAAqBF,GAAI,EAApC,CAAN,CACD,CAEiC,MAApB,CAAAG,oBAAoBA,CAChCC,UADgC,CAEhCC,OAFgC,CAG1B,CACN,GAAID,UAAU,GAAI,MAAKH,QAAvB,CAAiC,CAC/B,KAAM,IAAI,CAAAC,KAAJ,CACH,oBAAmBE,UAAW,mGAD3B,CAAN,CAGD,CAED,KAAKH,QAAL,CAAcG,UAAd,EAA4BC,OAA5B,CACA,KAAKJ,QAAL,CAAcG,UAAd,EAA0BA,UAA1B,CAAuCA,UAAvC,CACD,CAE+B,MAAlB,CAAAE,kBAAkBA,CAACF,UAAD,CAA2B,CACzD,GAAI,EAAEA,UAAU,GAAI,MAAKH,QAArB,CAAJ,CAAoC,CAClC,OACD,CAED,KAAKA,QAAL,CAAcG,UAAd,EAA0BG,SAA1B,GAGA,MAAO,MAAKN,QAAL,CAAcG,UAAd,CAAP,CACD,CAEsB,UAAL,CAAAI,KAAKA,CAAA,CAAG,CACxB,OAAAC,MAAA,CAAAC,MAAA,IAAY,KAAKT,QAAA,EAClB,CAzCuC,C,gBAAZH,W,YAIxB,E","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}