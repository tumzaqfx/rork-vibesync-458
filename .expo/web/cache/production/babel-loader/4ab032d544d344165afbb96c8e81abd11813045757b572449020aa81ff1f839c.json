{"ast":null,"code":"\"use strict\";import*as React from'react';const MISSING_CONTEXT_ERROR=\"Couldn't find a LinkingContext context.\";export const LinkingContext=React.createContext({get options(){throw new Error(MISSING_CONTEXT_ERROR);}});LinkingContext.displayName='LinkingContext';","map":{"version":3,"names":["React","MISSING_CONTEXT_ERROR","LinkingContext","createContext","options","Error","displayName"],"sources":["/home/user/rork-vibesync-458/node_modules/@react-navigation/native/src/LinkingContext.tsx"],"sourcesContent":["import type { ParamListBase } from '@react-navigation/core';\nimport * as React from 'react';\n\nimport type { LinkingOptions } from './types';\n\nconst MISSING_CONTEXT_ERROR = \"Couldn't find a LinkingContext context.\";\n\nexport const LinkingContext = React.createContext<{\n  options?: LinkingOptions<ParamListBase>;\n}>({\n  get options(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n});\n\nLinkingContext.displayName = 'LinkingContext';\n"],"mappings":"aACA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAI9B,KAAM,CAAAC,qBAAqB,CAAG,yCAAyC,CAEvE,MAAO,MAAM,CAAAC,cAAc,CAAGF,KAAK,CAACG,aAAa,CAE9C,CACD,GAAI,CAAAC,OAAOA,CAAA,CAAQ,CACjB,KAAM,IAAI,CAAAC,KAAK,CAACJ,qBAAqB,CAAC,CACxC,CACF,CAAC,CAAC,CAEFC,cAAc,CAACI,WAAW,CAAG,gBAAgB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}