{"ast":null,"code":"\"use strict\";export function getActionFromState(state,options){const normalizedConfig=options?createNormalizedConfigItem(options):{};const routes=state.index!=null?state.routes.slice(0,state.index+1):state.routes;if(routes.length===0){return undefined;}if(!(routes.length===1&&routes[0].key===undefined||routes.length===2&&routes[0].key===undefined&&routes[0].name===normalizedConfig?.initialRouteName&&routes[1].key===undefined)){return{type:'RESET',payload:state};}const route=state.routes[state.index??state.routes.length-1];let current=route?.state;let config=normalizedConfig?.screens?.[route?.name];let params=Object.assign({},route.params);const payload=route?{name:route.name,path:route.path,params}:undefined;if(payload&&config?.screens&&Object.keys(config.screens).length){payload.pop=true;}while(current){if(current.routes.length===0){return undefined;}const routes=current.index!=null?current.routes.slice(0,current.index+1):current.routes;const route=routes[routes.length-1];Object.assign(params,{initial:undefined,screen:undefined,params:undefined,state:undefined});if(routes.length===1&&routes[0].key===undefined){params.initial=true;params.screen=route.name;}else if(routes.length===2&&routes[0].key===undefined&&routes[0].name===config?.initialRouteName&&routes[1].key===undefined){params.initial=false;params.screen=route.name;}else{params.state=current;break;}if(route.state){params.params=Object.assign({},route.params);params.pop=true;params=params.params;}else{params.path=route.path;params.params=route.params;}current=route.state;config=config?.screens?.[route.name];if(config?.screens&&Object.keys(config.screens).length){params.pop=true;}}if(payload?.params.screen||payload?.params.state){payload.pop=true;}if(!payload){return;}return{type:'NAVIGATE',payload};}const createNormalizedConfigItem=config=>typeof config==='object'&&config!=null?{initialRouteName:config.initialRouteName,screens:config.screens!=null?createNormalizedConfigs(config.screens):undefined}:{};const createNormalizedConfigs=options=>Object.entries(options).reduce((acc,[k,v])=>{acc[k]=createNormalizedConfigItem(v);return acc;},{});","map":{"version":3,"names":["getActionFromState","state","options","normalizedConfig","createNormalizedConfigItem","routes","index","slice","length","undefined","key","name","initialRouteName","type","payload","route","current","config","screens","params","Object","assign","path","keys","pop","initial","screen","createNormalizedConfigs","entries","reduce","acc","k","v"],"sources":["/home/user/rork-vibesync-458/node_modules/@react-navigation/core/src/getActionFromState.tsx"],"sourcesContent":["import type {\n  CommonActions,\n  NavigationState,\n  ParamListBase,\n  PartialRoute,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\n\nimport type { NavigatorScreenParams, PathConfig, PathConfigMap } from './types';\n\ntype ConfigItem = {\n  initialRouteName?: string;\n  screens?: Record<string, ConfigItem>;\n};\n\ntype Options = {\n  initialRouteName?: string;\n  screens: PathConfigMap<object>;\n};\n\ntype NavigateAction<State extends NavigationState> = {\n  type: 'NAVIGATE';\n  payload: {\n    name: string;\n    params?: NavigatorScreenParams<State>;\n    path?: string;\n  };\n};\n\nexport function getActionFromState(\n  state: PartialState<NavigationState>,\n  options?: Options\n): NavigateAction<NavigationState> | CommonActions.Action | undefined {\n  // Create a normalized configs object which will be easier to use\n  const normalizedConfig = options\n    ? createNormalizedConfigItem(options as PathConfig<object> | string)\n    : {};\n\n  const routes =\n    state.index != null ? state.routes.slice(0, state.index + 1) : state.routes;\n\n  if (routes.length === 0) {\n    return undefined;\n  }\n\n  if (\n    !(\n      (routes.length === 1 && routes[0].key === undefined) ||\n      (routes.length === 2 &&\n        routes[0].key === undefined &&\n        routes[0].name === normalizedConfig?.initialRouteName &&\n        routes[1].key === undefined)\n    )\n  ) {\n    return {\n      type: 'RESET',\n      payload: state,\n    };\n  }\n\n  const route = state.routes[state.index ?? state.routes.length - 1];\n\n  let current: PartialState<NavigationState> | undefined = route?.state;\n  let config: ConfigItem | undefined = normalizedConfig?.screens?.[route?.name];\n  let params = { ...route.params } as NavigatorScreenParams<ParamListBase>;\n\n  const payload:\n    | {\n        name: string;\n        params: NavigatorScreenParams<ParamListBase>;\n        path?: string;\n        pop?: boolean;\n      }\n    | undefined = route\n    ? { name: route.name, path: route.path, params }\n    : undefined;\n\n  // If the screen contains a navigator, pop other screens to navigate to it\n  // This avoid pushing multiple instances of navigators onto a stack\n  //\n  // For example:\n  // - RootStack\n  //   - BottomTabs\n  //   - SomeScreen\n  //\n  // In this case, if deep linking to `BottomTabs`, we should pop `SomeScreen`\n  // Otherwise, we'll end up with 2 instances of `BottomTabs` in the stack\n  //\n  // There are 2 ways we can detect if a screen contains a navigator:\n  // - The route contains nested state in `route.state`\n  // - Nested screens are defined in the config\n  if (payload && config?.screens && Object.keys(config.screens).length) {\n    payload.pop = true;\n  }\n\n  while (current) {\n    if (current.routes.length === 0) {\n      return undefined;\n    }\n\n    const routes =\n      current.index != null\n        ? current.routes.slice(0, current.index + 1)\n        : current.routes;\n\n    const route: Route<string> | PartialRoute<Route<string>> =\n      routes[routes.length - 1];\n\n    // Explicitly set to override existing value when merging params\n    Object.assign(params, {\n      initial: undefined,\n      screen: undefined,\n      params: undefined,\n      state: undefined,\n    });\n\n    if (routes.length === 1 && routes[0].key === undefined) {\n      params.initial = true;\n      params.screen = route.name;\n    } else if (\n      routes.length === 2 &&\n      routes[0].key === undefined &&\n      routes[0].name === config?.initialRouteName &&\n      routes[1].key === undefined\n    ) {\n      params.initial = false;\n      params.screen = route.name;\n    } else {\n      params.state = current;\n      break;\n    }\n\n    if (route.state) {\n      params.params = { ...route.params };\n      params.pop = true;\n      params = params.params as NavigatorScreenParams<ParamListBase>;\n    } else {\n      params.path = route.path;\n      params.params = route.params;\n    }\n\n    current = route.state;\n    config = config?.screens?.[route.name];\n\n    if (config?.screens && Object.keys(config.screens).length) {\n      params.pop = true;\n    }\n  }\n\n  if (payload?.params.screen || payload?.params.state) {\n    payload.pop = true;\n  }\n\n  if (!payload) {\n    return;\n  }\n\n  // Try to construct payload for a `NAVIGATE` action from the state\n  // This lets us preserve the navigation state and not lose it\n  return {\n    type: 'NAVIGATE',\n    payload,\n  };\n}\n\nconst createNormalizedConfigItem = (config: PathConfig<object> | string) =>\n  typeof config === 'object' && config != null\n    ? {\n        initialRouteName: config.initialRouteName,\n        screens:\n          config.screens != null\n            ? createNormalizedConfigs(config.screens)\n            : undefined,\n      }\n    : {};\n\nconst createNormalizedConfigs = (options: PathConfigMap<object>) =>\n  Object.entries(options).reduce<Record<string, ConfigItem>>((acc, [k, v]) => {\n    acc[k] = createNormalizedConfigItem(v);\n    return acc;\n  }, {});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}