{"ast":null,"code":"'use strict';import{useEffect,useRef,useCallback}from'react';import{useEvent}from\"./useEvent.js\";import{useSharedValue}from\"./useSharedValue.js\";import{isWeb}from\"../PlatformChecker.js\";const IS_WEB=isWeb();export const useScrollViewOffset=IS_WEB?useScrollViewOffsetWeb:useScrollViewOffsetNative;const _worklet_7236655608623_init_data={code:\"function reactNativeReanimated_useScrollViewOffsetJs1(){const{animatedRef,getWebScrollableElement,offset}=this.__closure;if(animatedRef){const element=getWebScrollableElement(animatedRef.current);offset.value=element.scrollLeft===0?element.scrollTop:element.scrollLeft;}}\"};function useScrollViewOffsetWeb(animatedRef,providedOffset){const internalOffset=useSharedValue(0);const offset=useRef(providedOffset??internalOffset).current;const eventHandler=useCallback(function(){const reactNativeReanimated_useScrollViewOffsetJs1=function(){if(animatedRef){const element=getWebScrollableElement(animatedRef.current);offset.value=element.scrollLeft===0?element.scrollTop:element.scrollLeft;}};reactNativeReanimated_useScrollViewOffsetJs1.__closure={animatedRef,getWebScrollableElement,offset};reactNativeReanimated_useScrollViewOffsetJs1.__workletHash=7236655608623;reactNativeReanimated_useScrollViewOffsetJs1.__initData=_worklet_7236655608623_init_data;return reactNativeReanimated_useScrollViewOffsetJs1;}(),[animatedRef,animatedRef?.current]);useEffect(()=>{const element=animatedRef?.current?getWebScrollableElement(animatedRef.current):null;if(element){element.addEventListener('scroll',eventHandler);}return()=>{if(element){element.removeEventListener('scroll',eventHandler);}};},[animatedRef,animatedRef?.current,eventHandler]);return offset;}const _worklet_8663758724346_init_data={code:\"function reactNativeReanimated_useScrollViewOffsetJs2(event){const{offset}=this.__closure;offset.value=event.contentOffset.x===0?event.contentOffset.y:event.contentOffset.x;}\"};function useScrollViewOffsetNative(animatedRef,providedOffset){const internalOffset=useSharedValue(0);const offset=useRef(providedOffset??internalOffset).current;const eventHandler=useEvent(function(){const reactNativeReanimated_useScrollViewOffsetJs2=function(event){offset.value=event.contentOffset.x===0?event.contentOffset.y:event.contentOffset.x;};reactNativeReanimated_useScrollViewOffsetJs2.__closure={offset};reactNativeReanimated_useScrollViewOffsetJs2.__workletHash=8663758724346;reactNativeReanimated_useScrollViewOffsetJs2.__initData=_worklet_8663758724346_init_data;return reactNativeReanimated_useScrollViewOffsetJs2;}(),scrollNativeEventNames);useEffect(()=>{const elementTag=animatedRef?.getTag()??null;if(elementTag){eventHandler.workletEventHandler.registerForEvents(elementTag);}return()=>{if(elementTag){eventHandler.workletEventHandler.unregisterFromEvents(elementTag);}};},[animatedRef,animatedRef?.current,eventHandler]);return offset;}function getWebScrollableElement(scrollComponent){return scrollComponent?.getScrollableNode()??scrollComponent;}const scrollNativeEventNames=['onScroll','onScrollBeginDrag','onScrollEndDrag','onMomentumScrollBegin','onMomentumScrollEnd'];","map":{"version":3,"names":["useEffect","useRef","useCallback","useEvent","useSharedValue","isWeb","IS_WEB","useScrollViewOffset","useScrollViewOffsetWeb","useScrollViewOffsetNative","_worklet_7236655608623_init_data","code","animatedRef","providedOffset","internalOffset","offset","current","eventHandler","reactNativeReanimated_useScrollViewOffsetJs1","element","getWebScrollableElement","value","scrollLeft","scrollTop","__closure","__workletHash","__initData","addEventListener","removeEventListener","_worklet_8663758724346_init_data","reactNativeReanimated_useScrollViewOffsetJs2","event","contentOffset","x","y","scrollNativeEventNames","elementTag","getTag","workletEventHandler","registerForEvents","unregisterFromEvents","scrollComponent","getScrollableNode"],"sources":["/home/user/rork-vibesync-458/node_modules/react-native-reanimated/src/hook/useScrollViewOffset.ts"],"sourcesContent":["'use strict';\nimport { useEffect, useRef, useCallback } from 'react';\nimport type { SharedValue } from '../commonTypes';\nimport type { EventHandlerInternal } from './useEvent';\nimport { useEvent } from './useEvent';\nimport { useSharedValue } from './useSharedValue';\nimport type { AnimatedScrollView } from '../component/ScrollView';\nimport type {\n  AnimatedRef,\n  RNNativeScrollEvent,\n  ReanimatedScrollEvent,\n} from './commonTypes';\nimport { isWeb } from '../PlatformChecker';\n\nconst IS_WEB = isWeb();\n\n/**\n * Lets you synchronously get the current offset of a `ScrollView`.\n *\n * @param animatedRef - An [animated\n *   ref](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef)\n *   attached to an Animated.ScrollView component.\n * @returns A shared value which holds the current offset of the `ScrollView`.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/scroll/useScrollViewOffset\n */\nexport const useScrollViewOffset = IS_WEB\n  ? useScrollViewOffsetWeb\n  : useScrollViewOffsetNative;\n\nfunction useScrollViewOffsetWeb(\n  animatedRef: AnimatedRef<AnimatedScrollView> | null,\n  providedOffset?: SharedValue<number>\n): SharedValue<number> {\n  const internalOffset = useSharedValue(0);\n  const offset = useRef(providedOffset ?? internalOffset).current;\n\n  const eventHandler = useCallback(() => {\n    'worklet';\n    if (animatedRef) {\n      const element = getWebScrollableElement(animatedRef.current);\n      // scrollLeft is the X axis scrolled offset, works properly also with RTL layout\n      offset.value =\n        element.scrollLeft === 0 ? element.scrollTop : element.scrollLeft;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [animatedRef, animatedRef?.current]);\n\n  useEffect(() => {\n    const element = animatedRef?.current\n      ? getWebScrollableElement(animatedRef.current)\n      : null;\n\n    if (element) {\n      element.addEventListener('scroll', eventHandler);\n    }\n    return () => {\n      if (element) {\n        element.removeEventListener('scroll', eventHandler);\n      }\n    };\n    // React here has a problem with `animatedRef.current` since a Ref .current\n    // field shouldn't be used as a dependency. However, in this case we have\n    // to do it this way.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [animatedRef, animatedRef?.current, eventHandler]);\n\n  return offset;\n}\n\nfunction useScrollViewOffsetNative(\n  animatedRef: AnimatedRef<AnimatedScrollView> | null,\n  providedOffset?: SharedValue<number>\n): SharedValue<number> {\n  const internalOffset = useSharedValue(0);\n  const offset = useRef(providedOffset ?? internalOffset).current;\n\n  const eventHandler = useEvent<RNNativeScrollEvent>(\n    (event: ReanimatedScrollEvent) => {\n      'worklet';\n      offset.value =\n        event.contentOffset.x === 0\n          ? event.contentOffset.y\n          : event.contentOffset.x;\n    },\n    scrollNativeEventNames\n    // Read https://github.com/software-mansion/react-native-reanimated/pull/5056\n    // for more information about this cast.\n  ) as unknown as EventHandlerInternal<ReanimatedScrollEvent>;\n\n  useEffect(() => {\n    const elementTag = animatedRef?.getTag() ?? null;\n\n    if (elementTag) {\n      eventHandler.workletEventHandler.registerForEvents(elementTag);\n    }\n    return () => {\n      if (elementTag) {\n        eventHandler.workletEventHandler.unregisterFromEvents(elementTag);\n      }\n    };\n    // React here has a problem with `animatedRef.current` since a Ref .current\n    // field shouldn't be used as a dependency. However, in this case we have\n    // to do it this way.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [animatedRef, animatedRef?.current, eventHandler]);\n\n  return offset;\n}\n\nfunction getWebScrollableElement(\n  scrollComponent: AnimatedScrollView | null\n): HTMLElement {\n  return (\n    (scrollComponent?.getScrollableNode() as unknown as HTMLElement) ??\n    scrollComponent\n  );\n}\n\nconst scrollNativeEventNames = [\n  'onScroll',\n  'onScrollBeginDrag',\n  'onScrollEndDrag',\n  'onMomentumScrollBegin',\n  'onMomentumScrollEnd',\n];\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}